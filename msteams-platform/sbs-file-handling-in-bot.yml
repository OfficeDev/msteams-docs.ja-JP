### YamlMime:Tutorial
title: ボットを使用して Teams でファイルをアップロードする
metadata:
  title: ボットを使用して Teams でファイルをアップロードする
  description: ボットから Teams にファイルをアップロードする方法と、ボットに送信されたファイルを添付ファイルとして受信する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 28/12/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/bots-filesv4.md
  nextTutorialTitle: ボットを介してファイルを送受信する方法の詳細を確認する
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: f2e43a44d6f0a5c0bd8e7c3434dbd36dd92fe938
  ms.sourcegitcommit: c7fbb789b9654e9b8238700460b7ae5b2a58f216
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 06/29/2022
  ms.locfileid: "66485259"
items:
- durationInMinutes: 1
  content: "ボットは Teams API を使用して、個人用チャットでユーザーとファイルを送受信します。 Teams で共有されているファイルはカードとして表示され、アプリ内で豊富な表示を許可できます。 また、このボットは、経費レポート、画像認識、ファイル アーカイブ、ファイル コンテンツの編集を伴う電子署名などの機能の実装にも役立ちます。 \n\n**ボットを使用して Teams でファイルをアップロードする主な機能** \n\n  * ボットを使用して Teams にファイルをアップロードします。\n  * ボットに送信されたファイルを添付ファイルとして受信します。\n  * メッセージで送信されたインライン イメージをフェッチします。\n\nこのステップ バイ ステップ ガイドは、ボットを使用して Teams でファイルをアップロードするのに役立ちます。 次の出力が表示されます。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"出力イメージ\" border=\"true\":::\n"
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境を設定してください。 \n\n* 有効なアカウントを持つ [Microsoft Teams](https://teams.microsoft.com/)\n* [Visual Studio の最新バージョン](https://visualstudio.microsoft.com/downloads/)\n* [.NET Core SDK の最新バージョン](https://dotnet.microsoft.com/download)。\n* [最新バージョンの ngrok](https://ngrok.com/download) (開発ボックス テスト用のみ) または同等のトンネリング ソリューション\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken](https://ngrok.com/download) をインストールします。\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "\n1. [BotBuilder-Samples を](https://github.com/Microsoft/BotBuilder-Samples)開きます。\n1. [ **コード**] を選択します。\n1. ドロップダウン メニューから[ **Open with GitHub Desktop]\\(GitHub Desktop で開く\\**) を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/botbuilder-sample.png\" alt-text=\"リポジトリを複製する\" border=\"true\":::\n\n1. [ **複製**] を選択します。 \n"
- title: ボットを作成して登録する
  durationInMinutes: 5
  content: "次の手順は、ボットを作成してAzure portalに登録するのに役立ちます。\n\n* Azure bot リソースを作成して、Azure Bot Serviceにボットを登録します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* ボットをデプロイする Teams チャネルを追加します。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure bot**」と入力します。\n1. **Enter** キーを押します。\n1. **Azure Bot** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Azure ボット。\":::\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要な **ボット ハンドル** 名を入力します。\n1. **[サブスクリプション**] ドロップダウン リストから、サブスクリプションを選択します。\n1. **[リソース グループ**] ドロップダウン リストから、既存のリソース グループを選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selection-of-resource.png\" alt-text=\"Azure リソースの選択\" border=\"true\":::\n   \n     新しいリソース グループを作成することもできます ([ **新しい** リソースの作成] を選択>、リソース名を入力> **[OK] を選択します**)。\n\n1. 新しいリソース グループを作成した場合は、[新しいリソース グループの場所] ドロップダウン リストから必要な **場所を** 選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/newresource.png\" alt-text=\"新しいリソースの場所の選択\" border=\"true\":::\n\n1. **[Microsoft アプリ ID**] セクションでは、既定で [**新しい Microsoft アプリ ID の作成]** が選択されています。 \n\n    [ **既存のアプリの登録を使用** する] を選択し、 **既存のアプリ ID** と **既存のアプリ パスワード** を入力するか、[ **新しい Microsoft アプリ ID の作成**] を選択します。\n\n    > [!NOTE]\n    > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. [**マルチテナント** としての **アプリの種類**] を選択します。\n\n1. **[確認 + 作成]** を選びます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/review-create.png\" alt-text=\"新しいボットの作成\" border=\"true\":::   \n\n1. 検証に合格した場合は、**[作成]** を選択します。 \n\n    ボット サービスがプロビジョニングされるまで少し時間がかかります。\n\n1. [**リソースに移動**] を選びます。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/deployment.png\" alt-text=\"リソースを選択する\" border=\"true\":::\n    \n    Azure ボットが作成されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/azure-bot-created.png\" alt-text=\"ボットの作成\" border=\"true\":::\n\n **クライアント シークレットを作成するには**\n\n   新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のパネルで、[構成] を選択 **します**。 \n\n   > [!TIP]\n   > 今後参照できるように **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **Microsoft アプリ ID** の横にある [**管理**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"ボットを管理する\":::\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/new-client-secret.png\" alt-text=\"クライアント シークレットの追加\" border=\"true\":::\n\n        \n   [ **クライアント シークレットの追加]** ウィンドウが表示されます。\n\n1. **「説明」と入力します**。\n\n1. [**追加**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-client-secret.png\" alt-text=\"クライアント シークレットと説明を追加する\" border=\"true\"::: \n\n   \n1. [ **値** ] 列で、[ **クリップボードにコピー**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/copy-value.png\" alt-text=\"値をクリップボードにコピーする\" border=\"true\":::\n\n         \n   > [!TIP]\n   > 今後参照できるように **、クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n **Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/go-to-home.png\" alt-text=\"ホームを選択する\" border=\"true\":::    \n\n   \n1. **最近使用したリソース** からボットを選択します。\n\n1. 左側のウィンドウで **[チャネル** ] を選択します。 \n\n1. **Microsoft Teams を選択する** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. [ **利用規約**] に同意するには、チェック ボックスをオンにします。\n\n1. **[同意する**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/terms.png\" alt-text=\"用語を選択する\" border=\"true\":::\n\n  \n1. **[適用]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/apply-teams.png\" alt-text=\"Microsoft teams\" border=\"true\":::\n\n  \n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok またはコマンド プロンプトを使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに記載されている手順に従って、ngrok にサインアップして認証します。 `ngrok http -host-header=localhost 3978` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n   1. ngrok から HTTPS URL をコピーします。\n   \n      :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"ngrok HTTPS URL\":::\n      \n      > [!NOTE]\n      > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n      > は `WebAppDomain` 、完全修飾ドメイン名であり、ドメイン名には含 `https://` まれません。\n\n   1.  作成した Azure ボットの **設定** で、[構成] を選択 **します**。\n\n   1.  **メッセージング エンドポイント** で、ngrok から入手できる HTTPS URL を使用し、URL の最後に **/api/messages** を追加します。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-api-teams-bot.png\" alt-text=\"api を追加する\" border=\"true\":::\n    \n   1. **[適用]** を選択します。\n\n      Azure Bot Serviceでボットが正常に設定されました。\n"
- title: Azure AD アプリの登録を更新する
  durationInMinutes: 5
  content: "1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のウィンドウで、[ **アプリの登録**] を選択します。\n\n1. ボットを選択します。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/select-your-bot.png\" alt-text=\"ボットの選択\" border=\"true\":::\n\n1. [ **API の公開] を選択します**。\n\n1. [ **設定**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/set-api.png\" alt-text=\"api の設定\" border=\"true\":::\n\n1. **アプリケーション ID URI を** 次の`api://your ngrok/botid-{your AppID}`形式で設定します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/app-id-uri1.png\" alt-text=\"リダイレクト URI\" border=\"true\":::\n\n   次の図は、ドメイン名を示しています。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/expose-api.png\" alt-text=\"api\" border=\"true\":::\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、新しい ngrok サブドメイン名です `f631****.ngrok.io` 。\n\n1. **[スコープの追加]** を選択します。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selectscope.png\" alt-text=\"スコープの選択\" border=\"true\":::\n\n1. 表示されるパネルで、**スコープ名** として入力`access_as_user`します。\n\n1. **[同意できるユーザー] を** `Admins and users`[ .\n\n1. スコープの適切な値を使用して管理者とユーザーの同意プロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * **同意表示名管理** 入力`Teams can access the user’s profile`します。\n\n     * **同意の説明管理** 入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **ユーザー同意表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **ユーザーの同意の説明** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-a-scope.png\" alt-text=\"スコープの追加\" border=\"true\":::\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://9179****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/access-as-user.png\" alt-text=\"ユーザーとしてアクセスを表示する\" border=\"true\":::\n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。\n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selectclientapp.png\" alt-text=\"クライアント アプリ\" border=\"true\":::\n\n1. **クライアント ID を** 入力します。 `1fec8e78-bce4-4aaf-ab1b-5451cc387264` Teams モバイルアプリケーションまたはデスクトップ アプリケーションの場合。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-mobile.png\" alt-text=\"クライアント モバイル\" border=\"true\":::  \n\n   Teams Web アプリケーションの **クライアント ID:**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` を入力できます。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-web.png\" alt-text=\"クライアント ID Web\" border=\"true\":::\n\n   次の図は **、クライアント ID を** 表示します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-teams-bot.png\" alt-text=\"id を表示する\" border=\"true\":::   \n\n1. 左側のパネルで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、AAD アプリが別のテナントに登録されている場合にのみ、API アクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permission.png\" alt-text=\"追加されたアクセス許可\" border=\"true\":::\n\n1. **Microsoft Graph** を選択します。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. **User.Read** in permission を追加します。\n\n1. **[アクセス許可の追加]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permissions.png\" alt-text=\"委任されたアクセス許可が追加されました\" border=\"true\":::\n\n1. 左側のパネルで [ **認証** ] を選択してリダイレクト URI を設定します。\n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。\n\n     1. **[プラットフォームの追加]** を選択します。\n    \n     1. **[Web]** を選びます。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configure-web.png\" alt-text=\"Web 構成\" border=\"true\"::: \n\n     1. 完全修飾ドメイン名に追加して、アプリの `auth-end` リダイレクト URI を入力します。</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして **、暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。  \n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configuration-web.png\" alt-text=\"構成\" border=\"true\":::\n\n  ** **TeamsAppManifest を** 更新します。\n\n  1. 左側のウィンドウで **[マニフェスト]** を選択します。\n\n  1. 構成項目 **\"accessTokenAcceptedVersion\":2 を** 設定します。 設定されていない場合は、その値を [**保存]** に`2`変更します。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/manifest-value.png\" alt-text=\"マニフェスト ファイルを開く\" border=\"true\":::\n    \n     > [!NOTE]\n     > Teams でボットを既にテストしている場合は、このアプリからサインアウトして Teams からサインアウトします。 この変更を確認するには、もう一度サインインします。\n\n  **Bot Service接続を設定するには**\n\n  1. **[構成] ページ** > の **[OAuth 接続設定の追加]** に移動します。\n\n  1. **[OAuth 接続設定の追加]** を選択します。\n\n  1. **[新しい接続設定]** で、次の詳細を入力します。\n\n      * **名前を入力します**`name for your new connection setting. You can use the name in the settings of your bot service code`。\n      * **[サービス プロバイダー]** を選択します `Azure Active Directory V2`。\n      * **クライアント ID** your `Microsoft App ID`.\n      * **クライアント シークレット** `Value of the client secret ID`.\n      * **Token Exchange URL は** 、API エンドポイントを `Application ID URI` 公開するときに、以前に取得した URL を使用します。\n      * **テナント ID を** 入力します `common`。\n      * **スコープは次のように** 入力 `User.Read`します。\n \n  1. **[保存]** を選択します。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/new-connection-setting.png\" alt-text=\"新しい接続の設定\" border=\"true\":::\n"
- title: アプリの設定とマニフェスト ファイルを設定する
  durationInMinutes: 2
  content: "1. 複製されたリポジトリで **appsettings.json** に移動します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-file.png\" alt-text=\"アプリ設定マニフェスト\" border=\"true\":::\n                  \n1. Visual Studio で **appsettings.json を** 開きます。\n\n1. 次の情報を更新します。\n\n     * **MultiTenant** に設定`\"MicrosoftAppType\"`します。\n     * ボットの **Microsoft アプリ ID に** 設定`\"MicrosoftAppId\"`します。\n     * ボットのクライアント シークレット ID 値に設定 `\"MicrosoftAppPassword\"` します。\n     * MultiTenant ボットの場合は空白として設定 `\"MicrosoftAppTenantId\"` します。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-json1.png\" alt-text=\"visual studio の appsettings ファイル\" border=\"true\":::\n       \n1. 複製されたリポジトリで **manifest.json** に移動します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-app-manifest.png\" alt-text=\"マニフェスト ファイルを開く\" border=\"true\":::\n     \n1. Visual Studio で **manifest.json を** 開き、次の変更を加えます。\n\n   すべての出現箇所をボットの `<<YOUR-MICROSOFT-APP-ID>>` **Microsoft アプリ ID に** 置き換えます。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/bot-id.png\" alt-text=\"ボット ID を置き換える\" border=\"true\"::: \n"
- title: サービスをビルドして実行する
  durationInMinutes: 2
  content: "**Visual Studio またはコマンド ラインを使用してサービスをビルドして実行するには**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/visualstudio)\n\n  1. Visual Studio を起動します。\n  \n  1. **ファイル** > **を開く** > **プロジェクト/ソリューション** に移動します。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/VS-open-file.png\" alt-text=\"visual studio\" border=\"true\":::      \n   \n  1. **56.teams-file-upload** フォルダーから **TeamsFileUpload.csproj** ファイルを選択します。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/csproj-folder.png\" alt-text=\"フォルダー\" border=\"true\":::        \n\n  1. **ビュー** から **ソリューション エクスプローラー** を開きます。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/solutionexplorer.png\" alt-text=\"view\" border=\"true\":::\n\n  1. **TeamsFileUpload** を右クリックします。\n\n  1. [ **スタートアップ プロジェクトとして設定]** を選択します。\n     \n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-file-upload.png\" alt-text=\"プロジェクトを起動する\" border=\"true\":::\n     \n  1. **F5** キーを押してプロジェクトを実行します。\n\n  1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/certificate.png\" alt-text=\"ca\" border=\"true\":::\n\n     \n     Web ページが開き、メッセージが表示されます **。ボットの準備は完了です。**\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/file-bot.png\" alt-text=\"ボットの準備が整いました\" border=\"true\":::\n\n  \n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウで **BotBuilder-Samples >サンプル > csharp_dotnetcore > 50.teams-messaging-extensions-search** に移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-Messaging-Extensions-Search/dotnetruncmd.png)\n"
- title: Teams でファイル アップロード ボットを追加する
  durationInMinutes: 2
  content: "1. 複製されたリポジトリで、 **csharp_dotnetcore** > **56.teams-file-upload** > **TeamsAppManifest** に移動します。\n\n1. **TeamsAppManifest** フォルダーに存在する次のファイルを含む.zipを作成します。 \n  * manifest.json\n  * icon-outline.png\n  * icon-color.png \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-upload-manifest.png\" alt-text=\"マニフェスト フォルダー\" border=\"true\":::\n\n 1. **Microsoft Teams** に移動します。\n\n 1. **[アプリ]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/AppStore1.png\" alt-text=\"アプリの追加\" border=\"true\"::: \n\n 1. 左下隅にある [ **アプリの管理**] を選択します。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/manage-apps.png\" alt-text=\"アプリ\" border=\"true\":::\n\n 1. **[カスタム アプリをアップロードする]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/upload-custom-app.png\" alt-text=\"カスタム アプリ\" border=\"true\":::\n\n 1. [ **開く** ] を選択して、 **TeamsAppManifest** フォルダーに作成した.zip ファイルをアップロードします。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-manifest.png\" alt-text=\"マニフェストを開く\" border=\"true\"::: \n\n 1. [**追加**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-file-bot.png\" alt-text=\"追加\" border=\"true\"::: \n\n  1. 作成メッセージ領域に **「hi」** と入力し、カードで応答するまで数秒待ちます。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/respond-bot.png\" alt-text=\"ボットによるカード送信\" border=\"true\":::\n"
- title: Teams でボットと対話する
  durationInMinutes: 2
  content: "1. ボットにメッセージを送信します。 ファイルをアップロードするアクセス許可のカードで応答します。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-1.png\" alt-text=\"ボット送信カード\" border=\"true\":::\n\n1. **[許可] を選択します**。 `teams-logo.png`ファイルはファイル ディレクトリにアップロードされ、ダウンロードの準備が整います。\n     \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-2.png\" alt-text=\"teams ロゴ\" border=\"true\":::\n\n1. Teams の添付ファイルとしてボットにファイルを送信します。 メッセージ `Received and Saved`で応答します。 [ファイル] タブから添付 **ファイル** を表示できます。\n    \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-3.png\" alt-text=\"ファイルを送信する\" border=\"true\":::\n\n1. 添付ファイルとして画像を送信します。 メッセージ `Received and saved`で応答します。 画像は、チャット ウィンドウと [ **ファイル** ] タブで確認できます。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-4.png\" alt-text=\"received\" border=\"true\":::\n  \n    > [!NOTE]\n    >  ボットが個人用スコープにインストールされると、ユーザーはボットとの 1 つのチャット会話に参加します。\n  \n"
- title: チャレンジを完了する
  durationInMinutes: 1
  content: "このようなことを思い付いたのですか?\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"最終的な画像\" border=\"true\"::: \n"
- content: チュートリアルを完了しました。 これで、ボットを使用して Teams でファイルをアップロードできるようになりました。
