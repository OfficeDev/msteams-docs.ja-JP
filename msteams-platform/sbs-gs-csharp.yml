### YamlMime:Tutorial
title: C を使用して初めてのアプリをビルドする#
metadata:
  title: C を使用したHello World#
  description: このチュートリアルでは、C# を使用してHello Worldアプリをビルドする方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 概要の概要に戻る
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 1e479558199f0e34baa09003475bb55efb4962be
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64736960"
items:
- durationInMinutes: 1
  content: >
    タブ、ボット、およびメッセージ拡張機能機能を使用して最初のアプリを構築することで、アプリ開発のMicrosoft Teamsを開始します。


    >このアプリにはすべての機能があり、それぞれに独自の UI と UX があります。


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="このアプリを示す図には、3 つの機能があります。" border="false":::


    このチュートリアルでは、次のことを学習します。


    - 新しいプロジェクトを設定する方法

    - C# と Visual Studio 2019 を使用して、それぞれ異なる機能を持つ 3 つのアプリ (タブ、ボット、メッセージ拡張機能) をビルドする方法

    - 開発者ポータルからアプリをデプロイする方法
- title: 前提条件
  durationInMinutes: 1
  content: "Teams アプリをビルドしてデプロイするためにインストールする必要があるツールの一覧を次に示します。\n\n| &nbsp; | インストール | using... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • **ASP.NET と Web 開発** <br> • **.NET Core クロスプラットフォーム開発** | .NET。 Visual Studio 2019 の無料コミュニティ エディションをインストールし、ワークロードもインストールできます。 |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git を使用して、GitHubのサンプル C# アプリ リポジトリを使用します。 |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teamsアプリ機能 (会話型ボットとメッセージング拡張機能) には、受信接続が必要です。 開発システムをトンネル経由でTeams公開する必要があります。 タブのみを含むアプリにはトンネルは必要ありません。 このパッケージは、(npm `devDependencies`を使用して) プロジェクト ディレクトリ内にインストールされます。 |\n| &nbsp; | [Teams ツールキット](#install-teams-toolkit) | アプリのプロジェクト スキャフォールディングを作成する Visual Studio 2019 拡張機能。 最新バージョンを使用します。 |\n| &nbsp; | [Teams の開発者ポータル](https://dev.teams.microsoft.com/) | 組織またはTeams ストアを含む、Teams アプリを構成、管理、配布するための Web ベースのポータル。 |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams、チャット、会議、通話用のアプリを通じて作業するすべてのユーザーと共同作業を行うことができます。すべて 1 か所で行うことができます。 |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) および [Microsoft Azure CLI](/cli/azure/install-azure-cli) | 保存されたデータにアクセスしたり、Azure でTeams アプリのクラウドベースのバックエンドをデプロイしたりするための Azure ツール。 |\n\n\n## <a name=\"verify-git-installation\"></a>git のインストールを確認する\n\nインストールVisual Studioパスへの追加`git`を求めるメッセージが表示されたら、それを選択します。 \n\nインストールされている git のバージョンを確認するには:\n\n1. ターミナル ウィンドウを開きます。 \n2. 次のコマンドを実行して、コンピューターに `git` インストールされているバージョンを確認します。\n\n    ```bash\n    $ git --version\n    ```\n\n    出力例: `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>Teams Toolkitをインストールする\n\nTeams Toolkitは、アプリのプロジェクト スキャフォールディングを作成するためのツールを使用して開発プロセスを簡略化するのに役立ちます。 選択したすべての機能に必要なディレクトリ構造が作成され、必要なファイルが配置され、プロジェクトをビルドする準備が整います。\n\nTeams Toolkitは、Visual Studio 2019 拡張機能として使用できます。\n\nTeams Toolkit拡張機能をインストールするには:\n\n1. Visual Studio 2019 を開 **き、ExtensionsManage** >  拡張機能を選択します。\n1. 検索ボックスに「**Teams Toolkit**」と入力します。\n1. Teams Toolkitの横にある [**ダウンロード**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"イメージは、Teams Toolkitのインストールを示しています\"::: \n\n    変更は、Visual Studio 2019 を閉じた後で使用できます。 これは、拡張機能のインストール後に 2019 Visual Studio再起動する必要があるため、必須です。\n\n1. **[閉じる]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"イメージは、Teams Toolkitに対して行われたインストールを示しています\":::\n\n1. Visual Studio 2019 を閉じます。\n    \n    VSIX インストーラーが開き、拡張機能をインストールする手順が示されます。\n\n1. VSIX インストーラーの指示に従って、ツールキットのインストールを完了します。\n1. Visual Studio 2019 をもう一度開きます。\n\nTeams アプリは、Visual Studio 2019 でテンプレートとして利用できるようになります。\n\nTeams Toolkitは[、Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit) でも確認できます。\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Teams開発テナントを設定する\n\n**テナント** は、チャット、ファイル共有、会議の実行を行う、Teams内の組織のスペースやコンテナーのようなものです。 この領域は、アプリをサイドロードしてテストする場所でもあります。 テナントで開発する準備ができているかどうかを確認しましょう。\n\n### <a name=\"check-for-sideloading-option\"></a>サイドローディング オプションを確認する\n\nアプリを作成したら、アプリを配布せずに Teams に読み込む必要があります。 このプロセスはサイドローディングと呼ばれます。 このオプションを表示するには、Microsoft 365 アカウントにサインインします。\n\n> [!NOTE]\n> ローカル環境でアプリをプレビューおよびテストするには、サイドローディングTeams必要です。 有効になっていない場合は、ローカルでアプリをプレビューしてテストTeamsできません。\n\nテナントは既にあり、管理者はアクセスできますか? 実際に行うかどうかを確認しましょう。\n\nTeamsでアプリをサイドロードできるかどうかを確認します。\n\n1. Teams クライアントで、[**ストア**] アイコンを選択します。\n1. [ **アプリの管理**] を選択します。\n1. **カスタム アプリをアップロード** するオプションを探します。 このオプションが表示された場合は、サイドローディング アプリが有効になります。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"図は、Teamsでカスタム アプリをアップロードするオプションを示しています。\":::\n\n    > [!NOTE]\n    > Teamsカスタム アプリをアップロードするオプションが表示されない場合は、Teams管理者に問い合わせてください。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>無料のTeams開発者テナントを作成する (省略可能)\n\nTeams アカウントをお持ちでない場合は、無料で入手できます。 Microsoft 365開発者プログラムに参加してください。\n\n1. [Microsoft 365 開発者プログラム](https://developer.microsoft.com/microsoft-365/dev-program)に移動します。\n1. [ **今すぐ参加** ] を選択し、画面の指示に従います。\n1. ウェルカム画面で、[ **E5 サブスクリプションのセットアップ**] を選択します。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Microsoft 365開発者プログラムにサインアップした後に表示される内容の例。\":::\n\n1. 設定した管理者アカウントを使用して、Teamsにサインインします。 **Teamsにカスタム アプリ オプションアップロード** があることを確認します。\n\n## <a name=\"get-a-free-azure-account\"></a>無料の Azure アカウントを取得する\n\nアプリをホストする場合、または Azure でリソースにアクセスする場合は、Azure サブスクリプションが必要です。 [開始する前に無料アカウントを作成](https://azure.microsoft.com/free/) します。\n\nこれで、すべてのツールが用意され、アカウントが設定されました。 次に、開発環境を設定し、ビルドを開始しましょう。\n\n> [!NOTE]\n> プラットフォームで適切なターミナル ウィンドウを使用します。 これらの例では Git Bash を使用しますが、ほとんどのプラットフォームで実行できます。\n\n最新バージョンのVisual Studioを開き、更新プログラムをインストールします。\n\n同じターミナル ウィンドウを使用して、このチュートリアルのコマンドを実行できます。\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>サンプルをダウンロードする\n\nこのチュートリアルでは、 [Hello, World を使用します。](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) C# のサンプル。 GitHubからダウンロードして複製できます。\n\nこのサンプルを使用するには、次のいずれかの方法でサンプル リポジトリを複製します。\n\n- [Git Bash の使用](#to-use-git-bash-to-clone-the-sample-repo)\n- [Visual Studio 2019 の使用](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>Git Bash を使用してサンプル リポジトリを複製するには\n\n- ターミナル ウィンドウで次のコマンドを実行して、サンプル リポジトリをコンピューターに複製します。\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    C# アプリのサンプル リポジトリは、既定の場所にあるコンピューターに複製されます。\n\n    > [!TIP]\n    > この[リポジトリ](https://github.com/OfficeDev/Microsoft-Teams-Samples)を[フォーク](https://help.github.com/articles/fork-a-repo/)して、変更を変更してGitHubに保存できます。\n\n    <a name=\"BuildRun\"></a>\n\n    複製されたリポジトリは、Visual Studio 2019 で開いて表示できます。 \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>Visual Studio 2019 を使用してサンプル リポジトリを複製するには\n\n1. Visual Studio 2019 を開きます。\n1. [ **リポジトリの複製] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"c# Teams アプリのサンプル リポジトリを複製する\" border=\"false\":::\n\n1. リポジトリを複製するためのパスとして入力 `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"c# Teams アプリのサンプル リポジトリを複製する\" border=\"false\":::\n\n1. リポジトリを複製する場所を入力し、[複製] を選択 **します**。\n\n    サンプル リポジトリが複製され、Visual Studioが開きます。 複製されたリポジトリは **、ソリューション エクスプローラー** で表示できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"複製された c# Teams アプリのサンプル リポジトリ\" border=\"false\":::\n\nサンプル リポジトリを複製したので、Teamsの最初の C# アプリをビルドしましょう。\n"
- title: 最初の C# アプリをビルドして実行する
  durationInMinutes: 1
  content: "\nC# サンプル アプリのリポジトリを複製したら、ローカル環境でアプリをビルドして実行できます。\n\nこのページでは、次のことを学習します。\n1. [初めてのアプリを構築する](#build-your-first-app)\n1. [サンプル アプリをローカルにデプロイする](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>初めてのアプリを構築する\n\nワークスペースの作成後に **、ソリューション エクスプローラー** でプロジェクト構造を表示できます。 これで、アプリをビルドして実行します。\n\n**複製されたサンプルをビルドして実行するには**\n\n1. ソリューション ファイル **Microsoft.Teamsを開きます。サンプルの** **Microsoft-Teams-Samples/samples/app-hello-world/csharp** ディレクトリの Samples.HelloWorld.sln。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"ソリューション ディレクトリ構造Hello World示す画像\" border=\"false\":::\n\n1. **Project** メニューを選択し、**Microsoft.Teamsを選択します。Samples.HelloWorld.Web プロパティ**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"[プロパティ] オプションを選択Projectメニューを示す画像\" border=\"false\":::\n\n1. **[プロパティ**] ウィンドウの左側のウィンドウで [**デバッグ**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"プロパティ ウィンドウを示す画像\" border=\"false\":::\n\n1. 画面を移動して **Web サーバー 設定を** 表示します。\n\n1. **[デバッグ**] ウィンドウで次の設定を行います。\n    - **アプリ URL を** `http://localhost:3333/`.\n    - **[SSL を有効にする] をオフにします**。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"C# プロジェクトのプロパティの Web サーバー設定を示す画像\" border=\"false\":::\n\n1. [ **ビルド]** メニューから [ **ソリューションのビルド]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"ビルドが完了したことを示す画像\" border=\"false\":::\n\n1. **F5** キーを選択するか、[**デバッグ**] メニューの [**デバッグの開始**] を選択してサンプルを実行します。\n\n    アプリが起動すると、ブラウザー ウィンドウが開きます。 アプリのルートが表示されます。 次の URL に移動して、すべてのアプリ URL が読み込まれていることを確認できます。\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"ローカル ホストを示す画像\" border=\"false\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"アプリの Hello ページを示す画像\" border=\"false\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"アプリの最初のタブを示す画像\" border=\"false\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"アプリの 2 番目のタブを示す画像\" border=\"false\":::\n\n    > [!Note]\n    > エラーが発生 `Could not find a part of the path … bin\\roslyn\\csc.exe`した場合は、コマンドを使用してパッケージを更新します `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`。\n\n## <a name=\"deploy-your-sample-app-locally\"></a>サンプル アプリをローカルにデプロイする\n\nMicrosoft Teams アプリは、1 つ以上の機能を提供する Web アプリケーションです。 Teams プラットフォームがアプリを読み込むことができるように、アプリをインターネット上で使用できるようにします。 コンピューター上のローカル プロセスへのトンネルを作成するために使用 `ngrok` するアプリをホストします。\n\nアプリをホストした後、ルート URL (例: `https://yourteamsapp.ngrok.io` `https://yourteamsapp.azurewebsites.net`.\n\n### <a name=\"tunnel-using-ngrok\"></a>ngrok を使用したTunnel\n\nngrok をインストールした後、アプリをローカルにデプロイするためのトンネルを作成できます。\n\n1. 新しいターミナル ウィンドウを開きます。\n1. 次のコマンドを実行してトンネルを作成します。 サンプル アプリでは、ポート 3333 を使用します。\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    ngrok トンネルが作成されます。 次に例を示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"ngrok トンネルを示す画像\" border=\"false\":::\n\n    ngrok トンネル URL を追加`hello``first`して`second`、アプリのさまざまなタブ ページを表示することもできます。\n    \n    Ngrok はインターネットからの要求をリッスンし、ポート 3333 で実行されているアプリにルーティングします。\n\nアプリのローカルデプロイを確認するには:\n\n1. ブラウザーを開きます。\n1. 次の URL を使用してアプリを読み込みます。\n\n    `https://<forwarding address in ngrok console session>/`\n\n    URL の例を次に示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"ngrok トンネルでローカルで実行されている C# アプリを示す画像\" border=\"false\":::\n\n1. ngrok コンソールで転送アドレスをメモしておきます。 Teamsにアプリをデプロイするには、この URL が必要です。\n\n    > [!NOTE]\n    > [ビルド](#build-your-first-app)中に別のポートを使用した場合は、同じポート番号を使用してトンネルを`ngrok`セットアップしてください。\n    > [!TIP]\n    > 別のターミナル ウィンドウで実行 `ngrok` することをお勧めします。 アプリを停止、再構築、再実行する必要がある場合に、アプリに干渉し続ける `ngrok` のに役立ちます。 セッションでは `ngrok` 、このウィンドウに役立つデバッグ情報が表示されます。\n    > [!IMPORTANT]\n    > 無料版の ngrok を使用する場合、アプリは開発用コンピューターの現在のセッション中にのみ使用できます。 マシンがシャットダウンまたはスリープ状態になった場合は使用できません。 サービスを再起動すると、新しいアドレスが返されます。 次に、古いアドレスを使用するすべての場所を更新する必要があります。 テスト用にアプリを共有する場合は、この手順を忘れないでください。\n"
- title: 開発者ポータルを使用して最初の C# アプリを構成する
  durationInMinutes: 1
  content: "\n[開発者ポータル](https://dev.teams.microsoft.com/)を使用して、アプリ パッケージをTeamsにアップロードし、アプリ機能を構成できます。 開発者ポータルは、アプリの作成と登録を簡略化するTeams アプリです。 Teams ストアからインストールします。\n\nTeams アプリをビルドしてテストしたら、開発者ポータルを使用してアプリを構成してプレビューできます。\n\nこのページでは、 [開発者ポータルでアプリ パッケージを構成](#configure-the-app-package-in-developer-portal)する方法について説明します。\n\n<details>\n<summary>Visual Studio 2019 の [発行] オプション</summary>\n\nこのチュートリアルでは、開発者ポータルを使用してアプリの機能を構成し、アプリを発行します。 \n\nただし、Visual Studio 2019 には、Azure を含むさまざまなプロバイダーへのアプリデプロイのサポートが組み込まれています。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"Visual Studio 2019 の [Azure に発行] メニュー項目を示す画像\" border=\"false\":::\n\nMicrosoft Azureは、.NET アプリケーションを無料レベルでホストします。 サンプルを実行するのに十分な共有インフラストラクチャを使用します `Hello World` 。 詳細については、 [新しい無料の Azure アカウントの作成に関するページを](https://azure.microsoft.com/free/)参照してください。\n\nこのオプションを使用する場合は、Azure サイトと Azure リソースの詳細を入力し、アプリを発行できます。 \n\nこのチュートリアルでは、この手順を使用する必要はありません。\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>開発者ポータルでアプリ パッケージを構成する\n\n[開発者ポータル](https://dev.teams.microsoft.com/)を使用して、アプリ パッケージとその機能を構成できます。 開発者ポータルは、アプリの作成と登録を簡略化するTeams アプリです。 Teams ストアからインストールします。\n\nアプリ パッケージの構成には、次のものが含まれます。\n\n1. [開発者ポータルへのアプリ パッケージのインポート](#import-the-app-package-in-developer-portal)\n1. [アプリ機能の構成](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>開発者ポータルでアプリ パッケージをインポートする\n\nアプリ パッケージをインポートするには:\n\n1. Microsoft Teams を開きます。\n\n1. 左側のバーから **[ストア]** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: アイコンを選択します。\n\n1. 検索バーで **開発者ポータル** を検索し、 **開発者ポータル** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"開発者ポータル アプリを選択する\" border=\"false\":::\n\n1. [**開く**]を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"開いている Developer Portal アプリを示す画像\" border=\"false\":::\n\n    開発者ポータルが開きます。\n\n1. [アプリ] タブ **を** 選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"開発者ポータル アプリ\" border=\"false\":::\n\n1. [ **アプリのインポート]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"[アプリのインポート] ボタンを示す画像\" border=\"false\":::\n\n1. C# サンプル リポジトリ ディレクトリ構造の次のパスからアプリ パッケージ `helloworldapp.zip` を選択します。\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    **Hello World** アプリは開発者ポータルにインポートされます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Teamsにインポートされたアプリを示す画像\" border=\"false\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>開発者ポータルでアプリのツアーに参加する\n\nアプリを開発者ポータルにインポートしたら、マニフェスト ファイルなど、その詳細を表示できます。\n\n#### <a name=\"view-app-information\"></a>アプリ情報を表示する\n\n1. 開発者ポータルの左側のウィンドウで [ **基本情報** ] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"イメージは、開発者ポータルの左側のウィンドウを示しています\" border=\"false\":::\n\n1. 基本的な情報から次の情報に注意してください。\n    - アプリ ID\n    - 開発者情報\n    - アプリの URL\n\n1. 左側のウィンドウで **[ブランド** ] を選択して、ブランド情報を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"アプリのブランド情報を示す画像\" border=\"false\":::\n\n    これらの詳細は、配布用の新しいアプリを作成する場合に重要です。\n\n#### <a name=\"view-app-features\"></a>アプリの機能を表示する\n\n- 開発者ポータルの左側のウィンドウから **[アプリの機能** ] を選択します。\n\n    アプリの機能が右側のウィンドウに表示されます。 個人用アプリ、ボット、およびメッセージ拡張機能のカードを表示できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"アプリの機能を示す画像\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>アプリ マニフェストを表示する\n\nマニフェスト ファイルを使用して、アプリの機能、必要なリソース、その他の重要な属性を構成します。\n\nアプリ マニフェストを表示するには:\n\n- 左側のパネルで **[発行** ] を選択してドロップダウン リストを開き、[ **アプリ パッケージ**] を選択します。\n    \n    マニフェスト ファイルが右側のウィンドウに表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"開発者ポータルのアプリ マニフェスト ファイルを示す画像\" border=\"false\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>アプリの機能を構成する\n\n開発者ポータルにアプリをインポートしたら、次の手順ではアプリの機能を構成します。 開発者ポータルには、さまざまなセクションのすべてのアプリ情報が含まれています。 これにより、アプリの機能を簡単に構成できます。\n\n開発者ポータルを使用すると、次のことができます。\n- [個人用タブ アプリを構成する](#configure-personal-tab-app)\n- [ボットを構成する](#configure-bot)\n- [メッセージ拡張機能を構成する](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>個人用タブ アプリを構成する\n\n個人用タブ アプリを構成するには:\n\n1. [アプリ **機能**] :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ウィンドウの **[個人用アプリ**] カードのアイコンを選択し、[**編集]** を選択します。\n\n    Hello タブの詳細が表示されます。\n\n1. [Hello] タブの :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: アイコンを選択し、[ **編集]** を選択して更新用のアプリの詳細を開きます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Hello タブ メニューを示す画像\" border=\"false\":::\n\n1. [個人用アプリに追加] タブで、[Hello **] タブのアプリ** の詳細を入力します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"Hello タブの詳細を示す画像\" border=\"false\":::\n\n    次の詳細を入力します。\n    - **[名前**]: [Hello] タブ。\n    - **コンテンツ URL** と **Web サイト URL**: ngrok コンソール セッションの転送アドレス。\n    - **コンテキスト**: [ **個人用] タブを選択します**。\n\n1. **[更新]** を選択します。\n\n    [Hello] タブの詳細は、[ **個人用アプリ** ] ウィンドウに表示されます。\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"保存する Hello タブの詳細を示す画像\" border=\"false\":::\n\n    **個人用アプリ** ウィンドウに、新しいタブと自動的に作成された [バージョン情報] タブが表示されるようになりました。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"Hello タブと [バージョン情報] タブの詳細を示す画像\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>ボットを構成する\n\nボット機能をアプリに簡単に追加できます。 Hello Worldサンプル アプリには、その一部としてボットが既にありますが、Teamsに登録する必要があります。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"アプリ ID なしでインポートされたボット アプリを示す画像\" border=\"false\":::\n\nサンプルからインポートされたボットに、アプリ ID が関連付けられていない。 削除し、新しいボットを作成する必要があります。 開発者ポータルは、新しいアプリ ID を作成し、Teamsに登録します。\n\nボットの追加と構成には、次の操作が含まれます。\n\n1. [新しいボットを追加する](#to-add-a-new-bot)\n1. [アプリへのボットの追加](#to-add-bot-to-app)\n1. [ボット スコープの構成](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>新しいボットを追加するには\n\n1. [**アプリ機能**] :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ウィンドウの **ボット** カードのアイコンを選択し、[削除] を選択 **します**。\n\n1. 機能を追加する **ツール** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"ツール オプションを示す画像\" border=\"false\":::\n\n1. [**ツール**] ウィンドウで **[ボット管理**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"ボット管理ウィンドウを示す画像\" border=\"false\":::\n\n1. **[ボット管理**] ウィンドウで [**+ 新しい** ボット] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"新しいボット オプションを示す画像\" border=\"false\":::\n\n1. ボットに適した名前を入力し、[ **追加**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"ボットを追加する方法を示す画像\" border=\"false\":::\n\n    [ **構成]** ウィンドウが表示され、左側のウィンドウに新しいボットの詳細が表示されます。\n\n1. コンソールから `ngrok` 転送 URL を入力し、[保存] を選択 **します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"ボット エンドポイントを追加する方法を示す画像\" border=\"false\":::\n\n1. [ **クライアント シークレット** ] を選択し、[ **クライアント シークレットをボットに追加** する] を選択して、ボットのパスワードを生成します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"[クライアント シークレット] セクションを示す画像\" border=\"false\":::\n\n    開発者ポータルは、ボットのパスワードを生成します。\n\n    アイコンを :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: 使用してパスワードをコピーできます。 このチュートリアルでは、コピーする必要はありません。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"生成されたクライアント シークレットを示す画像\" border=\"false\":::\n\n1. [**OK**] を選択します。\n\n1. **ボット<** 選択して、[**ボット管理**] ウィンドウに戻ります。\n\n    **[ボット管理**] ウィンドウには、アプリ ID で追加された新しいボットが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"アプリ ID を持つ新しいボットを示す画像\" border=\"false\":::\n\n1. **[クライアント シークレット**] セクションのパスワードと共にボット ID を保存していることを確認します。\n\n##### <a name=\"to-add-bot-to-app\"></a>ボットをアプリに追加するには\n\n1. **[アプリ機能**] ウィンドウを開き、**ボット** カードを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"ボット カードを示す画像\" border=\"false\":::\n\n    **[ボット**] ウィンドウが表示されます。\n\n1. [既存のボットの **選択] からボット アプリを選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"既存のボット アプリを追加する方法を示す画像\" border=\"false\":::\n\n    新しいボットは、独自のアプリ ID を使用してアプリに追加されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"アプリに追加された新しいボットを示す画像\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>ボット スコープを構成するには\n\n1. 新しい **ボット** カードの:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::アイコンを選択し、[**編集]** を選択します。\n\n1. **[ボット**] ウィンドウを移動して **[コマンド]** セクションを表示し、[**+ コマンドの追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"コマンド セクションを示す画像\" border=\"false\":::\n\n1. コマンドの適切な名前と説明を入力 **します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"コマンドの詳細を追加する方法を示す画像\" border=\"false\":::\n\n1. コマンドの 3 つのスコープをすべて選択し、[ **追加**] を選択します。\n    - **個人用**\n    - **チーム**\n    - **グループ チャット**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"コマンドの詳細を保存する方法を示す画像\" border=\"false\":::\n\n    新しいコマンドが **ボット** ウィンドウの **[コマンド]** セクションに追加されます。\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"保存するコマンドの詳細を示す画像\" border=\"false\":::\n\n    コマンドの詳細が保存されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"保存されたコマンドの詳細を示す画像\" border=\"false\":::\n\n1. **[アプリ機能**] ウィンドウを開き、[**個人用アプリ** カード] を選択して、アプリのタブの詳細を表示します。\n\n    新しいチャット ボットのタブがアプリに追加されていることがわかります。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"チャット ボットの構成を示す画像\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>メッセージ拡張機能を構成する\n\nメッセージング拡張機能を使用すると、ユーザーはサービスから情報を要求し、その情報を投稿できます。 情報は、チャネル会話にカードの形式で投稿されます。 メッセージング拡張機能は、作成ボックスの下部に表示されます。\n\n新しいメッセージ拡張機能を追加するには:\n\n1. **[アプリ機能**] :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ウィンドウの **[メッセージ拡張機能**] カードのアイコンを選択し、[削除] を選択 **します**。\n\n1. **[アプリ機能**] ウィンドウで [**メッセージ拡張機能**] を選択します。\n\n1. **[メッセージ拡張機能**] ウィンドウの [既存の **ボットの選択**] ドロップダウン リストからボット アプリの名前を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"既存のボットを選択するための [メッセージ拡張機能] ウィンドウを示す画像\" border=\"false\":::\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"[メッセージ拡張機能の保存] ボタンを示す画像\" border=\"false\":::\n\n    メッセージ拡張機能が保存され、[メッセージ **拡張機能**] ウィンドウに **[コマンド]** セクションが表示されます。\n\n1. **+[コマンドの追加]** を選択して、メッセージ拡張機能アプリで実行できる操作のスコープを定義します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"コマンド セクションを示す画像\" border=\"false\":::\n\n1. [コマンドの追加] ダイアログで、追加するコマンドの種類として **[検索****]** が選択されていることを確認します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"[コマンドの追加] ダイアログを示す画像\" border=\"false\":::\n\n1. 適切な情報を次の詳細に入力します。\n    - コマンド ID\n    - コマンド のタイトル\n    - コマンドの説明\n\n1. ダイアログ内を移動して、残りの詳細を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"[コマンドの追加] ダイアログで残りの詳細を示す画像\" border=\"false\":::\n\n1. **[既定値にする]** が選択されていることを確認します。\n1. メッセージ拡張コマンドに対して次のコンテキストを選択します。\n    - コマンド ボックス\n    - [作成] ボックス\n    - メッセージ\n1. 次の詳細に適した情報を入力します。\n    - パラメーター名\n    - パラメーターのタイトル\n    - パラメータの説明\n\n1. 入力の種類として **[テキスト]** を選択します。\n1. **[保存]** を選びます。\n1. メッセージ拡張コマンドが保存され、[ **メッセージ拡張機能** ] ウィンドウのコマンドの一覧に表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"追加された新しいコマンドを示す画像\" border=\"false\":::\n\n1. **[保存]** を選択します。\n1. **[アプリ機能**] ウィンドウを開きます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"Hello World アプリ用に構成された機能を示す画像\" border=\"false\":::\n\n    Hello World アプリ用に構成された、個人用タブ アプリ、ボット、メッセージ拡張機能の 3 つの機能がすべて表示されます。 次の手順では、アプリをTeamsに登録し、アプリをテストします。\n"
- title: 最初の C# アプリをプレビューしてテストする
  durationInMinutes: 1
  content: "\nアプリをインポートし、開発者ポータルで機能を構成したら、サンプル アプリをプレビューしてテストできます。\n\n## <a name=\"preview-your-app-in-teams\"></a>Teamsでアプリをプレビューする\n\nアプリの機能を構成した後、ローカル環境のTeamsでアプリをプレビューしてテストできます。\n\nアプリをプレビューするには:\n\n1. 開発者ポータル のツール バー **から、Teamsで [プレビュー**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"[プレビュー] ボタンを示す画像\" border=\"false\":::\n\n    開発者ポータルは、アプリが正常にサイドロードされたことを通知します。\n\n1. **[ストア**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::] アイコンを選択します。\n1. [ **アプリの管理**] を選択します。\n   アプリがサイドロードされたアプリに一覧表示されます。 \n1. 検索ボックスを使用してアプリを探し、その行の 3 つのドットを選択します。\n1. **[表示**] オプションを選択します。\n    アプリの **[追加]** ページが表示されます。\n1. [**追加]** を選択して、Teamsにアプリを読み込みます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"[アプリの追加] ダイアログを示す画像\" border=\"false\":::\n\n    これで、アプリがTeamsで利用できるようになりました。 すべてのタブを表示し、機能をテストできます。\n\n    - [Hello] タブ:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"ローカル環境の [Hello] タブを示す画像\" border=\"false\":::\n\n    - チャット ボット:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"ローカル環境でアプリのボットを示す画像\" border=\"false\":::\n\n        チャットを使用してメッセージを送信できます。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"ローカル環境でのチャットを示す画像\" border=\"false\":::\n\n    - メッセージ拡張機能:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"ローカル環境でのメッセージ拡張機能を示す画像\" border=\"false\":::\n\n        メッセージ拡張機能を使用して検索を試すことができます。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"ローカル環境でメッセージ拡張機能を使用した検索を示す画像\" border=\"false\":::\n\n    - [概要] タブ:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"ローカル環境の [バージョン情報] タブを示す画像\" border=\"false\":::"
