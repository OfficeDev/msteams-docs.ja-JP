### YamlMime:Tutorial
title: C を使用して最初のアプリをビルドする#
metadata:
  title: Hello World with C#
  description: このチュートリアルでは、このチュートリアルで Hello World アプリをビルドする方法についてC#。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: '[概要] に戻る'
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 1af698467539426fbeff4dc3b0c8805d6a6abcb7
  ms.sourcegitcommit: a36760750ff4f510c374a4c956be57f7c1b4a0db
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 03/20/2022
  ms.locfileid: "63674916"
items:
- durationInMinutes: 1
  content: >
    タブMicrosoft Teamsボット、およびメッセージ拡張機能機能を使用して最初のアプリを構築することで、アプリ開発の開始を開始します。


    >このアプリにはすべての機能が含まれるので、それぞれ独自の UI と UX があります。


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="このアプリを示す図には、3 つの機能があります。" border="false":::


    このチュートリアルでは、次の情報を学習します。


    - 新しいプロジェクトを設定する方法

    - 2019 年と 2019 年を使用して、タブ、ボット、およびメッセージ拡張機能を異なる機能で 3 つのアプリC#Visual Studioする方法

    - 開発者ポータルからアプリを展開する方法
- title: 前提条件
  durationInMinutes: 1
  content: "アプリを構築および展開するためにインストールする必要があるツールの一覧をTeamsします。\n\n| &nbsp; | インストール | using... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • **ASP.NET と Web 開発** <br> • **.NET Core クロスプラットフォーム開発** | .NET。 2019 年の無料コミュニティ エディションをインストールVisual Studioワークロードもインストールできます。 |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git を使用して、サンプル C#アプリリポジトリを使用GitHub。 |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams機能 (会話型ボットとメッセージング拡張機能) では、受信接続が必要です。 開発システムをトンネル経由でTeamsする必要があります。 タブのみを含むアプリでは、トンネルは必要ありません。 このパッケージは、(npm を使用して) プロジェクト ディレクトリ内にインストールされます `devDependencies`。 |\n| &nbsp; | [Teams ツールキット](#install-teams-toolkit) | アプリVisual Studioスキャフォールディングを作成する 2019 年の拡張機能です。 最新バージョンを使用します。 |\n| &nbsp; | [Teams の開発者ポータル](https://dev.teams.microsoft.com/) | Web ベースのポータルを使用して、組織や組織Teamsストアにアプリを構成、管理、配布Teamsします。 |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams、会議、通話のアプリを通じて作業するすべてのユーザーと共同作業を 1 か所で行います。 |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack)および[Microsoft Azure CLI](/cli/azure/install-azure-cli) | Azure ツールを使用して、保存されたデータにアクセスしたり、Azure でアプリのクラウド ベースのバックエンドTeams展開したりします。 |\n\n\n## <a name=\"verify-git-installation\"></a>git のインストールを確認する\n\nインストールVisual Studioパスに追加するように求めるメッセージ`git`が表示されたら、そのパスを選択します。 \n\nインストールされている git のバージョンを確認するには、次の手順を実行します。\n\n1. ターミナル ウィンドウを開きます。 \n2. 次のコマンドを実行して、コンピューターにインストール `git` されているバージョンを確認します。\n\n    ```bash\n    $ git --version\n    ```\n\n    出力例: `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>インストールTeams Toolkit\n\nTeams Toolkit、アプリのプロジェクト スキャフォールディングを作成するためのツールを使用して開発プロセスを簡略化できます。 プロジェクトをビルドする準備が整った必要なファイルを使用して、選択したすべての機能に必要なディレクトリ構造を作成します。\n\nTeams Toolkit 2019 拡張機能Visual Studio使用できます。\n\n拡張機能をTeams Toolkitするには、次の手順を実行します。\n\n1. 2019 Visual Studio開き、**ExtensionsManage** >  拡張機能 **を選択します**。\n1. 検索ボックスに「Teams Toolkit」**と入力します**。\n1. [ダウンロード **] ボタンの** 横にある [ダウンロードTeams Toolkit。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"イメージは、ユーザーのインストールをTeams Toolkit\"::: \n\n    変更は、2019 年 2019 年Visual Studioできます。 拡張機能のインストール後に 2019 Visual Studio再起動する必要がある場合に必要です。\n\n1. **[閉じる]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"イメージは、インストールの完了を示Teams Toolkit\":::\n\n1. 2019 Visual Studio閉じます。\n    \n    VSIX インストーラーが開き、拡張機能のインストール手順が表示されます。\n\n1. VSIX インストーラーの指示に従ってツールキットのインストールを完了します。\n1. 2019 Visual Studioを再度開きます。\n\n2019 Teamsアプリは、2019 年 3 月にテンプレートVisual Studioされます。\n\nまた、マーケットプレースTeams ToolkitをVisual Studio Code[できます](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit)。\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>開発テナントTeams設定する\n\nテナント **は**、チャット、ファイルの共有、会議の実行を行う、Teamsのスペース、または組織のコンテナーに似たものになります。 この領域は、アプリのサイドロードとテストも行う場所です。 テナントを使用して開発する準備ができていることを確認します。\n\n### <a name=\"check-for-sideloading-option\"></a>サイドローディング オプションを確認する\n\nアプリを作成したら、アプリを配布せずに Teams に読み込む必要があります。 このプロセスはサイドローディングと呼ばれます。 このオプションを表示するには、Microsoft 365アカウントにサインインします。\n\n> [!NOTE]\n> サイドローディングは、ローカル環境でアプリをプレビュー Teams必要です。 有効になっていない場合は、アプリをローカルでプレビューしてテストTeamsできません。\n\nテナントが既に存在し、管理者アクセス権を持っていますか? 本当に行うのか確認しましょう!\n\n次の手順でアプリをサイドロードTeams。\n\n1. クライアントで、[Teams] アイコン **を選択** します。\n1. [アプリ **の管理] を選択します**。\n1. カスタム アプリを作成する **アップロード探します**。 オプションが表示された場合は、サイドローディング アプリが有効になります。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"図は、カスタム アプリをアプリにアップロードするTeams。\":::\n\n    > [!NOTE]\n    > カスタム Teamsをアップロードするオプションが表示されていない場合は、管理者にTeamsしてください。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>無料の開発者Teamsを作成する (オプション)\n\nアカウントにアカウントがTeams場合は、無料で取得できます。 開発者プログラムMicrosoft 365参加してください。\n\n1. [Microsoft 365 開発者プログラム](https://developer.microsoft.com/microsoft-365/dev-program)に移動します。\n1. [今 **すぐ参加] を** 選択し、画面の指示に従います。\n1. ようこそ画面で、[ **E5 サブスクリプションの設定] を選択します**。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"開発者プログラムにサインアップした後に表示されるMicrosoft 365例です。\":::\n\n1. セットアップしTeams管理者アカウントを使用してサインインします。 カスタム アプリ オプションがアップロード **に設定** されているTeams。\n\n## <a name=\"get-a-free-azure-account\"></a>無料の Azure アカウントを取得する\n\nアプリをホストするか、Azure でリソースにアクセスする場合は、Azure サブスクリプションが必要です。 [開始する前に無料アカウント](https://azure.microsoft.com/free/) を作成します。\n\nこれで、すべてのツールが手に入り、アカウントを設定できます。 次に、開発環境をセットアップし、構築を開始しましょう。\n\n> [!NOTE]\n> プラットフォームで適切なターミナル ウィンドウを使用します。 これらの例では Git Bash を使用しますが、ほとんどのプラットフォームで実行できます。\n\n最新バージョンの更新プログラムを開Visual Studio更新プログラムをインストールします。\n\nこのチュートリアルでは、同じターミナル ウィンドウを使用してコマンドを実行できます。\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>サンプルをダウンロードする\n\nこのチュートリアルでは、Hello、 [World を使用します。](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) サンプルをC#。 このファイルは、ダウンロードして複製できます。GitHub。\n\nこのサンプルを使用するには、次のいずれかの方法でサンプル リポジトリを複製します。\n\n- [Git Bash の使用](#to-use-git-bash-to-clone-the-sample-repo)\n- [2019 Visual Studioの使用](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>Git Bash を使用してサンプルリポジトリを複製するには\n\n- ターミナル ウィンドウで次のコマンドを実行して、サンプル リポジトリをコンピューターに複製します。\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    アプリのサンプル リポジトリC#既定の場所にあるコンピューターに複製されます。\n\n    > [!TIP]\n    > このリポジトリ[をフォークして](https://help.github.com/articles/fork-a-repo/)[、変更](https://github.com/OfficeDev/Microsoft-Teams-Samples)を変更し、そのリポジトリに保存GitHub。\n\n    <a name=\"BuildRun\"></a>\n\n    複製されたリポジトリは、2019 年 3 月に開Visual Studioできます。 \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>2019 Visual Studioを使用してサンプルリポジトリを複製するには\n\n1. 2019 Visual Studioを開きます。\n1. [リポジトリ **の複製] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"c# アプリのサンプル リポジトリTeamsする\" border=\"false\":::\n\n1. リポジトリ `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` を複製するパスとして入力します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"c# アプリのサンプル リポジトリTeamsする\" border=\"false\":::\n\n1. リポジトリを複製する場所を入力し、[複製] を **選択します**。\n\n    サンプルリポジトリが複製され、Visual Studioされます。 複製されたリポジトリは、ソリューション エクスプローラーで **表示できます**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"c# アプリのサンプル リポジトリTeams複製\" border=\"false\":::\n\nサンプルリポジトリが複製されたので、最初のリポジトリ アプリをC#作成Teams。\n"
- title: 最初のアプリをビルドしてC#する
  durationInMinutes: 1
  content: "\nサンプル アプリのリポジトリを複製C#、ローカル環境でアプリをビルドして実行できます。\n\nこのページでは、次の方法について学習します。\n1. [初めてのアプリを構築する](#build-your-first-app)\n1. [サンプル アプリをローカルに展開する](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>初めてのアプリを構築する\n\nワークスペースの作成後、ソリューション **エクスプローラー** でプロジェクト構造を表示できます。 これで、アプリをビルドして実行します。\n\n**複製されたサンプルをビルドして実行するには**\n\n1. **ソリューション ファイル Microsoft.Teams を開きます。サンプルの** **Microsoft-Teams-Samples/samples/app-hello-world/csharp** ディレクトリの Samples.HelloWorld.sln。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"Hello World ソリューション ディレクトリ構造を示す画像\" border=\"false\":::\n\n1. [設定] **Project** を選択し、[**Microsoft.Teams] を選択します。Samples.HelloWorld.Web プロパティ**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"[プロパティ] Projectを選択する[プロパティ] メニューを示す画像\" border=\"false\":::\n\n1. [プロパティ **] ウィンドウ** の左側のウィンドウから [デバッグ] **を** 選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"[プロパティ] ウィンドウを示す画像\" border=\"false\":::\n\n1. 画面を移動して、Web サーバー サーバー のページ **を設定**。\n\n1. [デバッグ] ウィンドウで次の **設定を** 行います。\n    - アプリ **の URL をに設定** します `http://localhost:3333/`。\n    - [ **SSL を有効にする] をオフにしてください**。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"プロジェクトプロパティの Web サーバー設定C#画像\" border=\"false\":::\n\n1. [ビルド **] メニューから [** ソリューションの **ビルド] を** 選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"ビルド完了を示す画像\" border=\"false\":::\n\n1. **F5 キーを選択** するか、[**デバッグ] メニュー** から [デバッグの開始] を **選択** してサンプルを実行します。\n\n    アプリが起動すると、ブラウザー ウィンドウが開きます。 アプリのルートが表示されます。 次の URL に移動して、すべてのアプリ URL が読み込み中か確認できます。\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"ローカル ホストを示すイメージ\" border=\"false\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"アプリの Hello ページを示す画像\" border=\"false\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"アプリの最初のタブを示す画像\" border=\"false\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"アプリの 2 番目のタブを示す画像\" border=\"false\":::\n\n    > [!Note]\n    > エラーが発生した場合は `Could not find a part of the path … bin\\roslyn\\csc.exe`、コマンドを使用してパッケージを更新します `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`。\n\n## <a name=\"deploy-your-sample-app-locally\"></a>サンプル アプリをローカルに展開する\n\nMicrosoft Teamsは、1 つ以上の機能を提供する Web アプリケーションです。 アプリをインターネット上で利用可能にし、Teamsを読み込む。 コンピューター上のローカル プロセスへの `ngrok` トンネルを作成するために使用するアプリをホストします。\n\nアプリをホストした後、ルート URL (またはなど) をメモ `https://yourteamsapp.ngrok.io` します `https://yourteamsapp.azurewebsites.net`。\n\n### <a name=\"tunnel-using-ngrok\"></a>Tunnel ngrok の使用\n\nngrok をインストールした後、トンネルを作成してアプリをローカルに展開できます。\n\n1. 新しいターミナル ウィンドウを開きます。\n1. トンネルを作成するには、次のコマンドを実行します。 サンプル アプリでは、ポート 3333 を使用します。\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    ngrok トンネルが作成されます。 次に例を示します:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"ngrok トンネルを示す画像\" border=\"false\":::\n\n    アプリの別のタブ `hello``first`ページを表示するには、`second`ngrok トンネル URL に 、追加、、または追加できます。\n    \n    Ngrok はインターネットからの要求をリッスンし、ポート 3333 で実行されているアプリにルーティングします。\n\nアプリのローカル展開を確認するには、次の手順を実行します。\n\n1. ブラウザーを開きます。\n1. 次の URL を使用してアプリを読み込む。\n\n    `https://<forwarding address in ngrok console session>/`\n\n    URL の例を次に示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"ngrok トンネルC#ローカルで実行されているアプリを示す画像\" border=\"false\":::\n\n1. ngrok コンソールで転送アドレスをメモします。 アプリをアプリに展開するには、この URL がTeams。\n\n    > [!NOTE]\n    > ビルド中に別のポートを使用した [場合](#build-your-first-app)は、同じポート番号を使用してトンネルをセットアップ `ngrok` してください。\n    > [!TIP]\n    > 別のターミナル ウィンドウで実行すると `ngrok` 良い考えです。 アプリを停止、 `ngrok` 再構築、再実行する必要がある場合に、アプリに干渉し続けるのに役立ちます。 セッションは `ngrok` 、このウィンドウで役立つデバッグ情報を提供します。\n    > [!IMPORTANT]\n    > 無料バージョンの ngrok を使用する場合、アプリは開発マシン上の現在のセッション中にのみ利用できます。 コンピューターがシャットダウンまたはスリープ状態に切り込む場合は、使用できません。 サービスを再起動すると、新しいアドレスが返されます。 次に、古いアドレスを使用する場所を更新する必要があります。 テスト用にアプリを共有する場合は、この手順に注意してください。\n"
- title: 開発者ポータルを使用C#アプリを構成する
  durationInMinutes: 1
  content: "\n開発者ポータルを[使用して](https://dev.teams.microsoft.com/)、アプリ パッケージをアップロードして、Teams機能を構成できます。 開発者ポータルは、Teams作成と登録を簡略化するアプリです。 ストアからインストールTeams!\n\nアプリをビルドしてテストTeams、開発者ポータルを使用してアプリを構成およびプレビューできます。\n\nこのページでは、開発者ポータルでアプリ [パッケージを構成する方法について説明します](#configure-the-app-package-in-developer-portal)。\n\n<details>\n<summary>2019 年Visual Studio発行オプション</summary>\n\nこのチュートリアルでは、開発者ポータルを使用してアプリ機能を構成し、アプリを発行します。 \n\nただし、Visual Studio 2019 では、Azure を含むさまざまなプロバイダーへのアプリの展開が組み込みサポートされています。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"2019 年に Azure に発行するメニュー項目をVisual Studio画像\" border=\"false\":::\n\nMicrosoft Azure.NET アプリケーションを無料の層でホストします。 サンプルを実行するのに十分な共有インフラストラクチャを使用 `Hello World` します。 詳細については、「新しい無料の [Azure アカウントを作成する」を参照してください](https://azure.microsoft.com/free/)。\n\nこのオプションを使用する場合は、Azure サイトと Azure リソースの詳細を入力し、アプリを発行できます。 \n\nこのチュートリアルでは、この手順を使用する必要があります。\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>開発者ポータルでアプリ パッケージを構成する\n\n開発者ポータルを [使用して](https://dev.teams.microsoft.com/) 、アプリ パッケージとその機能を構成できます。 開発者ポータルは、Teams作成と登録を簡略化するアプリです。 ストアからインストールTeams!\n\nアプリ パッケージの構成には、次の内容が含まれます。\n\n1. [アプリ パッケージを開発者ポータルにインポートする](#import-the-app-package-in-developer-portal)\n1. [アプリ機能の構成](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>開発者ポータルでアプリ パッケージをインポートする\n\nアプリ パッケージをインポートするには、次の方法を実行します。\n\n1. Microsoft Teams を開きます。\n\n1. 左側の **バーから** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: [ストア] アイコンを選択します。\n\n1. 検索バーで **開発者ポータルを** 検索し、[開発者ポータル] **を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"[開発者ポータル アプリ] の選択\" border=\"false\":::\n\n1. [**開く**]を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"開いている開発者ポータル アプリを示す画像\" border=\"false\":::\n\n    開発者ポータルが開きます。\n\n1. [アプリ] **タブを選択** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"開発者ポータル アプリ\" border=\"false\":::\n\n1. [アプリ **のインポート] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"[アプリのインポート] ボタンを示す画像\" border=\"false\":::\n\n1. サンプルの repo **ディレクトリhelloworldapp.zip** で、次のパスからアプリ C#を選択します。\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    **Hello World アプリ** は開発者ポータルにインポートされます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"アプリがアプリにインポートされた状態を示Teams\" border=\"false\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>開発者ポータルでアプリのツアーを行う\n\nアプリを開発者ポータルにインポートした後、マニフェスト ファイルなどの詳細を表示できます。\n\n#### <a name=\"view-app-information\"></a>アプリ情報の表示\n\n1. 開発者ポータル **の左側の** ウィンドウから [基本情報] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"イメージは、開発者ポータルの左側のウィンドウを示しています\" border=\"false\":::\n\n1. 基本情報から次の情報に注意してください。\n    - アプリ ID\n    - 開発者情報\n    - アプリの URL\n\n1. 左側 **のウィンドウから** [ブランド化] を選択して、ブランド化情報を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"アプリのブランド情報を示す画像\" border=\"false\":::\n\n    これらの詳細は、配布用の新しいアプリを作成する場合に重要です。\n\n#### <a name=\"view-app-features\"></a>アプリの機能を表示する\n\n- 開発者ポータル **の左側の** ウィンドウから [アプリの機能] を選択します。\n\n    アプリの機能が右側のウィンドウに表示されます。 個人用アプリ、ボット、およびメッセージ拡張機能のカードを表示できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"アプリの機能を示す画像\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>アプリ マニフェストの表示\n\nマニフェスト ファイルを使用して、アプリの機能、必要なリソース、その他の重要な属性を構成します。\n\nアプリ マニフェストを表示するには、次の方法を実行します。\n\n- 左側 **のパネルから** [発行] を選択してドロップダウン リストを開き、[アプリ パッケージ] **を選択します**。\n    \n    マニフェスト ファイルが右側のウィンドウに表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"開発者ポータルでアプリ マニフェスト ファイルを示す画像\" border=\"false\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>アプリの機能を構成する\n\nアプリを開発者ポータルにインポートした後、次にアプリの機能を構成します。 開発者ポータルには、さまざまなセクションのすべてのアプリ情報が含まれている。 これにより、アプリの機能を簡単に構成できます。\n\n開発者ポータルを使用すると、次のコマンドを実行できます。\n- [個人用タブ アプリの構成](#configure-personal-tab-app)\n- [ボットの構成](#configure-bot)\n- [メッセージ拡張機能の構成](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>個人用タブ アプリの構成\n\n個人用タブ アプリを構成するには、次の手順を実行します。\n\n1. [アプリ機能 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ] ウィンドウの **[個人用** アプリ カード] のアイコン **を選択** し、[編集] を選択 **します**。\n\n    [Hello] タブの詳細が表示されます。\n\n1. [Hello] :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: タブのアイコンを選択し、[編集 **] を選択** して、更新するアプリの詳細を開きます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"[Hello] タブ メニューを示す画像\" border=\"false\":::\n\n1. [個人用アプリにタブを追加する] の [Hello] タブ **のアプリの詳細を入力します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"Hello タブの詳細を示す画像\" border=\"false\":::\n\n    次の詳細を入力します。\n    - **名前**: [こんにちは] タブ。\n    - **コンテンツ URL** と **Web サイトの URL**: ngrok コンソール セッションの転送アドレス。\n    - **コンテキスト**: [個人] **タブを選択します**。\n\n1. **[更新]** を選択します。\n\n    [Hello] タブの詳細が [個人用アプリ] **ウィンドウに表示** されます。\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"保存する Hello タブの詳細を示す画像\" border=\"false\":::\n\n    [ **個人用アプリ] ウィンドウ** に、新しいタブと自動的に作成された [概要] タブが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"[Hello] タブと [概要] タブの詳細を示す画像\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>ボットの構成\n\nボット機能をアプリに簡単に追加できます。 Hello World サンプル アプリには既にボットがパーツとして含Teams。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"アプリ ID を使用してインポートされたボット アプリを示す画像\" border=\"false\":::\n\nサンプルからインポートされたボットには、関連付けられたアプリ ID が含まれません。 削除し、新しいボットを作成する必要があります。 開発者ポータルは、新しいアプリ ID を作成し、アプリ ID に登録Teams。\n\nボットを追加および構成するには、次の手順を行います。\n\n1. [新しいボットの追加](#to-add-a-new-bot)\n1. [アプリへのボットの追加](#to-add-bot-to-app)\n1. [ボット スコープの構成](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>新しいボットを追加するには\n\n1. [アプリ機能 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ] ウィンドウの **ボット** カードのアイコン **を選択** し、[削除] を選択 **します**。\n\n1. [機能 **を追加** するツール] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"[ツール] オプションを示す画像\" border=\"false\":::\n\n1. [ツール **] ウィンドウで [** ボットの **管理] を** 選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"ボット管理ウィンドウを示す画像\" border=\"false\":::\n\n1. [ **ボット管理] ウィンドウで [+** 新 **しいボット] を選択** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"新しいボット オプションを示す画像\" border=\"false\":::\n\n1. ボットに適した名前を入力し、[追加] を **選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"ボットを追加する方法を示す画像\" border=\"false\":::\n\n    [ **構成]** ウィンドウが表示され、左側のウィンドウに新しいボットの詳細が表示されます。\n\n1. コンソールから転送 URL を入力し、[ `ngrok` 保存] を **選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"ボット エンドポイントを追加する方法を示す画像\" border=\"false\":::\n\n1. [ **クライアント シークレット] を選択** し、[ **ボットに** クライアント シークレットを追加する] を選択して、ボットのパスワードを生成します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"[クライアント シークレット] セクションを示す画像\" border=\"false\":::\n\n    開発者ポータルは、ボットのパスワードを生成します。\n\n    アイコンを使用してパスワード :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: をコピーできます。 このチュートリアルでは、コピーする必要があります。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"生成されたクライアント シークレットを示すイメージ\" border=\"false\":::\n\n1. **[OK]** を選択します。\n\n1. [ボット **<を選択して** 、ボット管理 **ウィンドウに戻** ります。\n\n    [ **ボット管理]** ウィンドウには、アプリ ID で追加された新しいボットが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"アプリ ID を持つ新しいボットを示す画像\" border=\"false\":::\n\n1. [クライアント シークレット] セクションのパスワードと共にボット ID **を保存してください** 。\n\n##### <a name=\"to-add-bot-to-app\"></a>ボットをアプリに追加するには\n\n1. [アプリの **機能] ウィンドウを** 開き、ボット カード **を選択** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"ボット カードを示す画像\" border=\"false\":::\n\n    [ **ボット]** ウィンドウが表示されます。\n\n1. [既存のボットを選択 **する] からボット アプリを選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"既存のボット アプリを追加する方法を示す画像\" border=\"false\":::\n\n    新しいボットは、独自のアプリ ID を使用してアプリに追加されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"アプリに追加された新しいボットを示す画像\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>ボット スコープを構成するには\n\n1. 新しいボット :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: カードのアイコンを **選択し** 、[編集] を選択 **します**。\n\n1. [ボット] ウィンドウ **を移動** して [ **コマンド] セクションを表示** し、[ **+ コマンドの追加] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"[コマンド] セクションを示す画像\" border=\"false\":::\n\n1. コマンドの適切な名前と説明を入力 **します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"コマンドの詳細を追加する方法を示す画像\" border=\"false\":::\n\n1. コマンドの 3 つのスコープをすべて選択し、[追加] を **選択します**。\n    - **個人用**\n    - **チーム**\n    - **グループ チャット**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"コマンドの詳細を保存する方法を示す画像\" border=\"false\":::\n\n    新しいコマンドがボット ウィンドウの **[コマンド** ] セクションに **追加** されます。\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"保存するコマンドの詳細を示す画像\" border=\"false\":::\n\n    コマンドの詳細が保存されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"保存されたコマンドの詳細を示す画像\" border=\"false\":::\n\n1. [ **アプリ機能] ウィンドウを** 開き、[ **個人用** アプリ カード] を選択してアプリのタブの詳細を表示します。\n\n    新しいチャット ボットのタブがアプリに追加されているのが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"構成されたチャット ボットを示す画像\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>メッセージ拡張機能の構成\n\nメッセージング拡張機能を使用すると、ユーザーはサービスから情報を求め、その情報を投稿できます。 情報は、カードの形式でチャネル会話に投稿されます。 メッセージング拡張機能は、作成ボックスの下部に表示されます。\n\n新しいメッセージ拡張機能を追加するには、次の方法を使用します。\n\n1. [アプリ機能 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ] ウィンドウの **[メッセージ拡張機能** ] カードのアイコン **を選択** し、[削除] を選択 **します**。\n\n1. [アプリ **の機能] ウィンドウ** で **[メッセージ拡張機能] を** 選択します。\n\n1. [メッセージ拡張機能] ウィンドウの [既存のボットの選択] ドロップダウン リストからボット アプリの **名前を選択** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"既存のボットを選択するメッセージ拡張ウィンドウを示す画像\" border=\"false\":::\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"[メッセージ拡張機能の保存] ボタンを示す画像\" border=\"false\":::\n\n    メッセージ拡張機能が保存され、[コマンド] **セクション** が [メッセージ拡張] **ウィンドウに表示** されます。\n\n1. [ **+ コマンドの追加] を** 選択して、メッセージ拡張機能アプリで実行できる操作の範囲を定義します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"[コマンド] セクションを示す画像\" border=\"false\":::\n\n1. [コマンド **の追加** ] ダイアログで、追加するコマンドの種類として [検索 **] が選択されている必要** があります。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"[コマンドの追加] ダイアログ ボックスを示す画像\" border=\"false\":::\n\n1. 適切な情報を次の詳細に入力します。\n    - コマンド ID\n    - コマンド タイトル\n    - コマンドの説明\n\n1. ダイアログを移動して、残りの詳細を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"[コマンドの追加] ダイアログで残りの詳細を示す画像\" border=\"false\":::\n\n1. [ **既定にする] が** 選択されている必要があります。\n1. メッセージ拡張コマンドで次のコンテキストを選択します。\n    - コマンド ボックス\n    - [作成] ボックス\n    - メッセージ\n1. 次の詳細に適した情報を入力します。\n    - パラメーター名\n    - パラメーター のタイトル\n    - パラメータの説明\n\n1. 入力 **の種類として** [テキスト] を選択します。\n1. **[保存]** を選びます。\n1. メッセージ拡張コマンドが保存され、[メッセージ拡張] ウィンドウのコマンドの一覧 **に表示** されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"新しいコマンドが追加された画像\" border=\"false\":::\n\n1. **[保存]** を選択します。\n1. [アプリ **機能] ウィンドウを開** きます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"Hello World アプリ用に構成された機能を示す画像\" border=\"false\":::\n\n    Hello World アプリ用に構成された、個人用タブ アプリ、ボット、メッセージ拡張機能の 3 つの機能すべてが表示されます。 次の手順では、アプリをアプリに登録し、Teamsテストします。\n"
- title: 最初のアプリをプレビュー C#する
  durationInMinutes: 1
  content: "\nアプリをインポートし、開発者ポータルで機能を構成した後、サンプル アプリをプレビューしてテストできます。\n\n## <a name=\"preview-your-app-in-teams\"></a>アプリをプレビュー Teams\n\nアプリの機能を構成したら、ローカル環境でアプリをプレビュー Teamsテストできます。\n\nアプリをプレビューするには、次の方法を実行します。\n\n1. [開発者 **ポータル] ツール バー Teams**[プレビュー] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"[プレビュー] ボタンを表示する画像\" border=\"false\":::\n\n    開発者ポータルは、アプリが正常にサイドロードされたことを通知します。\n\n1. [ストア] **アイコンを選択**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::します。\n1. [アプリ **の管理] を選択します**。\n   アプリがサイドロードされたアプリに表示されます。 \n1. 検索ボックスを使用してアプリを検索し、行の 3 ドットを選択します。\n1. [表示] **オプションを** 選択します。\n    アプリ **の [** 追加] ページが表示されます。\n1. [**追加] を** 選択してアプリを読み込Teams。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"[アプリの追加] ダイアログを示す画像\" border=\"false\":::\n\n    アプリがアプリで使用Teams。 すべてのタブを表示し、機能をテストできます。\n\n    - [こんにちは] タブ:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"ローカル環境の [Hello] タブを示す画像\" border=\"false\":::\n\n    - チャット ボット:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"ローカル環境でのアプリのボットを示す画像\" border=\"false\":::\n\n        チャットを使用してメッセージを送信できます。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"ローカル環境でのチャットを示す画像\" border=\"false\":::\n\n    - メッセージ拡張機能:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"ローカル環境でのメッセージ拡張機能を示す画像\" border=\"false\":::\n\n        メッセージ拡張機能を使用して検索を試みることはできません。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"ローカル環境でのメッセージ拡張機能を使用した検索を示す画像\" border=\"false\":::\n\n    - [概要] タブ:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"ローカル環境の [概要] タブを示す画像\" border=\"false\":::"
