### YamlMime:Tutorial
title: SPFx を使用して初めてのアプリをビルドする
metadata:
  title: C# を使った Hello World
  description: このチュートリアルでは、新しいプロジェクトを設定し、タブ、ボット、メッセージ拡張機能アプリをビルドしてデプロイすることで、C# を使用してHello World アプリをビルドする方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 開始の概要に戻る
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8a3b2e9ee0ea411ae1010422cc25e1f25bcc2615
  ms.sourcegitcommit: c398dfdae9ed96f12e1401ac7c8d0228ff9c0a2b
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 06/30/2022
  ms.locfileid: "66557996"
items:
- durationInMinutes: 1
  content: >
    タブ、ボット、メッセージ拡張機能のある最初のアプリをビルドして、Microsoft Teams アプリ開発を始めます。


    >このアプリには全ての機能が含まれ、それぞれ独自の UI と UX を提供します。


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="このアプリを示すダイアグラムには、3 つの機能があります。":::


    このチュートリアルでは以下を学習します。


    - 新しいプロジェクトを設定する方法。

    - C# と Visual Studio 2019 を使用して、それぞれ異なる機能を持つ 3 つのアプリ (タブ、ボット、メッセージ拡張機能) をビルドする方法。

    - 開発者ポータルからアプリをデプロイする方法。
- title: 前提条件
  durationInMinutes: 1
  content: "Teams アプリをビルドして展開するためにインストールする必要があるツールのリストを次に示します。\n\n| &nbsp; | インストール | 使用するには... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • **ASP.NET と Web 開発** <br> • **.NET Core クロスプラットフォーム開発** | .NET。Visual Studio 2019 の無料コミュニティ エディションをインストールし、ワークロードをインストールすることもできます。 |\n| &nbsp; | [Git](https://git-scm.com/downloads) | GitHub からサンプル C# アプリ リポジトリを使用する Git。 |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams アプリの機能 (会話ボットとメッセージ拡張機能) には、受信接続が必要です。 トンネルを介して開発システムを Teams に公開する必要があります。 タブのみを含むアプリにはトンネルは必要ありません。 このパッケージはプロジェクト ディレクトリ内にインストールされます (npm `devDependencies` を使用)。 |\n| &nbsp; | [Teams ツールキット](#install-teams-toolkit) | アプリのプロジェクト スキャフォールディングを作成する Visual Studio 2019 拡張機能。最新版をご利用ください。 |\n| &nbsp; | [Teams の開発者ポータル](https://dev.teams.microsoft.com/) | Teams アプリを構成、管理、組織や Teams ストアなどに配布するための Web ベースのポータル。 |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams を使用して、チャット、会議、通話用のアプリを通じて共同作業を行うすべてのユーザーと 1 か所で共同作業を行うことができます。 |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) および [Microsoft Azure CLI](/cli/azure/install-azure-cli) | 保存されたデータにアクセスしたり、Azure で Teams アプリ用のクラウドベースのバックエンドをデプロイしたりするための Azure ツール。 |\n\n\n## <a name=\"verify-git-installation\"></a>Git のインストールを確認する\n\nVisual Studio のインストールでパスに `git` を追加するように求められた場合は、それを選択します。 \n\nインストールされている Git のバージョンを確認するには:\n\n1. ターミナル ウィンドウを開きます。 \n2. 次のコマンドを実行して、コンピューターにインストールされている `git` バージョンを確認します。\n\n    ```bash\n    $ git --version\n    ```\n\n    出力例: `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>Teams Toolkit のインストール\n\nTeams Toolkit は、アプリのプロジェクト スキャフォールディングを作成するためのツールを使用して開発プロセスを簡略化するのに役立ちます。 選択したすべての機能に必要なディレクトリ構造が作成され、必要なファイルが配置され、プロジェクトをビルドする準備が整います。\n\nTeams Toolkit は、Visual Studio 2019 拡張機能として利用できます。\n\nTeams Toolkit 拡張機能をインストールするには:\n\n1. Visual Studio 2019 を開き、**[拡張機能]**  >  **[拡張機能の管理]** を選択します。\n1. 検索ボックスに、「**Teams Toolkit**」と入力します。\n1. Teams Toolkit の横にある **[ダウンロード]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"画像は Teams Toolkit のインストールを示しています。\"::: \n\n    変更は、Visual Studio 2019 を閉じた後に使用できます。 拡張機能のインストール後に Visual Studio 2019 を再起動する必要があるため、これが必須です。\n\n1. **[閉じる]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"画像は、Teams Toolkit のインストールが完了したところを示しています\" lightbox=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\":::\n\n1. Visual Studio 2019 を閉じます。\n    \n    VSIX インストーラーが開き、拡張機能をインストールする手順が表示されます。\n\n1. VSIX インストーラーの指示に従って、ツールキットのインストールを完了します。\n1. Visual Studio 2019 をもう一度開きます。\n\nTeams アプリは、Visual Studio 2019 でテンプレートとして使用できるようになります。\n\nTeams Toolkit は、[Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit) でも見つけることができます。\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Teams 開発テナントを設定する\n\n**テナント** とは、チャット、ファイルの共有、会議の実行を行う Teams の組織のスペースまたはコンテナーのようなものです。 このスペースは、アプリをサイドロードしてテストする場所でもあります。 テナントを使って開発する準備ができているかどうかを確認しましょう。\n\n### <a name=\"check-for-sideloading-option\"></a>サイドローディング オプションを確認する\n\nアプリを作成したら、アプリを配布せずに Teams に読み込む必要があります。 このプロセスはサイドローディングと呼ばれます。 このオプションを表示するには、Microsoft 365 アカウントにサインインします。\n\n> [!NOTE]\n> サイドローディングは、Teams のローカル環境でアプリをプレビューおよびテストするために必要です。 有効になっていない場合は、Teams でアプリをローカルでプレビューしてテストすることはできません。\n\n既にテナントがあり、管理者アクセス権がありますか? 実際にそうかどうかを確認しましょう。\n\nTeams でアプリをサイドロードできるかどうかを確認します。\n\n1. Teams クライアントで、**[Store]** アイコンを選択します。\n1. **[アプリの管理]** を選択します。\n1. **[カスタム アプリのアップロード]** オプションを探します。 オプションが表示された場合は、アプリのサイドローディングが有効です。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"図は、Teams でカスタム アプリをアップロードするオプションを示しています。\":::\n\n    > [!NOTE]\n    > Teams でカスタム アプリをアップロードするオプションが表示されない場合は、Teams 管理者に問い合わせてください。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>無料の Teams 開発者テナントを作成する (省略可能)\n\nTeams アカウントをお持ちでない場合は、無料で取得できます。Microsoft 365 開発者プログラムに参加しましょう。\n\n1. [Microsoft 365 開発者プログラム](https://developer.microsoft.com/microsoft-365/dev-program)に移動します。\n1. **[今すぐ参加]** を選択し、画面の指示に従います。\n1. ようこそ画面で、**[E5 サブスクリプションの設定]** を選択します。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Microsoft 365 開発者プログラムにサインアップした後に表示される内容の例\":::\n\n1. 設定した管理者アカウントを使用して Teams にサインインします。 Teams に **[カスタム アプリのアップロード]** オプションがあることを確認します。\n\n## <a name=\"get-a-free-azure-account\"></a>無料の Azure アカウントを取得します。\n\nアプリをホストする場合、または Azure でリソースにアクセスする場合は、Azure サブスクリプションが必要です。開始する前に、[無料アカウントを作成](https://azure.microsoft.com/free/) してください。\n\nこれで、すべてのツールを取得し、アカウントを設定しました。 次に、開発環境を設定し、ビルドを開始しましょう。\n\n> [!NOTE]\n> プラットフォームで適切なターミナル ウィンドウを使用します。 これらの例では Git Bash を使用しますが、ほとんどのプラットフォームで実行できます。\n\n最新バージョンの Visual Studio を開き、更新プログラムをインストールします。\n\nこのチュートリアルでは、同じターミナル ウィンドウを使用してコマンドを実行できます。\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>サンプルのダウンロード\n\nこのチュートリアルでは、[Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) を使用します C# のサンプル。 GitHub からダウンロードして複製できます。\n\nこのサンプルを使用するには、次のいずれかの方法でサンプル リポジトリを複製します:\n\n- [Git Bash の使用](#to-use-git-bash-to-clone-the-sample-repo)\n- [Visual Studio 2019 の使用](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>Git Bash を使用してサンプル リポジトリを複製するには\n\n- ターミナル ウィンドウで次のコマンドを実行して、サンプル リポジトリをコンピューターに複製します:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    C# アプリのサンプル リポジトリは、既定の場所にあるコンピューターに複製されます。\n\n    > [!TIP]\n    > この[リポジトリ](https://github.com/OfficeDev/Microsoft-Teams-Samples)を[フォーク](https://help.github.com/articles/fork-a-repo/)し、変更を修正し GitHub に保存できます。\n\n    <a name=\"BuildRun\"></a>\n\n    Visual Studio 2019 で開くと、複製されたリポジトリを表示できます。 \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>Visual Studio 2019 を使用してサンプル リポジトリを複製するには\n\n1. Visual Studio 2019 を開きます。\n1. **[リポジトリの複製]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"C# Teams アプリ用のサンプル リポジトリの複製\":::\n\n1. リポジトリを複製するためのパスとして、「`https://github.com/OfficeDev/Microsoft-Teams-Samples.git`」を入力します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"C# Teams アプリ用のサンプル リポジトリの複製\":::\n\n1. リポジトリを複製する場所を入力し、**[複製]** を選択します。\n\n    サンプル リポジトリが複製され、Visual Studio が開きます。 複製されたリポジトリは、**ソリューション エクスプローラー** で表示できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"c# Teams アプリのサンプル リポジトリが複製されました\":::\n\nサンプル リポジトリを複製したので、Teams 用の最初の C# アプリをビルドしましょう。\n"
- title: 最初の C# アプリをビルドして実行する
  durationInMinutes: 1
  content: "\nC# サンプル アプリのリポジトリを複製したら、ローカル環境でアプリをビルドして実行できます。\n\nこのページでは、次の方法について説明します。\n1. [初めてのアプリを構築する](#build-your-first-app)\n1. [サンプル アプリをローカルに展開します](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>初めてのアプリを構築する\n\nワークスペースの作成後、**ソリューション エクスプローラー** でプロジェクト構造を表示できます。 これで、アプリをビルドして実行する準備ができました。\n\n**複製されたサンプルをビルドして実行するには**\n\n1. ソリューション ファイル **Microsoft.Teams.Samples.HelloWorld.sln** をサンプルの **Microsoft-Teams-Samples/samples/app-hello-world/csharp** ディレクトリから開きます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"Hello World ソリューション ディレクトリ構成を示す画像\":::\n\n1. **[プロジェクト]** メニューを選択し、**Microsoft.Teams.Samples.HelloWorld.Web プロパティ** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"[プロパティ] オプションを選択するための [プロジェクト] メニューを示す画像\":::\n\n1. **[プロパティ]** ウィンドウの左側のウィンドウから **[デバッグ]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"プロパティ ウィンドウを示す画像\":::\n\n1. 画面を移動して、**[Web サーバーの設定]** を表示します。\n\n1. **[デバッグ]** ウィンドウで次の設定を行います。\n    - **アプリ URL** を `http://localhost:3333/` に設定します。\n    - **[SSL の有効化]** をクリアします。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"C# プロジェクト プロパティの Web サーバー設定を示す画像\":::\n\n1. **[ビルド]** メニューの **[ソリューションのビルド]** をクリックします。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"ビルド完了を示す画像\":::\n\n1. **F5** キーを選択します。または、**デバッグ** メニューから **[デバッグの開始]** を選択してサンプルを実行します。\n\n    アプリが起動すると、ブラウザー ウィンドウが開きます。 アプリのルートが表示されます。 次の URL に移動して、すべてのアプリ URL が読み込まれているかどうかを確認できます。\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"ローカル ホストを示す画像\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"アプリの Hello ページを示す画像\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"アプリの最初のタブを示す画像\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"アプリの 2 番目のタブを示す画像\":::\n\n    > [!Note]\n    > エラー `Could not find a part of the path … bin\\roslyn\\csc.exe` が表示された場合は、コマンド `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r` でパッケージを更新します。\n\n## <a name=\"deploy-your-sample-app-locally\"></a>サンプル アプリをローカルに展開する\n\nMicrosoft Teams アプリは、1 つ以上の機能を提供する Web アプリケーションです。 Teams プラットフォームがアプリを読み込むことができるように、アプリをインターネット上で使用できるようにします。 `ngrok` を使用してアプリをホストし、コンピューター上のローカル プロセスへのトンネルを作成します。\n\nアプリをホストした後、`https://yourteamsapp.ngrok.io` や `https://yourteamsapp.azurewebsites.net` などのルート URL をメモします。\n\n### <a name=\"tunnel-using-ngrok\"></a>ngrok を使用したトンネル\n\nngrok をインストールした後、アプリをローカルに展開するためのトンネルを作成できます。\n\n1. 新しいターミナル ウィンドウを開きます。\n1. 次のコマンドを実行して、新しいセッションを作成します。 サンプル アプリではポート 3333 を使用します。\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    ngrok トンネルが作成されます。 次に例を示します:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"ngrok トンネルを示すイメージ\":::\n\n    ngrok トンネル URL に `hello`、`first`、または `second` を追加して、アプリのさまざまなタブ ページを表示できます。\n    \n    Ngrok はインターネットからの要求をリッスンし、ポート 3333 で実行されているアプリにルーティングします。\n\nアプリのローカル展開を確認するには:\n\n1. ブラウザーを開きます。\n1. 次の URL を使用してアプリを読み込みます。\n\n    `https://<forwarding address in ngrok console session>/`\n\n    URL の例を次に示します:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"ngrok トンネル上でローカルに実行される C# アプリを示す画像\":::\n\n1. ngrok コンソールで転送先アドレスをメモします。 Teams でアプリを展開するには、この URL が必要です。\n\n    > [!NOTE]\n    > [ビルド](#build-your-first-app)で別のポートを使用した場合は、同じポート番号を使用して、`ngrok` トンネルをセットアップしてください。\n    > [!TIP]\n    > 別のターミナル ウィンドウで `ngrok` を実行することをお勧めします。 これは、アプリを停止、リビルド、再実行する必要があるときに、`ngrok` がアプリに干渉しないようにするのに役立ちます。 `ngrok` セッションは、このウィンドウで便利なデバッグ情報を提供します。\n    > [!IMPORTANT]\n    > 無料バージョンの ngrok を使用する場合、アプリは開発用コンピューター上の現在のセッション中でのみ使用できます。 コンピューターがシャットダウンしているか、スリープ状態になった場合は使用できません。 サービスを再起動すると、新しいアドレスが返されます。 次に、古い住所を使用するすべての場所を更新する必要があります。 テスト用にアプリを共有するときは、この手順を忘れないでください。\n"
- title: 開発者ポータルを使用して最初の C# アプリを構成する
  durationInMinutes: 1
  content: "\n[開発者ポータル](https://dev.teams.microsoft.com/)を使用して、アプリ パッケージを Teams にアップロードし、アプリの機能を構成できます。 開発者ポータルは、アプリの作成と登録を簡略化する Teams アプリです。 Teams ストアからインストールします。\n\nTeams アプリをビルドしてテストしたら、開発者ポータルを使用してアプリを構成してプレビューできます。\n\nこのページでは、[開発者ポータルでアプリ パッケージを構成する](#configure-the-app-package-in-developer-portal)方法について説明します。\n\n<details>\n<summary>Visual Studio 2019 の発行オプション</summary>\n\nこのチュートリアルでは、開発者ポータルを使用してアプリの機能を構成し、アプリを発行します。 \n\nただし、Visual Studio 2019 には、Azure を含むさまざまなプロバイダーへのアプリ展開のサポートが組み込まれています。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"Visual Studio 2019 で [Azure に発行] メニューを示す画像\":::\n\nMicrosoft Azure は、無料レベルで .NET アプリケーションをホストします。 `Hello World` サンプルを実行するのに十分な共有インフラストラクチャを使用します。 詳細については「[新しい無料 Azure アカウントの作成](https://azure.microsoft.com/free/)」を参照してください。\n\nこのオプションを使用する場合は、Azure サイトと Azure リソースの詳細を入力し、アプリを発行できます。 \n\nこのチュートリアルでは、この手順を使用する必要はありません。\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>開発者ポータルでアプリ パッケージを構成する\n\n[開発者ポータル](https://dev.teams.microsoft.com/)を使用して、アプリ パッケージとその機能を構成できます。 開発者ポータルは、アプリの作成と登録を簡略化する Teams アプリです。 Teams ストアからインストールします。\n\nアプリ パッケージの構成には、次のものが含まれます:\n\n1. [開発者ポータルにアプリ パッケージをインポートする](#import-the-app-package-in-developer-portal)\n1. [アプリ機能の構成](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>開発者ポータルでアプリ パッケージをインポートする\n\nアプリ パッケージをインポートするには:\n\n1. Microsoft Teams を開きます。\n\n1. 左側のバーから **[Store]** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: アイコンを選択します。\n\n1. 検索バーで **[開発者ポータル]** を検索し、**[開発者ポータル]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"開発者ポータル アプリの選択\":::\n\n1. [**開く**]を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"開発者ポータル アプリを開くところを示した画像\":::\n\n    開発者ポータルが開きます。\n\n1. **[アプリ]** タブを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"開発者ポータル アプリ\":::\n\n1. **[アプリのインポート]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"[インポート アプリ] ボタンを示す画像\":::\n\n1. C# サンプル リポジトリ ディレクトリ構造の次のパスから、アプリ パッケージ `helloworldapp.zip` を選択します。\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    **Hello World** アプリは開発者ポータルにインポートされます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Teams にインポートされたアプリを示す画像\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>開発者ポータルでアプリのツアーをする\n\nアプリを開発者ポータルにインポートしたら、マニフェスト ファイルなどの詳細を表示できます。\n\n#### <a name=\"view-app-information\"></a>アプリ情報を確認する\n\n1. 開発者ポータルの左側のウィンドウから **[基本情報]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"開発者ポータルの左側のウィンドウを示す画像\":::\n\n1. 基本情報の次の情報に注意してください:\n    - アプリ ID\n    - 開発者情報\n    - アプリの URL\n\n1. 左側のウィンドウから **[ブランド]** を選択して、ブランド情報を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"アプリのブランド情報を示す画像\":::\n\n    これらの詳細は、配布用の新しいアプリを作成する場合に重要です。\n\n#### <a name=\"view-app-features\"></a>アプリ機能の表示\n\n- 開発者ポータルの左側のウィンドウから **[アプリ機能]** を選択します。\n\n    アプリの機能が右側のウィンドウに表示されます。 個人用アプリ、ボット、メッセージ拡張機能のカードを表示できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"アプリの機能を示す画像\":::\n\n#### <a name=\"view-the-app-manifest\"></a>アプリ マニフェストの表示\n\nマニフェスト ファイルを使用して、アプリの機能、必要なリソース、およびその他の重要な属性を構成します。\n\nアプリ マニフェストを表示するには:\n\n- 左側のパネルから **[発行]** を選択してドロップダウン リストを開き、**[アプリケーション パッケージ]** を選択します。\n    \n    マニフェスト ファイルが右側のウィンドウに表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"開発者ポータルでアプリ マニフェスト ファイルを示す画像\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>アプリ機能の構成\n\nアプリを 開発者ポータルにインポートしたら、次の手順ではアプリの機能を構成します。 開発者ポータルには、さまざまなセクションのすべてのアプリ情報が含まれています。 これにより、アプリの機能の構成が簡単になります。\n\n開発者ポータルを使用すると、次のことができます:\n- [個人用タブ アプリの構成](#configure-personal-tab-app)\n- [ボットの構成](#configure-bot)\n- [メッセージ拡張機能の構成](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>個人用タブ アプリの構成\n\n個人用タブ アプリを構成するには:\n\n1. **[アプリ機能]** ウィンドウの **[個人用アプリ]** カードで、:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: アイコンを選択し、**[編集]** を選択します。\n\n    [Hello] タブの詳細が表示されます。\n\n1. Hello タブの :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: アイコンを選択し、**[編集]** を選択して、更新用のアプリの詳細を開きます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Hello タブ メニューを示す画像\":::\n\n1. **[個人用アプリにタブを追加]** の [Hello] タブのアプリの詳細を入力します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"Hello タブの詳細を示す画像\":::\n\n    次の詳細を入力します:\n    - **名前**: Hello タブ。\n    - **コンテンツ URL** および **Web サイト URL**: ngrok コンソール セッションの転送先アドレス。\n    - **コンテキスト**: **[個人用タブ]** を選択します。\n\n1. **[更新]** を選択します。\n\n    Hello タブの詳細は、**[個人用アプリ]** ウィンドウに表示されます。\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"保存する [Hello] タブの詳細を示す画像\":::\n\n    **[個人用アプリ]** ウィンドウに、新しいタブと自動的に作成された [バージョン情報] タブが表示されるようになりました。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"[Hello] タブと [バージョン情報] タブの詳細を示す画像\":::\n\n#### <a name=\"configure-bot\"></a>ボットの構成\n\nボット機能をアプリに簡単に追加できます。 Hello World サンプル アプリには、その一部として既にボットが含まれていますが、Teams に登録する必要があります。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"アプリ ID なしでインポートされたボット アプリを示す画像\":::\n\nサンプルからインポートされたボットには、関連付けられたアプリ ID がありません。 これを削除し、新しいボットを作成する必要があります。 開発者ポータルによって新しいアプリ ID が作成され、Teams に登録されます。\n\nボットの追加と構成には、次の処理が含まれます:\n\n1. [新しいボットの追加](#to-add-a-new-bot)\n1. [アプリにボットを追加](#to-add-bot-to-app)\n1. [ボットの範囲を構成](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>新しいボットを追加するには\n\n1. **[アプリ機能]** ウィンドウの **[ボット]** カードの :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: アイコンを選択します。**[削除]** を選択します。\n\n1. **[ツール]** を選択して機能を追加します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"[ツール] オプションを示す画像\":::\n\n1. **[ツール]** ウィンドウで **[ボット管理]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"[ボット管理] ウィンドウを示す画像\":::\n\n1. **[ボット管理]** ウィンドウで **[+ 新規のボット]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"[新規のボット] オプションを示す画像\":::\n\n1. ボットに適した名前を入力し、**[追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"ボットの追加方法を示す画像\":::\n\n    **[構成]** ウィンドウが表示され、左側のウィンドウに新しいボットの詳細が表示されます。\n\n1. `ngrok` コンソールから転送 URL を入力し、**[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"ボットのエンドポイントを追加する方法を示す画像\":::\n\n1. [ **クライアント シークレット**] を選択し、[ **クライアント シークレットをボットに追加** する] を選択して、ボットのパスワードを生成します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"クライアント シークレット セクションを示す画像\":::\n\n    開発者ポータルによりボットのパスワードが生成されます。\n\n    :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: アイコンを使用して、パスワードをコピーできます。 このチュートリアルでは、コピーする必要はありません。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"クライアント シークレットが生成されたのを示す画像\":::\n\n1. **[OK]** を選択します。\n\n1. **より多くのボット** を選択して、**[ボット管理]** ウィンドウに戻ります。\n\n    **[ボット管理]** ウィンドウには、アプリ ID で追加された新しいボットが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"アプリ ID のある新しいボットを示す画像\":::\n\n1. **[クライアント シークレット]** セクションのパスワードと共にボット ID を保存していることを確認します。\n\n##### <a name=\"to-add-bot-to-app\"></a>ボットをアプリに追加するには\n\n1. **[アプリ機能]** ウィンドウを開き、**[ボット]** カードを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"ボット カードを示す画像\":::\n\n    **[ボット]** ウィンドウが表示されます。\n\n1. **[既存のボットを選択]** からボット アプリを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"既存のボット アプリの追加方法を示す画像\":::\n\n    新しいボットは、独自のアプリ ID を使用してアプリに追加されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"新しいボットがアプリに追加されたことを示す画像\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>ボット スコープを構成するには\n\n1. 新しい **[ボット]** カードの :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: アイコンを選択し、**[編集]** を選択します。\n\n1. **[ボット]** ウィンドウ内を移動して、**\"コマンド\"** セクションを表示し、**[+ コマンドの追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"&quot;コマンド&quot; セクションを示す画像\":::\n\n1. **コマンド** の適切な名前と説明を入力します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"コマンドの追加方法詳細を示す画像\":::\n\n1. コマンドの 3 つの範囲をすべて選択し、**[追加]** を選択します。\n    - **個人用**\n    - **チーム**\n    - **グループ チャット**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"コマンドの保存方法の詳細を示す画像\":::\n\n    新しいコマンドは、**[ボット]** ウィンドウの **\"コマンド\"** セクションに追加されます。\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"保存されるコマンド詳細を示す画像\":::\n\n    コマンドの詳細が保存されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"保存されたコマンド詳細を示す画像\":::\n\n1. **[アプリ機能]** ウィンドウを開き、**[個人用アプリ]** カードを選択して、アプリのタブの詳細を表示します。\n\n    新しいチャット ボットのタブがアプリに追加されていることがわかります。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"構成されたチャット ボットを示す画像\":::\n\n#### <a name=\"configure-message-extension\"></a>メッセージ拡張機能の構成\n\nメッセージ拡張機能を使用すると、ユーザーはサービスから情報を要求し、その情報を投稿できます。 情報は、カードの形式でチャネルの会話に投稿されます。 メッセージ拡張機能は、作成ボックスの下部に表示されます。\n\n新しいメッセージ拡張機能を追加するには:\n\n1. **[アプリ機能]** ウィンドウの **[メッセージ拡張機能]** カードで :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: アイコンを選択し、**[削除]** を選択します。\n\n1. **[アプリ機能]** ウィンドウから **[メッセージ拡張機能]** を選択します。\n\n1. **からボット アプリの名前を選択し、**[メッセージ拡張機能]** ウィンドウで既存のボット** ドロップダウン リストを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"既存のボットを選択するための [メッセージ拡張機能] ウィンドウを示す画像\":::\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"メッセージ拡張機能の保存ボタンを示す画像\":::\n\n    メッセージ拡張機能が保存され、**\"コマンド\"** セクションが **[メッセージ拡張機能]** ウィンドウに表示されます。\n\n1. **[+ コマンドの追加]** を選択して、メッセージ拡張機能アプリで実行できる処理の範囲を定義します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"コマンド セクションを示す画像\":::\n\n1. **[検索]** が、**\"コマンドの追加\"** ダイアログで追加するコマンドの種類として選択されていることを確認します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"&quot;コマンドの追加&quot; ダイアログを示す画像\":::\n\n1. 適切な情報を次の詳細に入力します:\n    - コマンド ID\n    - コマンドのタイトル\n    - コマンドの説明\n\n1. ダイアログ内を移動して、残りの詳細を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"&quot;コマンドの追加&quot; ダイアログで、残りの詳細を示す画像\":::\n\n1. **[既定値にする]** が選択されていることを確認します。\n1. メッセージ拡張コマンドに対して次のコンテキストを選択します。\n    - コマンド ボックス\n    - 作成ボックス\n    - メッセージ\n1. 次の詳細に適した情報を入力してください:\n    - パラメーター名\n    - パラメーターのタイトル\n    - パラメータの説明\n\n1. 入力の種類として **[テキスト]** を選択します。\n1. **[保存]** を選択します。\n1. メッセージ拡張機能コマンドが保存され、**[メッセージ拡張機能]** ウィンドウのコマンド リストに表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"新しいコマンドが追加されたのを示す画像\":::\n\n1. **[保存]** を選択します。\n1. **[アプリ機能]** ウィンドウを開きます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"Hello World アプリ用に機能が構成されたのを示す画像\":::\n\n    Hello World アプリ用に構成された 3 つの機能 (個人用タブ アプリ、ボット、メッセージ拡張機能) がすべて表示されます。 次の手順では、Teams にアプリを登録し、アプリをテストします。\n"
- title: 最初の C# アプリのプレビューとテスト
  durationInMinutes: 1
  content: "\nアプリをインポートし、開発者ポータルで機能を構成したら、サンプル アプリをプレビューしてテストできます。\n\n## <a name=\"preview-your-app-in-teams\"></a>Teams でアプリをプレビューする\n\nアプリの機能を構成したら、ローカル環境の Teams でアプリをプレビューしてテストできます。\n\nアプリをプレビューするには:\n\n1. 開発者ポータル ツール バーから **[Teams でプレビューする]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"[プレビュー] ボタンを示す画像\"lightbox=\"~/assets/images/teams-toolkit-v2/preview-in-teams.png\":::\n\n    開発者ポータルは、アプリが正常にサイドロードされたことを通知します。\n\n1. **[Store]** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: アイコンを選択します。\n1. **[アプリの管理]** を選択します。\n   アプリはサイドロードされたアプリに一覧リスト表示されます。 \n1. 検索ボックスを使用してアプリを検索し、その行の 3 つのドットを選択します。\n1. **[表示]** オプションを選択します。\n    アプリの **[追加]** ページが表示されます。\n1. **[追加]** を選択して、Teams にアプリを読み込みます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"&quot;アプリの追加&quot; ダイアログを示す画像\":::\n\n    アプリが Teams で利用できるようになりました。 すべてのタブを表示し、機能をテストできます。\n\n    - [Hello] タブ:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"ローカル環境の [Hello] タブを示す画像\":::\n\n    - チャット ボット:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"ローカル環境のアプリのボットを示す画像\":::\n\n        チャットを使用してメッセージを送信できます。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"ローカル環境でチャットを示す画像\":::\n\n    - メッセージ拡張機能:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"ローカル環境のメッセージ拡張機能を示す画像\":::\n\n        メッセージ拡張機能を使用して検索を試すことができます。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"ローカル環境のメッセージ拡張機能を使った検索を示す画像\"lightbox=\"~/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\":::\n\n    - [バージョン情報] タブ:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"ローカル環境の [バージョン情報] タブを示す画像\":::"
