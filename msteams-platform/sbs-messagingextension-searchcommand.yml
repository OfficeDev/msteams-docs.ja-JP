### YamlMime:Tutorial
title: 検索ベースのメッセージ拡張機能をビルドする
metadata:
  title: 検索ベースのメッセージ拡張機能をビルドする
  description: ユーザーが外部システムを検索できるようにする Microsoft Teams の検索ベースのメッセージ拡張機能を構築する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 01/27/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/search-commands/define-search-command.md
  nextTutorialTitle: 検索コマンドの詳細
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: b5e8689622029551024e25bd202e6489a600468a
  ms.sourcegitcommit: ac59d469b823b80e65ee6f7be11ec5c365977a1c
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 10/06/2022
  ms.locfileid: "68490093"
items:
- durationInMinutes: 1
  content: "メッセージ拡張機能を使用すると、ユーザーは Microsoft Teams クライアントで Web サービスを操作できます。 これらは、メッセージの作成領域、コマンド ボックス、またはメッセージから直接外部システムで検索するのに役立ちます。 \n\n**検索ベースのメッセージ拡張機能の主な機能**\n\n* ユーザーが外部システムを検索できるようにします。\n* カードの形式でメッセージに検索結果を挿入します。\n\nこのステップ バイ ステップ ガイドは、検索ベースのメッセージ拡張機能を構築するのに役立ちます。 次の出力が表示されます。\n\n![Final](~/assets/images/Teams-Messaging-Extensions-Search/final_output.png)\n"
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境をセットアップしてください。  \n\n | &nbsp; | インストール | 使用するには... |\n | --- | --- | --- |\n | **必須** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams は、チャット、会議、通話、すべて 1 か所のアプリを通じて、共同作業するすべてのユーザーと共同作業を行います。|\n | &nbsp; | [Visual Studio 2022 バージョン 17.3](https://visualstudio.microsoft.com)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • **ASP.NET と Web 開発** <br> • **.NET Core クロスプラットフォーム開発** | Visual Studio 2022 でエンタープライズ バージョンをインストールし、ワークロードをインストールできます。 |\n | &nbsp; | [.NET Core SDK バージョン 3.1](https://dotnet.microsoft.com/en-us/download) | ローカル デバッグとAzure Functions アプリのデプロイ用にカスタマイズされたバインド。 .NET 3.1 (またはそれ以降) SDK をグローバルにインストールしていない場合は、ポータブル バージョンをインストールできます。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams アプリの機能 (会話ボット、メッセージ拡張機能、受信 Webhook) には、受信接続が必要です。 トンネルは、開発システムを Teams に接続します。 タブのみを含むアプリでは必須ではありません。 このパッケージはプロジェクト ディレクトリ内にインストールされます (npm `devDependencies` を使用)。 |\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken](https://ngrok.com/download) をインストールします。\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "リポジトリをローカル GitHub に複製 `BotBuilder-Samples` します。  \n\n 1. [BotBuilder サンプルを](https://github.com/microsoft/BotBuilder-Samples)開きます。\n 1. [ **コード**] を選択します。\n 1. ドロップダウン メニューから[ **Open with GitHub Desktop]\\(GitHub Desktop で開く\\**) を選択します。\n\n    ![リポジトリを複製する](~/assets/images/Teams-Messaging-Extensions-Search/clonerepository_1.png)\n\n 1. [ **複製**] を選択します。 \n"
- title: Azure AD portal でボットを作成して登録する
  durationInMinutes: 5
  content: "Microsoft Azure Active Directory (Azure AD) でボットを作成して登録するには、次の手順に従います。\n\n* Azure bot リソースを作成して、Azure Bot Serviceにボットを登録します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* Microsoft Teams チャネルを追加して、ボットを Teams チャネルにデプロイします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot**」と入力します。\n1. **Enter** キーを押します。\n1. **Azure Bot** を選択します。\n\n     :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Azure ボット。\":::\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要な **ボット ハンドル** 名を入力します。\n1. ドロップダウン リストから **[サブスクリプション]** を選択します。\n1. ドロップダウン リストから **[リソース グループ]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/review-plus-create_1.png\" alt-text=\"review-plus-create\"::: \n\n1.  新しいリソース グループを作成するには、[ **新しいリソース グループ** の場所] ドロップダウン リストから必要な場所を選択します。\n    詳細については、「 [リソース グループの作成](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups)」を参照してください。\n\n    ![新しいリソース グループの場所](~/assets/images/bots/newresource.png)\n\n1. **[ボットの種類**] で **[MultiTenant**] を選択します。\n\n1. **[Microsoft アプリ ID**] セクションでは、既定で [**新しい Microsoft アプリ ID の作成]** が選択されています。 \n\n   [ **既存のアプリの登録を使用** する] を選択し、既存 **のアプリ ID**、 **アプリ テナント ID**、 **MSI リソース ID を** 入力することもできます。\n\n   > [!NOTE]\n   > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. **[確認 + 作成]** を選びます。\n\n    :::image type=\"content\" source=\"./assets/images/meeting-token-generator/meeting-token-generator-appidcreate_1.png\" alt-text=\"アプリ ID の作成\":::\n\n1. 検証に合格した場合は、**[作成]** を選択します。 \n\n    ボット サービスがプロビジョニングされるまで少し時間がかかります。 \n\n1. [**リソースに移動**] を選びます。 \n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/botdeployment_1.png\" alt-text=\"ボットのデプロイ\":::\n\n    Azure ボットが作成されます。\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/bot-page_1.png\" alt-text=\"作成されたボット リソース\":::\n\n**クライアント シークレットを作成するには**\n\n  新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のパネルで、[構成] を選択 **します**。 \n\n   > [!TIP]\n   > 今後参照できるように **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **Microsoft アプリ ID** の横にある [**管理**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"管理\":::\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_1.png\" alt-text=\"新しいクライアント シークレット\":::\n\n   [ **クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n1. **「説明」と入力します**。\n\n1. **[追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-Messaging-Extensions-Search/clientsecret_1.png\" alt-text=\"クライアント シークレットをアプリに追加する\":::\n\n1. [ **値** ] 列で、[ **クリップボードにコピー**] を選択します。\n\n     :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/clientvalue_1.png\" alt-text=\"クライアント シークレットの値\":::\n   \n   > [!TIP]\n   > 今後参照できるように **、クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n**Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/gotohome_1.png\" alt-text=\"ホームに移動する\":::\n\n1. **最近使用したリソース** からボットを選択します。\n\n1. 左側のウィンドウで **[チャネル**] を選択し、**Microsoft Teams** を選択します。 <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n    :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"チャネルで Teams を選択する\":::\n\n1. [ **利用規約**] に同意するには、チェック ボックスをオンにします。\n\n1. **[同意する**] を選択します。\n\n      :::image type=\"content\" source=\"./assets/images/meetings-side-panel/terms_1.png\" alt-text=\"用語\":::\n\n1. **[保存]** を選択します。\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/configure-msteams_1.png\" alt-text=\"msteams を構成する\"::: \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n> [!TIP]\n> **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに記載されている手順に従って、サインアップして ngrok を認証します。 `ngrok http --host-header=localhost 3978` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https から io) をコピーします。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url_1.png\" alt-text=\"ngrok HTTPS URL\":::\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > は `WebAppDomain` 、完全修飾ドメイン名であり、ドメイン名には含 `https://` まれません。\n\n1. 作成した Azure ボットの **設定** で、[構成] を選択 **します**。\n\n1. **メッセージング エンドポイント** で、ngrok から入手できる HTTPS URL を使用し、URL の最後に **/api/messages** を追加します。\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/messaging-endpoint_1.png\" alt-text=\"メッセージング エンドポイント\":::\n\n1. **[適用]** を選択します。\n\n    Azure Bot Serviceでボットが正常に設定されました。\n"
- title: Azure AD アプリの登録を更新する
  durationInMinutes: 1
  content: "1. [Microsoft Azure portal](https://portal.azure.com/)に移動します。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[ **アプリの登録**] を選択します。\n\n1. ボットを選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/appregister_1.png\" alt-text=\"アプリの登録\":::\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [ **設定**] を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/exposeanapi_1.png\" alt-text=\"API を公開する\":::\n\n1. **アプリケーション ID URI を** 次の`api://WebAppDomain/{AppID}`形式で設定します。\n\n   :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/setlink_1.png\" alt-text=\"リンクを設定する\":::\n    \n   次の図は、ドメイン名を示しています。\n    \n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/appIDuri_1.png\" alt-text=\"アプリ ID URI\":::\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、新しい ngrok サブドメイン名です `f631****.ngrok.io` 。\n\n1. **[スコープの追加]** を選択します。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectscope_1.png\" alt-text=\"[スコープの追加]\":::\n\n1. 表示されるパネルで、**スコープ名** として入力`access_as_user`します。\n\n1. **[同意できるユーザー] を** `Admins and users`[ .\n\n1. スコープの適切な値を使用して管理者とユーザーの同意プロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * **同意表示名管理** 入力`Teams can access the user’s profile`します。\n\n     * **同意の説明管理** 入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **ユーザー同意表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **ユーザーの同意の説明** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/addascope_1.png\" alt-text=\"スコープを追加する\":::\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://9179****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/scopes_1.png\" alt-text=\"Scope\"::: \n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectclientapp_1.png\" alt-text=\"クライアント アプリケーションを選択する\"::: \n\n1. **クライアント ID を** 入力します。 `1fec8e78-bce4-4aaf-ab1b-5451cc387264` Teams モバイルアプリケーションまたはデスクトップ アプリケーションの場合。 \n\n    ![クライアント アプリケーションを追加する 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   Teams Web アプリケーションの **クライアント ID:**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` を入力できます。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. [ **承認されたスコープ]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/authorizedscope_1.png\" alt-text=\"承認されたスコープ\"::: \n\n   次の図は、クライアント ID を表示します。\n\n    ![クライアント アプリケーション](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. 左側のパネルで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、API アクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/add-permission_1.png\" alt-text=\"アクセス許可を追加する\":::\n\n1. **[Microsoft Graph]** を選択します。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. 以下のアクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n     * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     source=\"~/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"Other permissions\":::\n\n1. 左側のパネルで [ **認証** ] を選択してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/webauth_1.png\" alt-text=\"Web\":::\n\n     1. 完全修飾ドメイン名に追加して、アプリの `auth-end` リダイレクト URI を入力します。</br> \n       `https://9179****.ngrok.io/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして **、暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/authend_1.png\" alt-text=\"Auth-end\":::\n"
- title: アプリの設定とマニフェスト ファイルを設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリの **appsettings.json** に移動します。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-Messaging-Extensions-Search/appsettingslocation_1.png\" alt-text=\"アプリ設定の場所\":::\n\n1. Visual Studio の最新バージョンで **appsettings.json を** 開き、次の情報を更新します。  \n\n     * **MultiTenant** に設定`\"MicrosoftAppType\"`します。\n     * ボットの **Microsoft アプリ ID** に設定`\"MicrosoftAppId\"`します。\n     * **[クライアント シークレット** の **値]** に設定`\"MicrosoftAppPassword\"`します。\n     * 空白として設定 `\"MicrosoftAppTenantId\"` します。\n     * 完全修飾ドメイン名 (https から io) に設定 `\"BaseUrl\"` します。\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/appsettings_1.png\" alt-text=\"アプリの設定\":::\n\n1. 複製されたリポジトリに `manifest.json` 移動します。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-Messaging-Extensions-Search/manifestlocation_1.png\" alt-text=\"マニフェスト ファイルの場所\":::\n\n1. Visual Studio の最新バージョンで開 `manifest.json` き、次の変更を加えます。\n\n     * 名前に`WebAppDomain`置き換えます`<<YOUR-BASE-URL-DOMAIN>>`。\n     * すべての出現箇所をボットの `<<YOUR-MICROSOFT-APP-ID>>` **Microsoft アプリ ID に** 置き換えます。\n\n    :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/manifest_1.png\" alt-text=\"マニフェスト\":::\n"
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**Visual Studio またはコマンド ラインの最新バージョンを使用してサービスをビルドして実行するには**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Visual Studio の最新バージョン](#tab/latestversionofvisualstudio)\n\n   1. Visual Studio の最新バージョンを起動します。\n   1. **[ファイル** > **を開く** > **] プロジェクト/ソリューション** に移動します。\n\n      :::image type=\"content\" source=\"./assets/images/meeting-token-generator/meeting-token-generator-VSopenfile_1.png\" alt-text=\"ファイルを開く\":::\n\n   1. **50.teams-messaging-extensions-search** フォルダーから **TeamsMessagingExtensionsSearch.csproj** ファイルを選択します。\n\n      :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/fileready_1.png\" alt-text=\"cs proj ファイル\":::\n\n   1. **ビュー** から **ソリューション エクスプローラー** を開きます。\n\n      :::image type=\"content\" source=\"./assets/images/Teams-task-module/solutionexplorer_1.png\" alt-text=\"ソリューション エクスプローラー\":::\n\n   1. **TeamsMessagingExtensionsSearch** を右クリックして選択します。\n\n   1. [ **スタートアップ プロジェクトとして設定]** を選択します。\n\n      :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/startup_1.png\" alt-text=\"スタートアップ\":::\n\n   1. **F5** キーを押してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/certificate_1.png\" alt-text=\"証明書を信頼する\":::\n\n      Web ページが開き、メッセージが表示されます **。ボットの準備は完了です。**\n\n      ![アプリの準備完了](~/assets/images/Teams-Messaging-Extensions-Search/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウで **BotBuilder-Samples >サンプル > csharp_dotnetcore > 50.teams-messaging-extensions-search** に移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-Messaging-Extensions-Search/dotnetruncmd.png)\n"
- title: 検索メッセージ拡張機能アプリを追加する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで、 **csharp_dotnetcore > 50.teams-messaging-extensions-search > TeamsAppManifest** に移動します。\n\n1. **TeamsAppManifest** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-Messaging-Extensions-Search/zipfile_1.png\" alt-text=\"Zip ファイル\"::: \n\n1. **Microsoft Teams** に移動します。\n\n1. 左側のパネルで、[**アプリ** > の管理] を選択 **します**。\n\n   :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/AppStore_1.png\" alt-text=\"アプリ ストア\":::\n\n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n   :::image type=\"content\" source=\"./assets/images/Teams-task-module/upload-app_1.png\" alt-text=\"アプリをアップロードする\":::\n\n1. [ **開く** ] を選択して、 **TeamsAppManifest** フォルダーに作成した.zip ファイルをアップロードします。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-Messaging-Extensions-Search/selectzipopen_1.png\" alt-text=\"zip ファイルを選択する\":::\n\n1. **[追加]** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Teams-Messaging-Extensions-Search/addapp_1.png\" alt-text=\"アプリを追加する\":::\n\n   ポップアップがチャットで開きます。\n\n   ![チャット](~/assets/images/Teams-Messaging-Extensions-Search/popup.png)\n"
- title: Teams でアプリを操作する
  durationInMinutes: 1
  content: >
    1. ポップアップから任意のオプションを選択します。


    1. テキストを入力し、[ **送信**] を選択します。

       ![オプション](~/assets/images/Teams-Messaging-Extensions-Search/option1.png)

       1. **Nuget パッケージを選択します**。

          ![Nuget](~/assets/images/Teams-Messaging-Extensions-Search/nuget.png)

       1. **[プロジェクト]** を選択します。

          ![Project](~/assets/images/Teams-Messaging-Extensions-Search/project.png)
- title: 課題の完了
  durationInMinutes: 1
  content: >
    このようなものを思いついたのですか?


    ![Final](~/assets/images/Teams-Messaging-Extensions-Search/final_output.png)
- content: Teams メッセージ拡張機能の検索を開始するためのチュートリアルを完了しました。
