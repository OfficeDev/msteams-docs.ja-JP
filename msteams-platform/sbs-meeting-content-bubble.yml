### YamlMime:Tutorial
title: 会議のコンテンツ バブル
metadata:
  title: 会議のコンテンツ バブル
  description: このチュートリアルでは、会議のコンテンツ バブルに返信を送信する方法について説明Teams。
  audience: Developer
  level: Beginner
  ms.date: 12/03/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 会議用アプリを有効にして構成する方法の詳細
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 50cdcde222ec9e43416d068c540aa191ba6aade0
  ms.sourcegitcommit: 3dc9b539c6f7fbfb844c47a78e3b4d2200dabdad
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 03/31/2022
  ms.locfileid: "64571054"
items:
- durationInMinutes: 1
  content: >
    Microsoft Teams会議でコンテンツ バブル ボットを操作するのにTeamsします。


    > [!NOTE]

    > 会議コンテンツ バブルは、匿名ユーザー Azure ADユーザーにのみ使用できます。


    **会議コンテンツ バブルの主な機能**


    * アダプティブ カードに議題項目が一覧表示されます。

    * 指定した議題で任意のオプションを選択できます。

    * チャットで送信されたコンテンツ バブルまたはアダプティブ カードに関するフィードバックを送信できます。


    このステップ バイ ステップ ガイドは、参加者との会議中にコンテンツ バブル ボットにフィードバックTeamsするのに役立ちます。 次の出力が表示されます。

       ![会議コンテンツバブルの概要](~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png)
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境をセットアップしてください。  \n\n* Microsoft Teamsアカウントを使用する\n* [.NET Core SDK](https://dotnet.microsoft.com/download) バージョン 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) の最新バージョン (devbox テストの場合のみ) または同等のトンネリング ソリューション\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken をインストールします](https://ngrok.com/download)。\n\n  作業に関する知識が必要 [C#](/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments)。\n"
- title: ローカル環境のセットアップ
  durationInMinutes: 1
  content: "リポジトリ`Microsoft-Teams-Samples`をローカル リポジトリに複製GitHub。  \n\n 1. [サンプル[Microsoft Teams開きます](https://github.com/OfficeDev/Microsoft-Teams-Samples)。\n 1. [ **コード] を選択します**。\n 1. ドロップダウン メニューから、[デスクトップで開く] **をGitHubします**。\n\n    ![リポジトリの複製](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. [ **複製] を選択します**。 \n"
- title: ボットを作成して、ポータルにAzure ADする
  durationInMinutes: 5
  content: "ボットを作成および登録するには、Azure Active Directoryを使用してトンネルを作成し、メッセージング エンドポイントを追加するには、次の手順を実行します。\n\n* Azure Bot リソースを作成して、Azure ボットにボットを登録Bot Service。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* ボットMicrosoft Teamsチャネルを追加して、ボットを展開Teamsします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. ポータルに移動[Microsoft Azureします](https://portal.azure.com/)。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot」と入力します**。\n1. [Enter] を **選択します**。\n1. [ **Azure Bot] を選択します**。\n\n     ![Azure ボット カードの作成](~/assets/images/bots/createazurebot.png)\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要なボット ハンドル名 **を入力します**。\n1. ドロップダウン リスト **から [サブスクリプション** ] を選択します。\n1. [リソース **グループ] ドロップダウン リスト** から、既存のリソース グループを選択します。 新しいリソース グループを作成できます ([新しいリソースの作成] を選択>リソース名を入力し、[**OK**>を選択します)。\n\n1. [新しいリソース グループの場所] **ドロップダウン リストから必要な場所を** 選択します。\n\n    ![リソース Azure ボットの作成](~/assets/images/meeting-content-bubble/meeting-token-generator-review-plus-create.png)\n\n1. [ **Microsoft App ID] セクション** で、既定で [ **新しい Microsoft App ID の作成]** が選択されています。 \n\n   [既存のアプリ登録を使用 **する** ] を選択し、[ **既存** のアプリ ID] と [ **既存** のアプリ パスワード] を入力するか、[新しい Microsoft アプリ ID の作成] **を選択します**。\n\n   > [!NOTE]\n   > 同じ Microsoft アプリ ID を持つ複数の **ボットを作成できない**。\n\n1. **[確認 + 作成]** を選びます。\n\n    ![Microsoft アプリ ID の作成](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. 検証に合格した場合は、[作成] を **選択します**。\n\n    ボット サービスをプロビジョニングするには、少し時間が必要です。\n\n1. [**リソースに移動**] を選びます。 \n\n    ![アプリの展開](~/assets/images/meeting-content-bubble/meeting-token-generator-botdeployment.png)\n\n    Azure ボットが作成されます。\n\n    ![Azure ボット リソースの作成](~/assets/images/meeting-content-bubble/meeting-content-bubble-creating-resource-group.png)\n\n**クライアント シークレットを作成するには**\n\n  新しい Microsoft App ID を作成した場合は、次の **手順を実行します**。\n\n1. 左側のパネルで、[構成] を **選択します**。 \n\n   > [!TIP]\n   > 将来の **参照のために Microsoft App ID** または **クライアント ID** を保存します。\n\n1. [ボット **の種類] で [** マルチ **テナント] を選択します**。\n\n   ![Microsoft アプリ ID](~/assets/images/meeting-content-bubble/bot-type.png)       \n\n1. [ **Microsoft App ID] の横にある [** 管理] を **選択します**。\n\n    ![Microsoft アプリ ID](~/assets/images/meeting-content-bubble/meeting-content-bubble-view-configuration.png)\n\n1. [クライアント シークレット **] セクションで、[** 新しいクライアント シークレット **] を選択します**。 \n\n    ![新しいクライアント シークレット](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   [ **クライアント シークレットの追加] ウィンドウ** が表示されます。  \n\n1. [説明 **] と入力します**。\n\n1. **[追加]** を選択します。\n\n    ![アプリにクライアント シークレットを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-clientsecret.png)\n\n1. [値] **列で** 、[クリップボードに **コピー] を選択します**。\n\n     ![クライアント シークレットの値](~/assets/images/meeting-content-bubble/meeting-content-bubble-client-secret.png)\n   \n   > [!TIP]\n   > 将来の **参照のためにクライアント シークレット** 値またはアプリ パスワードを保存します。\n\n**新しいチャネルをMicrosoft Teamsするには**\n\n1. [**ホーム**] を選択します。\n\n1. [最近使ったリソース] から **ボットを選択します**。\n\n1. 左側 **のウィンドウで** [チャネル] を選択します。 \n\n1. [選択 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. このチェック ボックスをオンにして、利用規約 **に同意します**。\n\n1. [同意する] **を選択します**。\n\n      ![利用規約](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. **[保存]** を選択します。\n\n      ![[選択Teams](~/assets/images/meeting-token-generator/config-teams.png)   \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行中の Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https to io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/meeting-content-bubble/meeting-content-bubble-messaging-end-point.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > この `WebAppDomain` 名前は、完全修飾ドメイン名で、そのドメイン名に含 `https://` めは含めではありません。\n\n1. 作成 **設定** Azure ボットの [構成] を選択 **します**。\n\n1. メッセージング **エンドポイントで、** ngrok から利用可能な HTTPS URL を使用し、URL の最後に **/api/messages を追加します**。\n\n    ![メッセージング エンドポイント](~/assets/images/meeting-content-bubble/meeting-content-bubble-config-messaging-end-point.png)\n\n1. **[適用]** を選択します。\n\n    Azure Bot Service でボットを正常にBot Service。\n"
- title: アプリの登録Azure AD更新する
  durationInMinutes: 1
  content: "**Azure AD ポータルからアプリを登録するには**  \n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[アプリの登録 **] を選択します**。\n\n1. ボットを選択します。\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [設定] **を選択します**。\n\n1. の形式 **でアプリケーション ID URI** を設定します `api://{AppID}`。\n\n   ![リンクの設定](~/assets/images/meeting-content-bubble/meeting-content-bubble-set-api.png)\n\n1. との間 `WebAppDomain` に値を挿入 `api://` します `/{AppID}`。</br>\n    `api://****.ngrok.io/{AppID}`</br>\n    \n    ![アプリ ID URI](~/assets/images/meeting-content-bubble/meeting-content-bubble-expose-api.png)\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、 `f631****.ngrok.io` 新しい ngrok サブドメイン名です。\n\n1. **[スコープの追加]** を選択します。 \n\n    ![スコープの追加](~/assets/selectscope.png)\n\n1. 表示されるパネルで、スコープ名 `access_as_user` として **入力します**。\n\n1. 同意 **Whoを設定する?** に設定します`Admins and users`。\n\n1. スコープに適切な値を指定して管理者とユーザーの同意のプロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * 管理者の `Teams can access the user’s profile` 同意 **表示名として入力します**。\n\n     * 管理者の `Allows Teams to call the app’s web APIs as the current user` 同意 **の説明として入力します**。\n\n     * [ユーザー `Teams can access the user profile and make requests on the user’s behalf` の **同意] 表示名として入力します**。\n\n     * [ユーザー `Enable Teams to call this app’s APIs with the same rights as the user` の **同意の説明] と入力します**。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加** ] を選択します。\n\n    ![スコープを追加する](~/assets/images/meeting-content-bubble/meeting-content-bubble-access-as-user.png)\n\n   > [!NOTE]\n   > スコープ **名は、** 最後に **追加されたアプリケーション ID** URI `/access_as_user` と一致する必要があります。</br>\n       `api://****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![範囲](~/assets/images/meeting-content-bubble/meeting-content-bubble-add-scope.png)\n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    ![クライアント アプリの追加](~/assets/images/meeting-token-generator/meeting-token-generator-selectclientapp.png) \n\n1. モバイル **アプリケーションまたはデスクトップ アプリケーション** Teams`1fec8e78-bce4-4aaf-ab1b-5451cc387264`クライアント ID を入力します。 \n\n    ![クライアント アプリケーションの追加 1](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp1.png) \n\n   クライアント ID: **を Web**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` アプリケーションTeams入力できます。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp2.png) \n\n1. [ **承認済みスコープ] を選択します**。\n\n     ![クライアント アプリケーションの追加](~/assets/images/meeting-content-bubble/meeting-content-bubble-add-client-app.png)\n\n   次の図は、クライアント ID を表示します。\n\n     ![クライアント アプリケーション](~/assets/images/meeting-content-bubble/meeting-content-bubble-client-applications.png) \n\n1. 左側のパネルで、[API のアクセス **許可] を選択します**。 \n\n   > [!NOTE]\n   > ユーザーは、アプリが別のテナントにAzure AD場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n1. [**Microsoft Graph] を選択します**。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n    既定では、 **User.Read** が選択されています。\n\n     ![ユーザー](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)\n\n1. 以下のアクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profile**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     ![その他のアクセス許可](~/assets/images/meeting-token-generator/meeting-token-generator-otherpermissions.png)\n\n1. 左側のパネルで、[認証] **を選択** してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する場合に同意する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        ![Web](~/assets/images/meeting-content-bubble/meeting-content-bubble-platform-web.png)\n\n     1. 完全修飾ドメイン名に追加して、アプリ `auth-end` のリダイレクト URI を入力します。</br> \n       `https://****.ngrok.io/auth-end`. </br>\n\n     1. 次 **のチェック ボックスをオンにして** 、暗黙的な付与とハイブリッド フローを有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        ![Auth-end](~/assets/images/meeting-content-bubble/meeting-content-bubble-config-web.png)\n"
- title: アプリの設定を設定する
  durationInMinutes: 1
  content: "1. 複製された **リポジトリの appsettings.json** に移動します。\n\n    ![アプリ設定の場所](~/assets/images/meeting-content-bubble/navigate-to-meeting-content-bubble-repo.png)\n\n1. **2019** 年に **appsettings.json** Visual Studio開き、次の情報を更新します。  \n\n     * ボット `\"MicrosoftAppId\"` の **Microsoft アプリ ID に設定します**。\n     * ボット `\"MicrosoftAppPassword\"` のクライアント シークレット ID 値に設定します。\n     * に `\"BaseURL\"` 設定します `webAppDomain`。\n\n    ![アプリの設定](~/assets/images/meeting-content-bubble/appsettings-json.png)\n"
- title: マニフェスト ファイルのセットアップ
  durationInMinutes: 1
  content: >
    1. 複製された **リポジトリの manifest.json** に移動します。


    1. **2019 年 2019 年Visual Studio** **manifest.json** を開き、次の変更を行います。

         * に設定 `id` する `[MicrosoftAppId]`
         * に設定 `botId` する `[MicrosoftAppId]`
         * に設定 `validDomains` する `[WebAppDomainName]`

          > [!NOTE]
          > `WebAppDomain` は ngrok ドメインです。

          ![マニフェストイメージ1](~/assets/images/meeting-content-bubble/manifest-set.png)
- title: サービスのビルドと実行
  durationInMinutes: 1
  content: "**2019 年を使用してサービスをビルドVisual Studioするには**\n\n   1. **2019 Visual Studioを起動します**。\n   1. **[FileOpen Project** >  > **/ソリューション] に移動します**。\n\n      ![ファイルを開く](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. ファイルを開 `ContentBubbleBot.sln` きます。\n\n      ![ファイルを開く](~/assets/images/meeting-content-bubble/proj-sln.png)\n\n   1. **fn + F5 キーを押して** プロジェクトを実行します。\n\n      Web ページが開き、ボット **の準備完了です。というメッセージが表示されます**。\n\n      ![アプリの準備完了](~/assets/images/meeting-content-bubble/your-bot-is-ready.png) \n"
- title: 会議コンテンツ バブル アプリを会議に追加Teams
  durationInMinutes: 1
  content: "**会議を作成しTeamsコンテンツ バブルを追加するには**\n\n1. 複製されたリポジトリで、[マニフェスト] の **[リソース] > csharp >移動します**。\n\n1. マニフェスト フォルダーに.zipファイルを含むフォルダーを **作成** します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip ファイル](~/assets/images/meeting-content-bubble/create-manifest-zip.png) \n\n1. 少数の発表者と出席者との会議を作成します。\n\n1. 会議を作成したら、[アプリの追加] **+** **を選択します**。\n\n   ![アプリを追加する](~/assets/images/meeting-content-bubble/add-an-app.png) \n\n1. 開くポップアップで、[アプリの管理] **を選択します**。\n\n   ![アプリを管理する](~/assets/images/meeting-content-bubble/manage-apps.png)\n\n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n   ![アップロードカスタム アプリ](~/assets/images/meeting-content-bubble/upload-custom-app.png)\n\n1. [ **開く** ] を選択して.zip作成したファイルを **アップロード** します。\n\n   ![アップロード zip アプリ](~/assets/images/meeting-content-bubble/zip.png)\n\n1. **[追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/meeting-content-bubble/content-bubble-demo.png)\n\n1. [ **アプリの管理]** セクションには、アプリケーションの一覧が表示されます。\n\n   ![アプリを管理する](~/assets/images/meeting-content-bubble/Manage.png)\n\n1. 会議チャットに移動します。\n\n1. **コンテンツ バブルデモ アプリ** は、会議チャットに自動返信を送信します。\n\n   ![コンテンツ バブルデモの返信](~/assets/images/meeting-content-bubble/content-bubble-demo-first-reply.png)\n\n1. ボットに **hello** メッセージを送信します。\n\n   ![メンション ボット](~/assets/images/meeting-content-bubble/content-bubble-demo-second-reply.png)\n\n1. ボットはアダプティブ カードにリストされている議題アイテムを送信します。\n\n1. 任意のオプションを選択し、[ **プッシュ アジェンダ] を選択して** 返信を送信します。\n\n   ![ボットがアダプティブ カードを送信する](~/assets/images/meeting-content-bubble/push-agenda.png)\n\n1. ボットはフィードバック **アダプティブ カード** を送信します。\n\n1. [ **はい**] または [ **いいえ**] を選択します。\n\n1. **[送信]** を選択します。\n\n   ![ボットからフィードバック カードが送信される](~/assets/images/meeting-content-bubble/content-bubble-feedback.png)\n\n    ボットからフィードバック メッセージが送信されます。\n  \n"
- title: 完全なチャレンジ
  durationInMinutes: 1
  content: >
    このようなことを思い付い出しましたか?


    ![Content Bubble Demo デスクトップとモバイル](~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png)
- content: 会議コンテンツ バブル アプリの使用を開始するチュートリアルを完了しました。
