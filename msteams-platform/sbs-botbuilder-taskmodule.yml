### YamlMime:Tutorial
title: タスク モジュールを呼び出Microsoft Teams
metadata:
  title: タスク モジュールを呼び出Microsoft Teams
  description: このチュートリアルでは、タスク モジュールのTeams説明します。
  audience: Developer
  level: Beginner
  ms.date: 23/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: task-modules-and-cards/task-modules/task-modules-bots.md
  nextTutorialTitle: ボットからのタスク モジュールの詳細
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: 4d2e7c2f1da2c8a0d9f6135c9aaef5ae01f8cec8
  ms.sourcegitcommit: 3dc9b539c6f7fbfb844c47a78e3b4d2200dabdad
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 03/31/2022
  ms.locfileid: "64571507"
items:
- durationInMinutes: 1
  content: >
    アダプティブ カードまたはボット フレームワーク カードを使用して、Teamsボットからタスク モジュールを呼び出します。


    **タスク モジュールの主な機能**


    * 複数の手順を回避してユーザー エクスペリエンスを強化します。

    * ユーザーがボットの状態を追跡するのに役立ちます。

    * ユーザーから入力を取得し、カスタム Web ページのコンテンツを表示します。


    このステップ バイ ステップ ガイドは、タスク モジュールを呼び出すサンプル Azure ボットTeams役立ちます。 次の出力が表示されます。

     ![タスク モジュール](~/assets/images/Teams-task-module/final_image.png)
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境をセットアップしてください。 \n\n* [Microsoft Teams](https://teams.microsoft.com/)アカウントを使用する\n* [.NET Core SDK](https://dotnet.microsoft.com/download) バージョン 3.1\n* [最新バージョンのMicrosoft Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) の最新バージョンまたは同等のトンネリング ソリューション\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken をインストールします](https://ngrok.com/download)。\n"
- title: ローカル環境のセットアップ
  durationInMinutes: 1
  content: "リポジトリ`BotBuilder-Samples`をローカル リポジトリに複製GitHub。  \n\n 1. [BotBuilder サンプルを開きます](https://github.com/microsoft/BotBuilder-Samples)。\n 1. [ **コード] を選択します**。\n 1. ドロップダウン メニューから、[デスクトップで開く] **をGitHubします**。\n\n    ![リポジトリの複製](~/assets/images/Teams-task-module/clonerepository.png)\n\n 1. [ **複製] を選択します**。 \n"
- title: ボットを作成して、ポータルにAzure ADする
  durationInMinutes: 5
  content: "ボットを作成して Microsoft Azure Active Directory (Azure AD) に登録するには、ngrok を使用してトンネルを作成し、メッセージング エンドポイントを追加するには、次の手順を実行します。\n\n* Azure Bot リソースを作成して、Azure ボットにボットを登録Bot Service。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* ボットTeamsチャネルを追加して、ボットを展開Teamsします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. ポータルに移動[Microsoft Azureします](https://portal.azure.com/)。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot」と入力します**。\n1. [Enter] を **選択します**。\n1. [ **Azure Bot] を選択します**。\n\n     ![Azure ボット カードの作成](~/assets/images/bots/createazurebot.png)\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要なボット ハンドル名 **を入力します**。\n1. ドロップダウン リスト **から [サブスクリプション** ] を選択します。\n1. ドロップダウン リスト **からリソース グループ** を選択します。 \n\n    ![リソース Azure ボットの選択](~/assets/images/Teams-task-module/review-plus-create.png) \n\n   新しいリソース グループを作成できます ([新しいリソースの作成] を選択>リソース名を入力し、[**OK**>を選択します)。\n\n1. 新しいリソース グループを作成した場合は、[新しいリソース グループの場所] ドロップダウン リストから必要 **な場所を** 選択します。\n\n    ![新しいリソース グループの場所](~/assets/images/meetings-side-panel/newresource.png)\n\n1. [ **Microsoft App ID] セクション** で、既定で [ **新しい Microsoft App ID の作成]** が選択されています。 \n\n   [既存のアプリ登録を使用 **する** ] を選択し、[ **既存** のアプリ ID] と [ **既存** のアプリ パスワード] を入力するか、[新しい Microsoft アプリ ID の作成] **を選択します**。\n\n   > [!NOTE]\n   > 同じ Microsoft アプリ ID を持つ複数の **ボットを作成できない**。\n\n1. [ボット **の種類] で [** マルチテナント] を選択します。\n\n    ![Microsoft アプリ ID](~/assets/images/Teams-task-module/config.png)\n\n1. **[確認 + 作成]** を選びます。\n\n    ![Microsoft アプリ ID の作成](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. 検証に合格した場合は、[作成] を **選択します**。 \n\n    ボット サービスをプロビジョニングするには、少し時間が必要です。 \n\n1. [**リソースに移動**] を選びます。 \n\n    ![アプリの展開](~/assets/images/Teams-task-module/botdeployment.png)\n\n    Azure ボットが作成されます。\n\n    ![Azure ボット リソースの作成](~/assets/images/Teams-task-module/bot-page.png)\n\n**クライアント シークレットを作成するには**\n\n  新しい Microsoft App ID を作成した場合は、次の **手順を実行します**。\n\n1. 左側のパネルで、[構成] を **選択します**。 \n\n   > [!TIP]\n   > 将来の **参照のために Microsoft App ID** または **クライアント ID** を保存します。\n\n1. [ **Microsoft App ID] の横にある [** 管理] を **選択します**。\n\n1. [クライアント シークレット **] セクションで、[** 新しいクライアント シークレット **] を選択します**。 \n\n    ![新しいクライアント シークレット](~/assets/images/meetings-side-panel/newclientsecret.png)\n\n   [ **クライアント シークレットの追加] ウィンドウ** が表示されます。  \n\n1. [説明 **] と入力します**。\n\n1. **[追加]** を選択します。\n\n    ![アプリにクライアント シークレットを追加する](~/assets/images/Teams-task-module/clientsecret.png)\n\n1. [値] **列で** 、[クリップボードに **コピー] を選択します**。\n\n     ![クライアント シークレットの値](~/assets/images/Teams-task-module/clientvalue.png)\n   \n   > [!TIP]\n   > 将来の **参照のためにクライアント シークレット** 値またはアプリ パスワードを保存します。\n\n**新しいチャネルをTeamsするには**\n\n1. [**ホーム**] を選択します。\n\n    ![ホーム ページ](~/assets/images/Teams-task-module/gotohome.png)\n\n1. [最近使ったリソース] から **ボットを選択します**。\n\n1. 左側 **のウィンドウで** [チャネル] を選択します。 \n\n1. [選択 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. このチェック ボックスをオンにして、利用規約 **に同意します**。\n\n1. [同意する] **を選択します**。\n\n      ![利用規約](~/assets/images/meetings-side-panel/terms.png)\n\n1. **[保存]** を選択します。\n\n      ![[選択Teams](~/assets/images/Teams-task-module/configteams.png)   \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行中の Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=rewrite 3978\n ```\n\n> [!TIP]\n> 問題が発生 **ERR_NGROK_4018**、コマンド プロンプトに示されている手順に従って ngrok にサインアップして認証します。 `ngrok http -host-header=localhost 3978` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https to io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/Teams-task-module/ngrok.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > この `WebAppDomain` 名前は、完全修飾ドメイン名で、そのドメイン名に含 `https://` めは含めではありません。\n\n1. 作成 **設定** Azure ボットの [構成] を選択 **します**。\n\n1. メッセージング **エンドポイントで、** ngrok から利用可能な HTTPS URL を使用し、URL の最後に **/api/messages を追加します**。\n\n    ![メッセージング エンドポイント](~/assets/images/Teams-task-module/messaging-endpoint.png)\n\n1. **[適用]** を選択します。\n\n    Azure Bot Service でボットを正常にBot Service。\n"
- title: アプリの登録Azure AD更新する
  durationInMinutes: 1
  content: "1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[アプリの登録 **] を選択します**。\n\n1. ボットを選択します。\n\n   ![アプリの登録](~/assets/images/Teams-task-module/appregister.png)\n\n1. [管理] **を選択します**。\n\n1. 左側のパネルで、[API の **公開] を****選択します**。\n\n1. [設定] **を選択します**。\n\n   ![API を公開する](~/assets/images/Teams-task-module/exposeanapi.png)\n\n1. の形式 **でアプリケーション ID URI** を設定します `api://{AppID}`。\n\n   ![リンクの設定](~/assets/images/Teams-task-module/setlink.png)\n\n1. との間 `WebAppDomain` に値を挿入 `api://` します `/{AppID}`。</br>\n    `api://d4b8****.ngrok.io/{AppID}`</br>\n    \n   次の図は、ドメイン名を示しています。\n    \n    ![アプリ ID URI](~/assets/images/Teams-task-module/appIDuri.png)\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、 `f631****.ngrok.io` 新しい ngrok サブドメイン名です。\n\n1. **[スコープの追加]** を選択します。 \n\n   ![スコープの選択](~/assets/images/meetings-side-panel/selectscope.png)\n\n1. 表示されるパネルで、スコープ名 `access_as_user` として **入力します**。\n\n1. 同意 **Whoを設定する?** に設定します`Admins and users`。\n\n1. スコープに適切な値を指定して管理者とユーザーの同意のプロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * 管理者の `Teams can access the user’s profile` 同意 **表示名として入力します**。\n\n     * 管理者の `Allows Teams to call the app’s web APIs as the current user` 同意 **の説明として入力します**。\n\n     * [ユーザー `Teams can access the user profile and make requests on the user’s behalf` の **同意] 表示名として入力します**。\n\n     * [ユーザー `Enable Teams to call this app’s APIs with the same rights as the user` の **同意の説明] と入力します**。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加** ] を選択します。\n\n    ![スコープを追加する](~/assets/images/Teams-task-module/addascope.png)\n\n    > [!NOTE]\n    > スコープ **名は、** 最後に **追加されたアプリケーション ID** URI `/access_as_user` と一致する必要があります。</br>\n       `api://d4b8****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/Teams-task-module/scopes.png) \n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    ![クライアント アプリケーションの選択](~/assets/images/meetings-side-panel/selectclientapp.png) \n\n1. モバイル **アプリケーションまたはデスクトップ アプリケーション** Teams`1fec8e78-bce4-4aaf-ab1b-5451cc387264`クライアント ID を入力します。 \n\n    ![クライアント アプリケーションの追加 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   Web **アプリケーションのクライアント ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` Teams入力します。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. [ **承認済みスコープ] を選択します**。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/Teams-task-module/authorizedscope.png) \n\n   次の図は、クライアント ID を表示します。\n\n    ![クライアント アプリケーション](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. 左側のパネルで、[API のアクセス **許可] を選択します**。 \n\n   > [!NOTE]\n   > ユーザーは、アプリが別のテナントに登録されている場合Azure AD API のアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n    ![アクセス許可の追加](~/assets/images/meetings-side-panel/addpermission.png)\n\n1. [**Microsoft Graph] を選択します**。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. 次のアクセス許可を選択します。</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profile**\n      * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     ![その他のアクセス許可](~/assets/images/meetings-side-panel/other-permissions.png)\n\n1. 左側のパネルで、[認証] **を選択** してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する場合に同意する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        ![Web](~/assets/images/Teams-task-module/webauth.png)\n\n     1. 完全修飾ドメイン名に追加して、アプリ `auth-end` のリダイレクト URI を入力します。</br> \n       `https://d4b8****.ngrok.io/auth-end`. </br>\n\n     1. 次 **のチェック ボックスをオンにして** 、暗黙的な付与とハイブリッド フローを有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        ![Auth-end](~/assets/images/Teams-task-module/authend.png)\n"
- title: アプリの設定とマニフェスト ファイルの設定
  durationInMinutes: 1
  content: "1. 複製された **リポジトリの appsettings.json** に移動します。\n\n    ![アプリ設定の場所](~/assets/images/Teams-task-module/appsettingslocation.png)\n\n1. アプリ **の最新バージョンで appsettings.json** を開Visual Studio情報を更新します。  \n\n     * MultiTenant `\"MicrosoftAppType\"` **に設定します**。\n     * ボット `\"MicrosoftAppId\"` の **Microsoft アプリ ID に設定します**。\n     * [クライアント `\"MicrosoftAppPassword\"` シークレット **の値****] に設定します**。\n     * アプリ `\"MicrosoftAppTenantId\"` を使用するテナントのテナント ID に設定します。\n     * 完全修飾 `\"BaseUrl\"` ドメイン名 (https から io) に設定します。\n\n    ![アプリの設定](~/assets/images/Teams-task-module/appsettings.png)\n\n1. 複製された **リポジトリの manifest.json** に移動します。\n\n    ![マニフェスト ファイルの場所](~/assets/images/Teams-task-module/manifestlocation.png)\n\n1. **manifest.json を** 最新バージョンの Visual Studio開き、次の変更を行います。\n\n     * すべての出現回数を自分の名前 `YourDeployedBotUrl.com` に置き換 `WebAppDomain` える。\n     * すべての出現回数をボット `<<YOUR-MICROSOFT-APP-ID>>` の **Microsoft App ID に置き換える**。\n\n    ![マニフェスト イメージ 2](~/assets/images/Teams-task-module/manifest.png)\n"
- title: サービスのビルドと実行
  durationInMinutes: 1
  content: "**最新バージョンのサービスまたはコマンド ラインを使用してVisual Studio実行するには**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[最新バージョンのVisual Studio](#tab/latestversionofvisualstudio)\n\n   1. 最新バージョンのファイルを起動Visual Studio。\n   1. **[FileOpen Project** >  > **/ソリューション] に移動します**。\n\n      ![ファイルを開く](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. **54.teams-task-module フォルダーから TeamsTaskModule.csproj ファイルを選択** します。\n\n      ![CS proj ファイル](~/assets/images/Teams-task-module/csprojfileopen.png)\n\n   1. View **からソリューション エクスプローラー** を **開きます**。\n\n      ![ソリューション エクスプローラー](~/assets/images/Teams-task-module/solutionexplorer.png)\n\n   1. 右クリックして **TeamsTaskModule を選択します**。\n\n   1. [スタートアップ **ファイルとして設定] をProject**。\n\n      ![ソリューション エクスプローラー](~/assets/images/Teams-task-module/startup.png)\n\n   1. **F5 キーを押** してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      ![信頼証明書](~/assets/images/Teams-task-module/certificate.png)\n\n      Web ページが開き、ボット **の準備完了です。というメッセージが表示されます**。\n\n      ![アプリの準備完了](~/assets/images/Teams-task-module/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト **ウィンドウの 54.teams-task-module > BotBuilder-Samples > csharp_dotnetcore > 54.teams-task-module** に移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-task-module/dotnetruncmd.png)\n"
- title: アップロード タスク モジュール アプリ
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで、 **TeamsAppManifest csharp_dotnetcore > 54.teams-task-module >移動します**。\n\n1. **TeamsAppManifest** .zipに存在する次のファイルを含むフォルダーを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip ファイル](~/assets/images/Teams-task-module/zip-file.png) \n\n1. [次へ] **Microsoft Teams**。\n\n1. **[アプリ]** を選択します。\n\n   ![Zip ファイル](~/assets/images/Teams-task-module/AppStore.png)\n\n1. 左下隅で、[アプリの管理 **] を選択します**。\n\n   ![アプリを管理する](~/assets/images/Teams-task-module/manage-apps.png)\n\n1. [**アップロードを組織のアプリ カタログに追加する] を選択します**。 \n\n   ![アップロードカスタム アプリ](~/assets/images/Teams-task-module/upload-app.png)\n\n1. **TeamsAppManifest** フォルダーで.zipファイルをアップロードするには、[開く] を選択します。\n\n   ![Zip ファイルの選択](~/assets/images/Teams-task-module/select-zip.png)\n\n1. **[追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/Teams-task-module/add-app.png)\n\n   アプリがチャットで開きます。\n\n1. 任意のテキストを入力し、[Enter] を選択します。 \n\n   ![チャット](~/assets/images/Teams-task-module/chat_ready.png)\n\n   アプリには、 **ヒーロー カードからのタスク モジュール呼び出しと** アダプティブ カードからの **タスク モジュール呼び出しが表示されます**。         \n"
- title: アプリを操作Teams
  durationInMinutes: 1
  content: >
    1. [ヒーロー **カードからのタスク モジュール** 呼び **出し] または [アダプティブ** カードからのタスク モジュール呼び出し] から **[アダプティブ カード] を選択します**。

       ![アダプティブ カード](~/assets/images/Teams-task-module/adaptive-card.png)

    1. 任意のテキストを入力します。


    1. **[送信]** を選択します。

       ![アダプティブ カードのテキスト](~/assets/images/Teams-task-module/adaptive-card-text.png)

       **アダプティブ カードは** 確認メッセージを送信します。

       ![アダプティブ カードの送信](~/assets/images/Teams-task-module/adaptive-card-submit.png)

    1. [ヒーロー **カードからのタスク モジュール** の呼び **出し] または [アダプティブ** カードからのタスク モジュール呼び出し **] から [カスタム フォーム] を選択します**。

       ![カスタム フォーム](~/assets/images/Teams-task-module/custom-form.png)

    1. 必要な情報を入力します。

       * **名前**
       * **電子メール**
       * **お気に入りの本**
       * **Password**
       * **パスワードの確認**

    1. [サインアップ **] を選択します**。

       ![カスタム フォームのテキスト](~/assets/images/Teams-task-module/custom-text.png)

       **カスタム フォームは** 確認メッセージを送信します。

       ![サインアップ](~/assets/images/Teams-task-module/custom-on-sign-up.png)

       チャットに次の情報が表示されます。

       ![チャット](~/assets/images/Teams-task-module/adaptive-custom-chat.png)

    1. [ **ヒーロー カードからのタスク モジュール** の呼 **び出しから管] または [** アダプティブ カードからの **タスク モジュール呼び出し] を選択します**。

       ![YouTube](~/assets/images/Teams-task-module/youtube.png)

    1. [再生 **] を選択します**。

       ![YouTube の選択](~/assets/images/Teams-task-module/youtube-select.png)

       ビデオが再生されます。
- title: 完全なチャレンジ
  durationInMinutes: 1
  content: >
    このようなことを思い付い出しましたか?

       ![タスク モジュール](~/assets/images/Teams-task-module/final_image.png)
- content: タスク モジュール アプリの使用を開始するチュートリアルTeams完了しました。
