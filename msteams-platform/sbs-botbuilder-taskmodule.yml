### YamlMime:Tutorial
title: Microsoft Teamsからタスク モジュールを呼び出す
metadata:
  title: Microsoft Teamsからタスク モジュールを呼び出す
  description: このラーニング モジュールでは、アダプティブ カードまたは Bot Framework カードを使用してTeamsタスク モジュールを設定する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 23/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: task-modules-and-cards/task-modules/task-modules-bots.md
  nextTutorialTitle: ボットからタスク モジュールの詳細を読む
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: a584afa321091d1a4d3984248f5196194f07c32f
  ms.sourcegitcommit: 5070746e736edb4ae77cd3efcb2ab8bb2e5819a0
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 06/16/2022
  ms.locfileid: "66123441"
items:
- durationInMinutes: 1
  content: >
    アダプティブ カードまたは Bot Framework カードを使用して、Teams ボットからタスク モジュールを呼び出すことができます。


    **タスク モジュールの主な機能**


    * 複数の手順を回避して、ユーザー エクスペリエンスを向上させます。

    * ユーザーがボットの状態を追跡するのに役立ちます。

    * ユーザーから入力を取得し、カスタム Web ページのコンテンツを表示します。


    このステップ バイ ステップ ガイドは、タスク モジュールを呼び出すサンプル Azure ボットTeams作成するのに役立ちます。 次の出力が表示されます。

     ![タスク モジュール](~/assets/images/Teams-task-module/final_image.png)
- title: 必須条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境を設定してください。 \n\n* 有効なアカウントを持つ[Microsoft Teams](https://teams.microsoft.com/)\n* [.NET Core SDK](https://dotnet.microsoft.com/download) バージョン 3.1\n* [Microsoft Visual Studioの最新バージョン](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) の最新バージョンまたは同等のトンネリング ソリューション\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken](https://ngrok.com/download) をインストールします。\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "リポジトリをローカル GitHubに複製`BotBuilder-Samples`します。  \n\n 1. [BotBuilder サンプルを](https://github.com/microsoft/BotBuilder-Samples)開きます。\n 1. [ **コード**] を選択します。\n 1. ドロップダウン メニューから、[**デスクトップで開く] GitHub** 選択します。\n\n    ![リポジトリを複製する](~/assets/images/Teams-task-module/clonerepository.png)\n\n 1. [ **複製**] を選択します。 \n"
- title: Azure AD portal でボットを作成して登録する
  durationInMinutes: 5
  content: "Microsoft Azure Active Directory (Azure AD) にボットを作成して登録するには、ngrok を使用してトンネルを作成し、メッセージング エンドポイントを追加するには、次の手順を実行します。\n\n* Azure bot リソースを作成して、Azure Bot Serviceにボットを登録します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* Teams チャネルを追加して、ボットをTeams チャネルにデプロイします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Microsoft Azure ポータル](https://portal.azure.com/)に移動します。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot**」と入力します。\n1. **Enter** キーを押します。\n1. **Azure Bot** を選択します。\n\n     ![Azure ボット カードを作成する](~/assets/images/bots/createazurebot.png)\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要な **ボット ハンドル** 名を入力します。\n1. ドロップダウン リストから **[サブスクリプション]** を選択します。\n1. ドロップダウン リストから **[リソース グループ]** を選択します。 \n\n    ![リソース Azure ボットを選択する](~/assets/images/Teams-task-module/review-plus-create.png) \n\n   新しいリソース グループを作成することもできます ([新しいリソースの **作成** ] を選択>、リソース名を入力> **[OK**] を選択します)。\n\n1. 新しいリソース グループを作成した場合は、[新しいリソース グループの場所] ドロップダウン リストから必要な **場所を** 選択します。\n\n    ![新しいリソース グループの場所](~/assets/images/meetings-side-panel/newresource.png)\n\n1. **[Microsoft アプリ ID**] セクションでは、既定で [**新しい Microsoft アプリ ID の作成]** が選択されています。 \n\n   [ **既存のアプリの登録を使用** する] を選択し、 **既存のアプリ ID** と **既存のアプリ パスワード** を入力するか、[ **新しい Microsoft アプリ ID の作成**] を選択します。\n\n   > [!NOTE]\n   > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. [ボットの種類] で **[MultiTenant** ] を選択します。\n\n    ![Microsoft アプリ ID](~/assets/images/Teams-task-module/config.png)\n\n1. **[確認 + 作成]** を選びます。\n\n    ![Microsoft アプリ ID を作成する](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. 検証に合格した場合は、**[作成]** を選択します。 \n\n    ボット サービスがプロビジョニングされるまで少し時間がかかります。 \n\n1. [**リソースに移動**] を選びます。 \n\n    ![アプリをデプロイする](~/assets/images/Teams-task-module/botdeployment.png)\n\n    Azure ボットが作成されます。\n\n    ![Azure ボット リソースが作成されました](~/assets/images/Teams-task-module/bot-page.png)\n\n**クライアント シークレットを作成するには**\n\n  新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のパネルで、[構成] を選択 **します**。 \n\n   > [!TIP]\n   > 今後参照できるように **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **Microsoft アプリ ID** の横にある [**管理**] を選択します。\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n    ![新しいクライアント シークレット](~/assets/images/meetings-side-panel/newclientsecret.png)\n\n   [ **クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n1. **「説明」と入力します**。\n\n1. **[追加]** を選択します。\n\n    ![クライアント シークレットをアプリに追加する](~/assets/images/Teams-task-module/clientsecret.png)\n\n1. [ **値** ] 列で、[ **クリップボードにコピー**] を選択します。\n\n     ![クライアント シークレットの値](~/assets/images/Teams-task-module/clientvalue.png)\n   \n   > [!TIP]\n   > 今後参照できるように **、クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n**Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n    ![ホーム ページ](~/assets/images/Teams-task-module/gotohome.png)\n\n1. **最近使用したリソース** からボットを選択します。\n\n1. 左側のウィンドウで **[チャネル** ] を選択します。 \n\n1. **Microsoft Teams** を選択する <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. [ **利用規約**] に同意するには、チェック ボックスをオンにします。\n\n1. **[同意する**] を選択します。\n\n      ![利用規約](~/assets/images/meetings-side-panel/terms.png)\n\n1. **[保存]** を選択します。\n\n      ![[Teams] を選択します](~/assets/images/Teams-task-module/configteams.png)   \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=rewrite 3978\n ```\n\n> [!TIP]\n> **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに記載されている手順に従って、サインアップして ngrok を認証します。 `ngrok http -host-header=localhost 3978` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https から io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/Teams-task-module/ngrok.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > は `WebAppDomain` 、完全修飾ドメイン名であり、ドメイン名には含 `https://` まれません。\n\n1. 作成 **した** Azure ボットの設定で、[構成] を選択 **します**。\n\n1. **メッセージング エンドポイント** で、ngrok から入手できる HTTPS URL を使用し、URL の最後に **/api/messages** を追加します。\n\n    ![メッセージング エンドポイント](~/assets/images/Teams-task-module/messaging-endpoint.png)\n\n1. **[適用]** を選択します。\n\n    Azure Bot Serviceでボットが正常に設定されました。\n"
- title: Azure AD アプリの登録を更新する
  durationInMinutes: 1
  content: "1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[ **アプリの登録**] を選択します。\n\n1. ボットを選択します。\n\n   ![アプリの登録](~/assets/images/Teams-task-module/appregister.png)\n\n1. **[管理]** を選択します。\n\n1. 左側のパネルで、[**API** の **公開**] を選択します。\n\n1. [ **設定**] を選択します。\n\n   ![API を公開する](~/assets/images/Teams-task-module/exposeanapi.png)\n\n1. **アプリケーション ID URI を** 次の`api://{AppID}`形式で設定します。\n\n   ![リンクを設定する](~/assets/images/Teams-task-module/setlink.png)\n\n1. の間`api://`に値を`WebAppDomain`挿入します`/{AppID}`。</br>\n    `api://d4b8****.ngrok.io/{AppID}`</br>\n    \n   次の図は、ドメイン名を示しています。\n    \n    ![アプリ ID URI](~/assets/images/Teams-task-module/appIDuri.png)\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、新しい ngrok サブドメイン名です `f631****.ngrok.io` 。\n\n1. **[スコープの追加]** を選択します。 \n\n   ![スコープを選択する](~/assets/images/meetings-side-panel/selectscope.png)\n\n1. 表示されるパネルで、**スコープ名** として入力`access_as_user`します。\n\n1. **同意できるWho** を設定しますか`Admins and users`?\n\n1. スコープの適切な値を使用して管理者とユーザーの同意プロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * **同意表示名管理** 入力`Teams can access the user’s profile`します。\n\n     * **同意の説明管理** 入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **ユーザー同意表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **ユーザーの同意の説明** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加]** を選択します。\n\n    ![スコープを追加する](~/assets/images/Teams-task-module/addascope.png)\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://d4b8****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/Teams-task-module/scopes.png) \n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    ![クライアント アプリケーションを選択する](~/assets/images/meetings-side-panel/selectclientapp.png) \n\n1. モバイルアプリケーションまたはデスクトップ アプリケーションTeams **クライアント ID を**`1fec8e78-bce4-4aaf-ab1b-5451cc387264`入力します。 \n\n    ![クライアント アプリケーションを追加する 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   **クライアント ID:**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` Teams Web アプリケーションを入力します。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. [ **承認されたスコープ]** を選択します。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/Teams-task-module/authorizedscope.png) \n\n   次の図は、クライアント ID を表示します。\n\n    ![クライアント アプリケーション](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. 左側のパネルで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、API アクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n    ![アクセス許可を追加する](~/assets/images/meetings-side-panel/addpermission.png)\n\n1. **Microsoft Graph** を選択します。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. 次のアクセス許可を選択します。</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n      * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     ![その他のアクセス許可](~/assets/images/meetings-side-panel/other-permissions.png)\n\n1. 左側のパネルで [ **認証** ] を選択してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        ![Web](~/assets/images/Teams-task-module/webauth.png)\n\n     1. 完全修飾ドメイン名に追加して、アプリの `auth-end` リダイレクト URI を入力します。</br> \n       `https://d4b8****.ngrok.io/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして **、暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        ![Auth-end](~/assets/images/Teams-task-module/authend.png)\n"
- title: アプリの設定とマニフェスト ファイルを設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで **appsettings.json** に移動します。\n\n    ![アプリ設定の場所](~/assets/images/Teams-task-module/appsettingslocation.png)\n\n1. 最新バージョンのVisual Studioで **appsettings.json** を開き、次の情報を更新します。  \n\n     * **MultiTenant** に設定`\"MicrosoftAppType\"`します。\n     * ボットの **Microsoft アプリ ID に** 設定`\"MicrosoftAppId\"`します。\n     * **[クライアント シークレット** の **値]** に設定`\"MicrosoftAppPassword\"`します。\n     * アプリが使用されているテナントのテナント ID に設定 `\"MicrosoftAppTenantId\"` します。\n     * 完全修飾ドメイン名 (https から io) に設定 `\"BaseUrl\"` します。\n\n    ![アプリの設定](~/assets/images/Teams-task-module/appsettings.png)\n\n1. 複製されたリポジトリの 'manifest.json' に移動します。\n\n    ![マニフェスト ファイルの場所](~/assets/images/Teams-task-module/manifestlocation.png)\n\n1. 最新バージョンのVisual Studioで 'manifest.json' を開き、次の変更を加えます。\n\n     * すべての出現箇所を自分`WebAppDomain`の`YourDeployedBotUrl.com`名前に置き換えます。\n     * すべての出現箇所をボットの `<<YOUR-MICROSOFT-APP-ID>>` **Microsoft アプリ ID に** 置き換えます。\n\n    ![マニフェスト イメージ 2](~/assets/images/Teams-task-module/manifest.png)\n"
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**最新バージョンのVisual Studioまたはコマンド ラインを使用してサービスをビルドして実行するには**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Visual Studioの最新バージョン](#tab/latestversionofvisualstudio)\n\n   1. 最新バージョンのVisual Studioを起動します。\n   1. **[ファイル** > **を開く** > **Project/ソリューション]** に移動します。\n\n      ![ファイルを開く](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. **54.teams-task-module** フォルダーから **TeamsTaskModule.csproj** ファイルを選択します。\n\n      ![CS proj ファイル](~/assets/images/Teams-task-module/csprojfileopen.png)\n\n   1. **ビュー** から **ソリューション エクスプローラー** を開きます。\n\n      ![ソリューション エクスプローラー](~/assets/images/Teams-task-module/solutionexplorer.png)\n\n   1. **TeamsTaskModule** を右クリックして選択します。\n\n   1. [**スタートアップ Projectとして設定]** を選択します。\n\n      ![ソリューション エクスプローラー](~/assets/images/Teams-task-module/startup.png)\n\n   1. **F5** キーを押してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      ![証明書を信頼する](~/assets/images/Teams-task-module/certificate.png)\n\n      Web ページが開き、メッセージが表示されます **。ボットの準備は完了です。**\n\n      ![アプリの準備完了](~/assets/images/Teams-task-module/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウで **BotBuilder-Samples >サンプル > csharp_dotnetcore > 54.teams-task-module** に移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-task-module/dotnetruncmd.png)\n"
- title: アップロード タスク モジュール アプリ
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで、 **TeamsAppManifest csharp_dotnetcore > 54.teams-task-module >** 移動します。\n\n1. **TeamsAppManifest** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip ファイル](~/assets/images/Teams-task-module/zip-file.png) \n\n1. Microsoft Teamsに移動 **します**。\n\n1. **[アプリ]** を選択します。\n\n   ![Zip ファイル](~/assets/images/Teams-task-module/AppStore.png)\n\n1. 左下隅にある [ **アプリの管理**] を選択します。\n\n   ![アプリを管理する](~/assets/images/Teams-task-module/manage-apps.png)\n\n1. **組織のアプリ カタログにアプリをアップロードを選択します**。 \n\n   ![カスタム アプリをアップロードする](~/assets/images/Teams-task-module/upload-app.png)\n\n1. [ **開く** ] を選択して、 **TeamsAppManifest** フォルダーに作成した.zip ファイルをアップロードします。\n\n   ![zip ファイルを選択する](~/assets/images/Teams-task-module/select-zip.png)\n\n1. **[追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/Teams-task-module/add-app.png)\n\n   アプリがチャットで開きます。\n\n1. 任意のテキストを入力し、Enter キーを押します。 \n\n   ![チャット](~/assets/images/Teams-task-module/chat_ready.png)\n\n   アプリには、 **ヒーロー カードからのタスク モジュール呼び出し** と **、アダプティブ カードからのタスク モジュール呼び出しが** 表示されます。         \n"
- title: Teamsでアプリを操作する
  durationInMinutes: 1
  content: >
    1. **ヒーロー カードからのタスク モジュール呼び出し** または **アダプティブ カード****からのタスク モジュール呼び出しからアダプティブ カードを選択します**。

       ![アダプティブ カード](~/assets/images/Teams-task-module/adaptive-card.png)

    1. 任意のテキストを入力します。


    1. **[送信]** を選択します。

       ![アダプティブ カード テキスト](~/assets/images/Teams-task-module/adaptive-card-text.png)

       **アダプティブ カード** は、受信確認メッセージを送信します。

       ![アダプティブ カードの送信](~/assets/images/Teams-task-module/adaptive-card-submit.png)

    1. **ヒーロー カードからのタスク モジュール呼び出し** または **アダプティブ カードからのタスク モジュール呼び出しから****カスタム フォーム** を選択します。

       ![ユーザー設定フォーム](~/assets/images/Teams-task-module/custom-form.png)

    1. 必要な情報を入力します。

       * **[名前]**
       * **電子メール**
       * **お気に入りの本**
       * **Password**
       * **パスワードの確認**

    1. [ **サインアップ**] を選択します。

       ![ユーザー設定フォームのテキスト](~/assets/images/Teams-task-module/custom-text.png)

       **カスタム フォームから** 受信確認メッセージが送信されます。

       ![サインアップ](~/assets/images/Teams-task-module/custom-on-sign-up.png)

       チャットには次の情報が表示されます。

       ![チャット](~/assets/images/Teams-task-module/adaptive-custom-chat.png)

    1. **[ヒーロー カードからのタスク モジュールの呼び出し]** または **[アダプティブ カードからのタスク モジュール呼び出し] から** [**YouTube]** を選択します。

       ![YouTube](~/assets/images/Teams-task-module/youtube.png)

    1. [ **再生] を選択します**。

       ![YouTube の選択](~/assets/images/Teams-task-module/youtube-select.png)

       ビデオが再生されます。
- title: チャレンジを完了する
  durationInMinutes: 1
  content: >
    このようなことを思い付いたのですか?

       ![タスク モジュール](~/assets/images/Teams-task-module/final_image.png)
- content: タスク モジュール アプリの使用を開始するためのチュートリアルTeams完了しました。
