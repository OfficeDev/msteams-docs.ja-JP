### YamlMime:Tutorial
title: 会議トークン ジェネレーター
metadata:
  title: 会議トークン ジェネレーター
  description: このチュートリアルでは、Teamsの会議トークン ジェネレーターを設定する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 11/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 会議用のアプリを有効にして構成する方法の詳細
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: f7e8c7d5213e2dd69c19695887efcbc7c5a75c80
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64737201"
items:
- durationInMinutes: 1
  content: >
    会議トークン ジェネレーター アプリは、会議参加者がトークンを要求できるようにすることで、Teamsでの会議エクスペリエンスを向上させることができます。 アプリは、各参加者が会議で対話する機会が均等になるように、トークンを順番に生成します。 たとえば、このアプリは Q&A セッションや、スクラム会議などの会議で役立ちます。


    > [!NOTE]

    > 会議トークン ジェネレーター アプリの [会議中] タブは、**Teams デスクトップ クライアント** でのみ使用できます。


    **会議トークン ジェネレーターの主な機能**


    * 会議で処理されている現在のトークンを表示します。

    * トークン番号で並べ替えられたユーザー リストを表示します。

    * 要求に応じてユーザーのトークンを生成します。

    * 現在のユーザーのトークン番号を表示します。

    * 開催者が現在の会議トークンをスキップできるようにします。


    **ユーザー操作のさまざまな方法**


    * トークン: ユーザーのトークンを要求します。

    * 完了: ユーザーのトークン生成を確認します。

    * スキップ: 現在のユーザーをスキップし、トークンの次のユーザーに移動します。

       > [!NOTE]
       > スキップは、会議の開催者のみが使用できます。

    このステップ バイ ステップ ガイドは、Teamsで会議を拡張するための会議トークンを生成するのに役立ちます。 次の出力が表示されます。

       ![トークン](~/assets/images/meeting-token-generator/meeting-token-generator-yourtokennumber.png)
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境を設定してください。  \n\n* [.NET Core SDK](https://dotnet.microsoft.com/download) バージョン 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [nodejs](https://nodejs.org/en/download/) LTS バージョン 10.21.0 以降\n* [ngrok](https://ngrok.com/download) の最新バージョン (devbox テスト用のみ) または同等のトンネリング ソリューション\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken](https://ngrok.com/download) をインストールします。\n\n* [無料のTeams開発者テナントを取得する](https://developer.microsoft.com/microsoft-365/dev-program)\n\n次のテクノロジに関する実用的な知識があることを確認します。\n\n* [C#](/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments)\n* [ECMAScript6](http://es6-features.org/#Constants)\n* [ASP.NET コア](/aspnet/core/?view=aspnetcore-3.1) バージョン 3.1\n* [React.JS](https://reactjs.org/tutorial/tutorial.html) バージョン 16 以降\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "リポジトリをローカル GitHubに複製`Microsoft-Teams-Samples`します。  \n\n 1. [Microsoft Teamsサンプルを](https://github.com/OfficeDev/Microsoft-Teams-Samples)開きます。\n 1. [ **コード**] を選択します。\n 1. ドロップダウン メニューから、[**デスクトップで開く] GitHub** 選択します。\n\n    ![リポジトリを複製する](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. [ **複製**] を選択します。 \n"
- title: Azure AD ポータルでボットを作成して登録する
  durationInMinutes: 5
  content: "Azure Active Directoryにボットを作成して登録するには、ngrok を使用してトンネルを作成し、メッセージング エンドポイントを追加するには、次の手順を実行します。\n\n* Azure bot リソースを作成して、Azure Bot Serviceにボットを登録します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* Microsoft Teams チャネルを追加して、ボットをTeams チャネルにデプロイします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Microsoft Azure ポータル](https://portal.azure.com/)に移動します。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot**」と入力します。\n1. Enter キーを **押します**。\n1. **Azure Bot** を選択します。\n\n     ![Azure ボット カードを作成する](~/assets/images/bots/createazurebot.png)\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要な **ボット ハンドル** 名を入力します。\n1. ドロップダウン リストから **サブスクリプション** を選択します。\n1. **[リソース グループ**] ドロップダウン リストから、既存のリソース グループを選択します。 新しいリソース グループを作成することもできます ([新しいリソースの **作成** ] を選択>、リソース名を入力> **[OK**] を選択します)。\n\n1. **[新しいリソース グループ** の場所] ドロップダウン リストから必要な場所を選択します。\n\n    ![リソース Azure ボットを作成する](~/assets/images/meeting-token-generator/meeting-token-generator-review-plus-create.png)\n\n1. **[Microsoft アプリ ID**] セクションでは、既定で [**新しい Microsoft アプリ ID の作成]** が選択されています。 \n\n   [ **既存のアプリの登録を使用** する] を選択し、 **既存のアプリ ID** と **既存のアプリ パスワード** を入力するか、[ **新しい Microsoft アプリ ID の作成**] を選択します。\n\n   > [!NOTE]\n   > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. **[確認 + 作成]** を選びます。\n\n    ![Microsoft アプリ ID を作成する](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. 検証に合格した場合は、[ **作成**] を選択します。\n\n    ボット サービスをプロビジョニングするには、しばらく時間がかかります。\n\n1. [**リソースに移動**] を選びます。 \n\n    ![アプリをデプロイする](~/assets/images/meeting-token-generator/meeting-token-generator-botdeployment.png)\n\n    Azure ボットが作成されます。\n\n    ![作成された Azure ボット リソース](~/assets/images/meeting-token-generator/meeting-token-generator-bot-page.png)\n\n**クライアント シークレットを作成するには**\n\n  新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のパネルで、[構成] を選択 **します**。 \n\n   > [!TIP]\n   > 今後参照できるように **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **[ボットの種類**] で **[マルチテナント**] を選択します。\n\n    ![ボットの種類](~/assets/images/meeting-token-generator/bot-type.png)\n\n1. **Microsoft アプリ ID** の横にある [**管理**] を選択します。\n\n    ![Microsoft アプリ ID](~/assets/images/meeting-token-generator/meeting-token-generator-config.png)\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n    ![新しいクライアント シークレット](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   [ **クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n1. **「説明」と入力します**。\n\n1. **[追加]** を選択します。\n\n    ![クライアント シークレットをアプリに追加する](~/assets/images/meeting-token-generator/meeting-token-generator-clientsecret.png)\n\n1. [ **値** ] 列で、[ **クリップボードにコピー**] を選択します。\n\n     ![クライアント シークレットの値](~/assets/images/meeting-token-generator/meeting-token-generator-clientvalue.png)\n   \n   > [!TIP]\n   > 今後参照できるように **、クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n**Microsoft Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n    ![ホーム ページ](~/assets/images/meeting-token-generator/meeting-token-generator-gotohome.png)\n\n1. **最近使用したリソース** からボットを選択します。\n\n1. 左側のウィンドウで **[チャネル** ] を選択します。 \n\n1. **Microsoft Teams** を選択する <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. [ **利用規約**] に同意するには、チェック ボックスをオンにします。\n\n1. **[同意する**] を選択します。\n\n      ![利用規約](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. **[保存]** を選択します。\n\n      ![Teamsを選択する](~/assets/images/meeting-token-generator/config-teams.png)   \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!NOTE]\n> ngrok トンネルの作成中に、コマンド **ライン** を選択してアプリを実行する代わりに`3978`使用`localhost 5000`します。\n\n> [!TIP]\n> **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに記載されている手順に従って、サインアップして ngrok を認証します。 `ngrok http -host-header=localhost 3978` コマンドを実行します。\n\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https から io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/meeting-token-generator/meeting-token-generator-ngrok.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > は `WebAppDomain` 、それに含 `https://` まれていない完全修飾ドメイン名です。\n\n1. 作成 **した** Azure ボットの設定で、[構成] を選択 **します**。\n\n1. **メッセージング エンドポイント** で、ngrok から入手できる HTTPS URL を使用し、URL の最後に **/api/messages** を追加します。\n\n    ![メッセージング エンドポイント](~/assets/images/meeting-token-generator/meeting-token-generator-messaging-endpoint.png)\n\n1. **[適用]** を選択します。\n\n    Azure Bot Serviceでボットが正常に設定されました。\n"
- title: タブ SSO のAzure AD アプリ登録を更新する
  durationInMinutes: 1
  content: "**Azure AD ポータルからアプリを登録するには**  \n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[ **アプリの登録**] を選択します。\n\n1. ボットを選択します。\n\n   ![アプリの登録](~/assets/images/meeting-token-generator/meeting-token-generator-appregister.png)\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [ **設定**] を選択します。\n\n   ![API を公開する](~/assets/images/meeting-token-generator/meeting-token-generator-exposeanapi.png)\n\n1. **アプリケーション ID URI を** 次の`api://{AppID}`形式で設定します。\n\n   ![リンクを設定する](~/assets/images/meeting-token-generator/meeting-token-generator-setlink.png)\n\n1. の間`api://`に値を`WebAppDomain`挿入します`/{AppID}`。</br>\n    `api://ae57****.ngrok.io/{AppID}`</br>\n    \n   次の図は、ドメイン名を示しています。\n    \n    ![アプリ ID URI](~/assets/images/meeting-token-generator/meeting-token-generator-appIDuri.png)\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、新しい ngrok サブドメイン名です `f631****.ngrok.io` 。\n\n1. **[スコープの追加]** を選択します。 \n\n1. 表示されるパネルで、**スコープ名** として入力`access_as_user`します。\n\n1. **同意できるWho** を設定しますか`Admins and users`?\n\n1. スコープの適切な値を使用して管理者とユーザーの同意プロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * **管理者の同意表示名** として入力`Teams can access the user’s profile`します。\n\n     * **管理者の同意の説明** として入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **ユーザー同意表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **ユーザーの同意の説明** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n   次の図は、フィールドと値を示しています。\n\n    ![スコープを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-addascope.png)\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加]** を選択します。\n\n    ![スコープを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-addscope2.png)\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://ae57****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/meeting-token-generator/meeting-token-generator-scopes.png) \n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    ![クライアント アプリを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-selectclientapp.png) \n\n1. モバイルアプリケーションまたはデスクトップ アプリケーションTeams **クライアント ID を**`1fec8e78-bce4-4aaf-ab1b-5451cc387264`入力します。 \n\n    ![クライアント アプリケーションを追加する 1](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp1.png) \n\n   **クライアント ID:**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` Teams Web アプリケーションに対して入力できます。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp2.png) \n\n1. [ **承認されたスコープ]** を選択します。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meeting-token-generator/meeting-token-generator-authorizedscope1.png) \n\n   次の図は、クライアント ID を表示します。\n\n     ![クライアント アプリケーション](~/assets/images/meeting-token-generator/meeting-token-generator-clientapps.png) \n\n1. 左側のパネルで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n     ![アクセス許可を追加する](~/assets/add-permission.png)\n\n1. **Microsoft Graph** を選択します。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n    既定では、 **User.Read** が選択されています。\n\n     ![ユーザー](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)\n\n1. 以下のアクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profile**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     ![その他のアクセス許可](~/assets/images/meeting-token-generator/meeting-token-generator-otherpermissions.png)\n\n1. 左側のパネルで [ **認証** ] を選択してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        ![Web](~/assets/images/meeting-token-generator/meeting-token-generator-webauthentication.png)\n\n     1. 完全修飾ドメイン名に追加して、アプリの `auth-end` リダイレクト URI を入力します。</br> \n       `https://ae57****.ngrok.io/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして **、暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        ![Auth-end](~/assets/images/meeting-token-generator/meeting-token-generator-authend.png)\n"
- title: アプリの設定を設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで **appsettings.json** に移動します。\n\n    ![アプリ設定の場所](~/assets/images/meeting-token-generator/meeting-token-generator-appsettingslocation.png)\n\n1. **Visual Studio Code** で **appsettings.json** を開き、次の情報を更新します。  \n\n     * ボットの **Microsoft アプリ ID に** 設定`\"MicrosoftAppId\"`します。\n     * ボットのクライアント シークレット ID 値に設定 `\"MicrosoftAppPassword\"` します。\n     * アプリが使用されているテナントのテナント ID に設定 `\"AzureAd\".\"TenantId\"` します。\n\n         > [!NOTE]\n         > このサンプルは、現在のテナントでのみ機能します。\n\n     * ボットの **Microsoft アプリ ID に** 設定`\"AzureAd\".\"ApplicationId\"`します。\n     * コンテンツ バブルの iframe URL `(https://[WebAppDomain]/contentBubble.html)`に設定`\"ContentBubbleUrl\"`します。\n\n         > [!NOTE]\n         > `WebAppDomain` は ngrok ドメインであるため、コンテンツ バブル URL は次のようになります `https://ae57****.ngrok.io/contentBubble.html`。\n\n    ![アプリの設定](~/assets/images/meeting-token-generator/meeting-token-generator-appsettings.png)\n"
- title: マニフェスト ファイルを設定する
  durationInMinutes: 1
  content: >
    1. 複製されたリポジトリ内に `manifest.json` 移動します。

        ![マニフェスト ファイルの場所](~/assets/images/meeting-token-generator/meeting-token-generator-manifestlocation.png)

    1. **Visual Studio Code** で開`manifest.json`き、次の変更を加えます。

         * に設定 `manifestVersion` します `1.11`。

           > [!NOTE]
           > 最新バージョンを指定します。

         * に設定 `$schema` します `https://developer.microsoft.com/json-schemas/teams/v1.11/MicrosoftTeams.schema.json`。
         * に設定 `resource` します `api://[WebAppDomainName]/[MicrosoftAppId]`。
         * に`Contoso`置き換えます`[companyName]`。
         * 次のセクションを完全修飾ドメイン名に置き換えます。
           * `[websiteUrl]`
           * `[privacyUrl]`
           * `[termsOfUseUrl]`


           ![マニフェスト イメージ 1](~/assets/images/meeting-token-generator/meeting-token-generator-manifest-1.png)

         * すべての出現箇所を `[WebAppDomainName]` ngrok ドメイン名に置き換えます。
         * すべての出現箇所をボットの `[MicrosoftAppId]` **Microsoft アプリ ID に** 置き換えます。

           ![マニフェスト イメージ 2](~/assets/images/meeting-token-generator/meeting-token-generator-manifest-2.png)
- title: npm インストールを使用してクライアント アプリをビルドする
  durationInMinutes: 1
  content: >
    **npm インストールを使用してクライアント アプリをビルドし、配布可能なフォルダーを生成するには**


    1. 複製されたリポジトリの **App** フォルダーに移動します。

    1. アプリ フォルダーのパス **を** コピーします。

    1. 新しいコマンド プロンプト ウィンドウを開き、現在のディレクトリをコピーした **アプリ** パスに変更します。

       ![アプリ フォルダーのパス](~/assets/images/meeting-token-generator/meeting-token-generator-appfolderlocation.png)

    1. パッケージと依存関係をダウンロードするために実行 `npm install` します。

    1. アプリをビルドするために実行 `npm run build` します。

       ![アプリをビルドする](~/assets/images/meeting-token-generator/meeting-token-generator-buildapp.png)

       このプロセスでは、アセットがコピーされる **App** フォルダー内に、配布可能な **フォルダーまたは /dist** フォルダーが生成されます。 サーバーは、場所から静的ファイルを提供します。

       ![配布可能なフォルダー](~/assets/images/meeting-token-generator/meeting-token-generator-distfolder.png)
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**Visual Studio 2019 またはコマンド ラインを使用してサービスをビルドして実行するには**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. **2019 Visual Studio** 起動します。\n   1. **FileOpen** >  >  **Project/Solution** に移動します。\n\n      ![ファイルを開く](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. **csharp** フォルダーから **TokenApp.csproj** ファイルを選択します。\n\n      ![トークン ファイル](~/assets/images/meeting-token-generator/meeting-token-generator-Tokenfileready.png)\n\n   1. **F5** キーを押してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      ![証明書を信頼する](~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png)\n\n      Web ページが開き、**アプリの準備が整いました。**\n\n      ![アプリの準備完了](~/assets/images/meeting-token-generator/meeting-token-generator-appisready.png) \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウで **csharp** フォルダーに移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/meeting-token-generator/meeting-token-generator-dotnetruncmd.png)\n  \n"
- title: 開発者向けプレビューを有効にする
  durationInMinutes: 1
  content: "**デスクトップ Teams クライアントで開発者プレビューを有効にするには**\n\n1. テナントの管理コンソールでアプリのアップロードを有効にします。\n   1. 管理者の資格情報で [Microsoft 365 管理センター](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/)にサインインします。\n   1. 左側のパネルで、[ **すべて表示**] を選択します。\n   1. Teamsを選択 **します**。\n\n      ![管理センター メニュー](~/assets/images/meeting-token-generator/meeting-token-generator-admincenterimage.png)\n\n   1. 左側のパネルで、**Teams アプリ** を選択します。\n   \n   1. [ **セットアップ ポリシー] を選択します**。\n\n      ![セットアップ ポリシー](~/assets/images/meeting-token-generator/meeting-token-generator-setuppolicies.png) \n\n   1. [ **グローバル**] を選択します。\n\n      ![オンに切り替える](~/assets/images/meeting-token-generator/meeting-token-generator-turnonsideloadimage.png)\n\n   1. **カスタム アプリアップロード****オン** の位置に切り替えます。\n\n      ![オンに切り替える](~/assets/images/meeting-token-generator/meeting-token-generator-toggleOn.png)\n\n   1. **[保存]** を選択します。 \n   \n      テスト テナントでは、カスタム アプリのサイドローディングを許可できます。\n\n      > [!NOTE]\n      > サイドローディングがアクティブになるまでに時間がかかります。\n\n1. Microsoft Teamsに移動 **します**。\n\n1. Teams インターフェイス`...`の右上隅にある [ .\n\n1. **[バージョン情報]** を選びます。 \n\n1. **[開発者プレビュー**] を選択します。\n\n    ![開発者向けプレビュー](~/assets/images/meeting-token-generator/meeting-token-generator-devpreview.png)\n\n1. [ **開発者向けプレビューに切り替える**] を選択します。\n\n    ![開発者向けプレビューに切り替える](~/assets/images/meeting-token-generator/meeting-token-generator-switchtodevpreview.png)\n"
- title: 会議トークン アプリをTeamsに追加する
  durationInMinutes: 1
  content: "**Teams会議を作成し、会議トークン アプリを追加するには**\n\n1. 複製されたリポジトリで、 **csharp > リソース > マニフェスト** に移動します。\n\n1. **マニフェスト** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip ファイル](~/assets/images/meeting-token-generator/meeting-token-generator-zipfile.png) \n\n1. 発表者と出席者を含む会議を作成します。\n\n1. 会議が作成されたら、会議の詳細ページに移動し、[**アプリの****追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-addanapp.png) \n\n1. 開いたポップアップで、[ **アプリの管理**] を選択します。\n\n   ![アプリを管理する](~/assets/meeting-token-generator-manageapps.png)\n\n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n   ![カスタム アプリをアップロードする](~/assets/images/meeting-token-generator/meeting-token-generator-uploadcustomapp.png)\n\n1. **[開く]** を選択して、**マニフェスト** フォルダーに作成した.zip ファイルをアップロードします。\n\n   ![zip ファイルを選択する](~/assets/images/meeting-token-generator/meeting-token-generator-selectzip.png)\n\n1. **[追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-addtheapp.png)\n\n   [ **アプリの管理]** セクションには、アプリケーションの一覧が表示されます。\n\n   ![アプリを管理するアプリ](~/assets/images/meeting-token-generator/meeting-token-generator-manageappsection.png)\n\n1. Teams会議に移動します。\n\n1. **[アプリの追加]** を選択します。 \n\n   アプリの選択ページで、アプリが **会議トークン アプリ** として表示されます。\n\n   ![Teamsのアプリ アイコン](~/assets/images/meeting-token-generator/meeting-token-generator-appicon.png)\n\n1. **会議トークン アプリ** を選択します。\n\n1. **[保存]** を選択します。\n\n   ![ウェルカム アプリ](~/assets/images/meeting-token-generator/meeting-token-generator-welcomeapp.png)\n\n   アプリは会議チャットに表示されます。 \n\n1. 会議を開始します。 \n\n   アイコンは、会議コントロール バーに表示されます。\n\n    ![Meet のトークン](~/assets/images/meeting-token-generator/meeting-token-generator-tokeninmeet.png)\n\n > [!NOTE] \n > 独自のプロジェクトで作業する場合は、永続ストレージ メカニズムを使用して、テナントのトークン情報とサービス URL を格納してください。\n"
- title: チャレンジを完了する
  durationInMinutes: 1
  content: >
    このようなことを思い付いたのですか?


    ![トークン](~/assets/images/meeting-token-generator/meeting-token-generator-yourtokennumber.png)
- content: >-
    会議トークン ジェネレーター アプリの使用を開始するためのチュートリアルを完了しました。


    リアルタイム シナリオでアプリケーションがどのように表示されるかを確認します。


    ![リアルタイム](~/assets/images/meeting-token-generator/meeting-token-generator-realtimescenario.png)
