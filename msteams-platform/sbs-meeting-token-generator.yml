### YamlMime:Tutorial
title: 会議トークンを生成する
metadata:
  title: 会議トークンを生成する
  description: このラーニング モジュールを使用して、Teams の会議で対話するすべての参加者の会議トークンを生成する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 11/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 会議用のアプリを有効にして構成する方法の詳細
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 96df2c1f1f3a1a32ae3ba770287057e42c6cba10
  ms.sourcegitcommit: c1032ea4f48c4bbf5446798ff7d46d7e6e9f55d2
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/27/2022
  ms.locfileid: "68027376"
items:
- durationInMinutes: 1
  content: >
    会議トークン アプリは、会議参加者がトークンを要求し、トークンを生成できるようにすることで、Teams での会議エクスペリエンスを強化するのに役立ちます。 アプリは、各参加者が会議で対話する機会が均等になるように、トークンを順番に生成します。 たとえば、このアプリは Q&A セッションや、スクラム会議などの会議で役立ちます。


    > [!NOTE]

    > 会議トークン ジェネレーター アプリの [会議中] タブは、Teams デスクトップ クライアントでのみ使用できます。


    **会議トークン ジェネレーターの主な機能**


    * 会議で使用されている現在のトークンを表示します。

    * トークン番号に基づいて並べ替えられたユーザー リストを表示します。

    * 要求に応じてユーザーのトークンを生成します。

    * 現在のユーザーのトークン番号を表示します。

    * 開催者が現在の会議トークンをスキップできるようにします。


    **ユーザー操作のさまざまな方法**


    * トークン: ユーザーのトークンを要求します。

    * 完了: ユーザーのトークン生成を確認します。

    * スキップ: 現在のユーザーをスキップし、トークンの次のユーザーに移動します。

      > [!NOTE]
      > スキップは、会議の開催者のみが使用できます。

    このステップ バイ ステップ ガイドは、すべての参加者が会議で対話するための会議トークンを生成するのに役立ちます。 次の出力が表示されます。

       :::image type="content" source="~/assets/images/meeting-token-generator/sbs-final-output.png" alt-text="最終的な出力":::
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境を設定します。 \n\n * 有効なアカウントを持つ [Microsoft Teams](https://teams.microsoft.com/) \n * [無料の Teams 開発者テナントを取得する](https://developer.microsoft.com/microsoft-365/dev-program)\n * [.NET Core SDK の最新バージョン](https://dotnet.microsoft.com/download)\n * [Visual Studio の最新バージョン](https://visualstudio.microsoft.com/downloads/)\n * [nodejs の最新バージョン](https://nodejs.org/en/download/)\n * [最新バージョンの ngrok](https://ngrok.com/download) または同等のトンネリング ソリューション\n \n   > [!NOTE]\n   > ngrok をダウンロードしたら、サインアップして [authtoken](https://ngrok.com/download) をインストールします。\n \n 次のテクノロジに関する実用的な知識が必要です。\n\n * [C#](/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments)\n * [ECMAScript6](http://es6-features.org/#Constants)\n * [ASP.NET コアの最新バージョン](/aspnet/core/?view=aspnetcore-3.1)\n * [React.JSの最新バージョン ](https://reactjs.org/tutorial/tutorial.html) \n \n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "1. [Microsoft Teams のサンプルを](https://github.com/OfficeDev/Microsoft-Teams-Samples)開きます。\n1. [ **コード**] を選択します。\n1. ドロップダウン メニューから[ **Open with GitHub Desktop]\\(GitHub Desktop で開く\\**) を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-bot-builder-samples.png\" alt-text=\"ボット\":::\n\n1. [ **複製**] を選択します。 \n\n   > [!NOTE]\n   > \"Filename too long\" というエラーが発生した場合は、選択した管理者ターミナルに git コマンド 'git config --system core.longpaths true' を適用します。\n"
- title: ボットを作成して登録する
  durationInMinutes: 5
  content: "次の手順は、ボットを作成してAzure portalに登録するのに役立ちます。\n\n * Azure bot リソースを作成して、Azure Bot Serviceにボットを登録します。\n * ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n * ボットをデプロイする Teams チャネルを追加します。\n * ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n * 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n **Azure Bot リソースを作成するには**\n\n 1. [Azure portal](https://portal.azure.com/) にアクセスします。\n 1. **[リソースの作成]** を選択します。\n 1. 検索ボックスに「 **Azure Bot**」と入力します。\n 1. **Enter** キーを押します。\n 1. **Azure Bot** を選択します。\n\n      :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Azure ボット。\":::\n\n 1. **[作成]** を選択します。\n 1. ボット ハンドルに必要な **ボット ハンドル** 名を入力します。\n 1. ドロップダウン リストから **[サブスクリプション]** を選択します。\n 1. ドロップダウン リストから **[リソース グループ]** を選択します。\n \n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-create-azure-bot.png\" alt-text=\"new aruze\":::\n\n    新しいリソース グループを作成するには ([ **新しい** リソースの作成] を選択>、リソース名を入力> **[OK**] を選択します)。 **[新しいリソース グループ** の場所] ドロップダウン リストから必要な場所を選択します。\n\n    詳細については、「 [リソース グループの作成](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups)」を参照してください。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-south-india.png\" alt-text=\"インド\":::\n\n 1. **[Microsoft アプリ ID**] セクションでは、既定で [**新しい Microsoft アプリ ID の作成]** が選択されています。 \n \n    [ **既存のアプリの登録を使用** する] を選択し、 **既存のアプリ ID** と **既存のアプリ パスワード** を入力するか、[ **新しい Microsoft アプリ ID の作成**] を選択します。\n\n    > [!NOTE]\n    > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n 1. [**アプリを****マルチテナント** として種類] を選択します。\n 1. **[確認 + 作成]** を選びます。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-multitenant.png\" alt-text=\"マルチテナント\":::\n\n 1. 検証に合格した場合は、**[作成]** を選択します。\n\n     ボット サービスがプロビジョニングされるまで少し時間がかかります。\n\n 1. [**リソースに移動**] を選びます。 \n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-meeting-token-generator-bot-deployment.png\" alt-text=\"ボット\":::\n\n     Azure ボットが作成されます。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-bot-page.png\" alt-text=\"ボット ホーム\":::\n\n **クライアント シークレットを作成するには**\n\n   新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n 1. 左側のパネルで、[構成] を選択 **します**。 \n\n    > [!TIP]\n    > 今後参照できるように **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n 1. **Microsoft アプリ ID** の横にある [**管理**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"ボットを管理する\":::\n\n 1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-client-secret.png\" alt-text=\"秘密\":::\n    \n    [ **クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n 1. **「説明」と入力します**。\n \n 1. **[追加]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-add-client secret.png\" alt-text=\"client\":::\n\n 1. [ **値** ] 列で、[ **クリップボードにコピー**] を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-clientvalue.png\" alt-text=\"ボット ホーム\":::\n    \n    > [!TIP]\n    > 今後参照できるように **、クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n **Microsoft Teams チャネルを追加するには**\n\n 1. [**ホーム**] を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-home-page.png\" alt-text=\"ページ\":::\n\n 1. **最近使用したリソース** からボットを選択します。\n\n 1. 左側のウィンドウで **[チャネル**] を選択し、**Microsoft Teams** を選択します。 <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n     :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"チャネルで Teams を選択する\":::\n\n 1. [ **利用規約**] に同意するには、チェック ボックスをオンにします。\n \n 1. **[同意する**] を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-agree.png\" alt-text=\" 同意\":::\n\n 1. **[適用]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-messages.png\" alt-text=\"メッセージ\":::   \n \n **ローカル Web サーバーのトンネルを作成するには**\n\n ngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n   ```bash\n   ngrok http --host-header=localhost 3978\n   ```\n\n   > [!NOTE]\n   > ngrok トンネルの作成中に、コマンド **ライン** を選択してアプリを実行する代わりに`3978`使用`localhost 5000`します。\n \n   > [!TIP]\n   > **ERR_NGROK_4018** が発生した場合は、**コマンド プロンプト** に記載されている手順に従って、サインアップして ngrok を認証します。 `ngrok http --host-header=localhost 3978` コマンドを実行します。\n\n\n **メッセージング エンドポイントを追加するには**\n\n 1. ngrok から HTTPS URL をコピーします。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"ngrok HTTPS URL\":::\n\n     > [!NOTE]\n     > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n     > は `WebAppDomain` 、完全修飾ドメイン名であり、ドメイン名には含 `https://` まれません。\n\n 1. 作成した Azure ボットの **設定** で、[構成] を選択 **します**。\n\n 1. **メッセージング エンドポイント** で、ngrok から入手できる HTTPS URL を使用し、URL の最後に **/api/messages** を追加します。\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-messaging-endpoint.png\" alt-text=\"ボット ホーム\":::\n\n 1. **[適用]** を選択します。\n\n     Azure Bot Serviceでボットが正常に設定されました。\n"
- title: タブ SSO の Azure アプリ登録を更新する
  durationInMinutes: 1
  content: "1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、**アプリの登録** を選択します。\n\n1. ボットを選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-app-register.png\" alt-text=\"登録\":::\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [ **設定**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-bot-set.png\" alt-text=\"set\":::\n\n1. **アプリケーション ID URI を** 次の`api://your ngrok/botid-{your AppID}`形式で設定します。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-setlink.png\" alt-text=\"ボット ホーム\":::\n\n   次の図は、ドメイン名を示しています。\n    \n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-appIDuri.png\" alt-text=\"ボット ホーム\":::\n  \n   > [!NOTE]\n   > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n   > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、新しい ngrok サブドメイン名です `f631****.ngrok.io` 。\n\n1. **[スコープの追加]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectscope.png\" alt-text=\"ボット ホーム\":::\n\n1. 表示されるパネルで、**スコープ名** として入力`access_as_user`します。\n\n1. **[同意できるユーザー] を** `Admins and users`[ .\n\n1. スコープの適切な値を使用して管理者とユーザーの同意プロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * **同意表示名管理** 入力`Teams can access the user’s profile`します。\n\n     * **同意の説明管理** 入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **ユーザー同意表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **ユーザーの同意の説明** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n   次の図は、フィールドと値を示しています。\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-addascope.png\" alt-text=\"ボット ホーム\":::\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-enabled.png\" alt-text=\"enabled\":::\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://ae57****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-scopes.png\" alt-text=\"ボット ホーム\":::\n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-selectclientapp.png\" alt-text=\"ボット ホーム\":::\n\n1. **クライアント ID を** 入力します。 `1fec8e78-bce4-4aaf-ab1b-5451cc387264` Teams モバイルアプリケーションまたはデスクトップ アプリケーションの場合。 \n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp1.png\" alt-text=\"ボット ホーム\":::\n\n   Teams Web アプリケーションの **クライアント ID:**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` を入力できます。\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp2.png\" alt-text=\"ボット ホーム\":::\n\n1. [ **承認されたスコープ]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-authorizedscope.png\" alt-text=\"ボット ホーム\":::\n\n   次の図は、クライアント ID を表示します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-clientapps.png\" alt-text=\"ボット ホーム\":::\n\n1. 左側のパネルで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addpermission.png\" alt-text=\"ボット ホーム\":::\n\n1. **[Microsoft Graph]** を選択します。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. 以下のアクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n     * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-otherpermissions.png\" alt-text=\"その他のアクセス許可\":::\n\n1. 左側のパネルで [ **認証** ] を選択してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。 </br>\n           \n    \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-webauthentication.png\" alt-text=\"ボット ホーム\":::\n\n     1. 完全修飾ドメイン名に追加して、アプリの `auth-end` リダイレクト URI を入力します。</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして **、暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-configure-web.png\" alt-text=\"ボット ホーム\":::\n"
- title: アプリの設定を設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで **appsettings.json** に移動します。\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-appsettingslocation.png\" alt-text=\"ボット ホーム\":::\n\n1. **Visual Studio Code** で **appsettings.json を** 開き、次の情報を更新します。  \n\n     * ボットの **Microsoft アプリ ID に** 設定`\"MicrosoftAppId\"`します。\n     * ボットのクライアント シークレット ID 値に設定 `\"MicrosoftAppPassword\"` します。\n     * アプリが使用されているテナントのテナント ID に設定 `\"AzureAd\".\"TenantId\"` します。\n\n    > [!NOTE]\n    > このサンプルは、現在のテナントでのみ機能します。\n\n     * ボットの **Microsoft アプリ ID に** 設定`\"AzureAd\".\"ApplicationId\"`します。\n     * コンテンツ バブルの iframe URL `(https://[WebAppDomain]/contentBubble.html)`に設定`\"ContentBubbleUrl\"`します。\n\n    > [!NOTE]\n    > `WebAppDomain` は ngrok ドメインであるため、コンテンツ バブル URL は次のようになります `https://ae57****.ngrok.io/contentBubble.html`。\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs app setting Latest.png\" alt-text=\"ボット ホーム\":::\n"
- title: マニフェスト ファイルを設定する
  durationInMinutes: 1
  content: >
    1. 複製されたリポジトリ内に `manifest.json` 移動します。

        :::image type="content" source="~/assets/images/meeting-token-generator/sbs-manifest.png" alt-text="マニフェスト":::

    1. **Visual Studio Code** で開`manifest.json`き、次の変更を加えます。

         * 最新バージョンに設定 `manifestVersion` します。
         * に設定 `$schema` します `https://developer.microsoft.com/json-schemas/teams/v1.11/MicrosoftTeams.schema.json`。
         * に設定 `resource` します `api://[WebAppDomainName]/[MicrosoftAppId]`。
         * に`Contoso`置き換えます`[companyName]`。
         * 次のセクションを完全修飾ドメイン名に置き換えます。
           * `websiteUrl`
           * `privacyUrl`
           * `termsOfUseUrl`


          :::image type="content" source="~/assets/images/meeting-token-generator/sbs-manifest 1 latest new.png" alt-text="ボット ホーム":::

         * すべての出現箇所を `WebAppDomainName` ngrok ドメイン名に置き換えます。
         * すべての出現箇所をボットの `MicrosoftAppId` **Microsoft アプリ ID に** 置き換えます。

          :::image type="content" source="~/assets/images/meeting-token-generator/sbs-manifest 2 Latest.png" alt-text="ボット ホーム":::
- title: npm インストールを使用してクライアント アプリをビルドする
  durationInMinutes: 1
  content: >
    1. 複製されたリポジトリの **App** フォルダーに移動します。

    1. アプリ フォルダーのパス **を** コピーします。

    1. 新しい **コマンド プロンプト** ウィンドウを開き、現在のディレクトリをコピーした **アプリ** パスに変更します。

       :::image type="content" source="~/assets/images/meeting-token-generator/sbs-command-prompt-new1.png" alt-text="ボット ホーム":::

    1. **コマンド プロンプト** で次のコマンドを実行して、パッケージと依存関係をダウンロードします。

       ```Command-Prompt
       npm install
       ```
    1. **コマンド プロンプト** で次のコマンドを実行して、アプリを起動します。

       ```Command-Prompt
       npm start
       ```
       :::image type="content" source="~/assets/images/meeting-token-generator/meeting-token-generator-buildapp.png" alt-text="ボット ホーム":::

       このプロセスでは、アセットがコピーされる **App** フォルダー内に、配布可能な **フォルダーまたは /dist** フォルダーが生成されます。 サーバーは、場所から静的ファイルを提供します。

       :::image type="content" source="~/assets/images/meeting-token-generator/meeting-token-generator-distfolder.png" alt-text="ボット ホーム":::
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**最新の Visual Studio またはコマンド ラインを使用してサービスをビルドして実行するには**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs)\n\n   1. Visual Studio の最新バージョンを起動します。\n   1. **ファイル** > **を開く** > **プロジェクト/ソリューション** に移動します。\n       \n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png\" alt-text=\"vsopen\":::\n\n   1. **csharp** フォルダーから **TokenApp.csproj** ファイルを選択します。\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-Tokenfileready.png\" alt-text=\"ボット ホーム\":::\n\n   1. **F5** キーを押してプロジェクトを実行します。\n \n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png\" alt-text=\"ボット ホーム\":::\n\n      Web ページが開き、**アプリの準備が整いました。**\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-appisready.png\" alt-text=\"ボット ホーム\":::\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウで **csharp** フォルダーに移動し、次のコマンドを入力します。\n\n```bash\n dotnet run\n```\n:::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-dotnetruncmd.png\" alt-text=\"Dotnet\":::\n"
- title: 開発者向けプレビューを有効にする
  durationInMinutes: 1
  content: "1. テナントの管理コンソールでアプリのアップロードを有効にします。\n   1. 管理者の資格情報で [Microsoft 365 管理センター](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/)にサインインします。\n   1. 左側のパネルで、[ **すべて表示**] を選択します。\n   1. [ **Teams] を選択します**。\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-admincenterimage.png\" alt-text=\"ボット ホーム\":::\n\n   1. 左側のパネルで、[ **Teams アプリ**] を選択します。\n   \n   1. [ **セットアップ ポリシー] を選択します**。\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-setuppolicies.png\" alt-text=\"セットアップ\"::: \n\n   1. [ **グローバル**] を選択します。\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-turnonsideload.png\" alt-text=\"ボット ホーム\":::\n\n   1. **[カスタム アプリのアップロード****] を [オン]** の位置に切り替えます。\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-toggleOn.png\" alt-text=\"ボット ホーム\":::\n\n   1. **[保存]** を選択します。 \n   \n      テスト テナントで、カスタムアプリのサイドローディングができるようになりました。\n\n      > [!NOTE]\n      > サイドローディングがアクティブになるまでに時間がかかります。\n\n1. **Microsoft Teams** に移動します。\n\n1. Teams インターフェイス `...`の右上隅にある [ .\n\n1. **[バージョン情報]** を選びます。 \n\n1. **[開発者プレビュー**] を選択します。\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-dev-preview.png\" alt-text=\"開発者向けプレビュー\":::\n\n1. [ **開発者向けプレビューに切り替える**] を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-developer-preview.png\" alt-text=\"開発者向けプレビュー\":::\n"
- title: Teams に会議トークンを追加する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで、 **csharp > リソース > マニフェスト** に移動します。\n\n1. **マニフェスト** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-cshrap-manifest.png\" alt-text=\"Csharp\"::: \n\n1. 発表者と出席者を含む会議を作成します。\n\n1. 会議が作成されたら、会議の詳細ページに移動し、[**アプリの****追加]** を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-addanapp.png\" alt-text=\"アプリを追加する\"::: \n\n1. ポップアップ ウィンドウで、[ **アプリの管理**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/sbs-find-app.png\" alt-text=\"アプリを見つける\":::\n\n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-uploadcustomapp.png\" alt-text=\"ボット ホーム\":::\n\n1. **[開く]** を選択して、**マニフェスト** フォルダーに作成した.zip ファイルをアップロードします。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-selectzip.png\" alt-text=\"ボット ホーム\":::\n\n1. **[追加]** を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-addtheapp.png\" alt-text=\"ボット ホーム\":::\n\n   [ **アプリの管理]** セクションには、アプリケーションの一覧が表示されます。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-manageappsection.png\" alt-text=\"ボット ホーム\":::\n\n1. Teams 会議に移動します。\n\n1. **[アプリの追加]** を選択します。 \n\n   アプリの選択ページで、アプリが **会議トークン アプリ** として表示されます。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-appicon.png\" alt-text=\"appicon\":::\n\n1. **会議トークン アプリ** を選択します。\n\n1. **[保存]** を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-welcomeapp.png\" alt-text=\"ようこそ\":::\n\n   アプリは会議チャットに表示されます。 \n\n1. 会議を開始します。 \n\n   アイコンは、会議コントロール バーに表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-token-generator/meeting-token-generator-tokeninmeet.png\" alt-text=\"token in\":::\n\n    > [!NOTE] \n    > 独自のプロジェクトで作業する場合は、永続ストレージ メカニズムを使用して、テナントのトークン情報とサービス URL を格納してください。\n"
- title: 課題の完了
  durationInMinutes: 1
  content: >
    このようなものを思いついたのですか?


    :::image type="content" source="~/assets/images/meeting-token-generator/meeting-token-generator-yourtokennumber.png" alt-text="トークン番号":::
- content: >-
    会議トークン ジェネレーター アプリの使用を開始するためのチュートリアルを完了しました。


    リアルタイム シナリオでアプリケーションがどのように表示されるかを確認します。


    :::image type="content" source="~/assets/images/meeting-token-generator/meeting-token-generator-realtime.png" alt-text="リアルタイム":::
