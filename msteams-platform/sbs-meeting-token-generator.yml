### YamlMime:Tutorial
title: 会議トークン ジェネレーター
metadata:
  title: 会議トークン ジェネレーター
  description: このチュートリアルでは、会議トークン ジェネレーターの設定について説明Teams。
  audience: Developer
  level: Beginner
  ms.date: 11/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 会議用アプリを有効にして構成する方法の詳細
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8d5707eb112a9888f637cfe2f1aaf726fd045715
  ms.sourcegitcommit: 9e448dcdfd78f4278e9600808228e8158d830ef7
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 01/17/2022
  ms.locfileid: "62059701"
items:
- durationInMinutes: 1
  content: >
    会議トークン ジェネレーター アプリは、会議参加者がトークンを要求Teamsすることで、会議のエクスペリエンスを向上させるのに役立ちます。 アプリはトークンを順番に生成して、各参加者が会議で対話する機会を均等に持つ。 たとえば、このアプリは Q&セッションや会議 (スクラム会議など) で役立ちます。


    > [!NOTE]

    > 会議トークンジェネレーター アプリの会議中タブは、デスクトップ クライアントTeams **使用できます**。


    **会議トークン ジェネレーターの主な機能**


    * 会議でサービスを受け取っている現在のトークンを表示します。

    * トークン番号で並べ替えたユーザー リストを表示します。

    * 要求に応じてユーザーのトークンを生成します。

    * 現在のユーザーのトークン番号を表示します。

    * 開催者が現在の会議トークンをスキップできます。


    **ユーザー操作の異なる方法**


    * トークン: ユーザーのトークンを要求します。

    * 完了: ユーザーのトークン生成を確認します。

    * スキップ: 現在のユーザーをスキップし、トークンの行の次のユーザーに移動します。

       > [!NOTE]
       > スキップは、会議の開催者だけが利用できます。

    このステップ バイ ステップ ガイドは、会議トークンを生成して、会議を拡張するのに役立Teams。 次の出力が表示されます。

       ![トークン](~/assets/images/meeting-token-generator/meeting-token-generator-yourtokennumber.png)
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境をセットアップしてください。  \n\n* [.NET Core SDK](https://dotnet.microsoft.com/download) バージョン 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [nodejs](https://nodejs.org/en/download/) LTS バージョン 10.21.0 以降\n* [ngrok](https://ngrok.com/download) の最新バージョン (devbox テストの場合のみ) または同等のトンネリング ソリューション\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken をインストールします](https://ngrok.com/download)。\n\n* [開発者テナントの無料Teams取得する](https://developer.microsoft.com/en-us/microsoft-365/dev-program)\n\n次のテクノロジに関する作業知識を持っている必要があります。\n\n* [C#](https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments)\n* [ECMAScript6](http://es6-features.org/#Constants)\n* [ASP.NET コア](https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-3.1)バージョン 3.1\n* [React.JS](https://reactjs.org/tutorial/tutorial.html) バージョン 16 以降\n"
- title: ローカル環境のセットアップ
  durationInMinutes: 1
  content: "リポジトリ `Microsoft-Teams-Samples` をローカル リポジトリに複製GitHub。  \n\n 1. サンプル[Microsoft Teams開きます](https://github.com/OfficeDev/Microsoft-Teams-Samples)。\n 1. [コード **] を選択します**。\n 1. ドロップダウン メニューから、[デスクトップで開く]**をGitHubします**。\n\n    ![リポジトリの複製](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository1.png)\n\n 1. [複製 **] を選択します**。 \n"
- title: ボットを作成し、AADする
  durationInMinutes: 5
  content: "ボットを作成して Azure Active Directory (AAD) に登録するには、ngrok を使用してトンネルを作成し、メッセージング エンドポイントを追加するには、次の手順を実行します。\n\n* Azure Bot Service にボットを登録する Azure Bot リソースを作成します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* ボットMicrosoft Teamsチャネルを追加して、ボットを展開Teamsします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに **「Azure Bot」と入力します**。\n1. **[Enter] を選択します**。\n1. [Azure **Bot] を選択します**。\n\n     ![Azure ボット カードの作成](~/assets/images/bots/createazurebot.png)\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要なボット ハンドル名 **を入力します**。\n1. [サブスクリプション **] ドロップダウン リスト** から **、[msteams.nonprod.pub.msft.aplt] を選択します**。\n1. [リソース **グループ] ドロップダウン リスト** から、既存のリソース グループを選択します。 新しいリソース グループを作成できます ([新しいリソースの作成] **を選択>** リソース名を入力し **、[OK>** を選択します)。\n\n1. [新しいリソース グループの場所] **ドロップダウン リストから必要な場所を** 選択します。\n\n    ![リソース Azure ボットの作成](~/assets/images/meeting-token-generator/meeting-token-generator-review-plus-create.png)\n\n1. [Microsoft **App ID] セクション** で、既定で [ **新しい Microsoft App ID の作成]** が選択されています。 \n\n   [既存のアプリ登録を使用 **する]** を選択し、[既存のアプリ **ID]** と [ **既存** のアプリ パスワード] を入力するか、[新しい Microsoft アプリ ID の作成] **を選択します**。\n\n   > [!NOTE]\n   > 同じ Microsoft App ID を持つ複数の **ボットを作成できない**。\n\n1. **[確認 + 作成]** を選びます。\n\n    ![Microsoft アプリ ID の作成](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. 検証に合格した場合は、[作成] を **選択します**。\n\n    ボット サービスをプロビジョニングするには、少し時間が必要です。\n\n1. [**リソースに移動**] を選びます。 \n\n    ![アプリの展開](~/assets/images/meeting-token-generator/meeting-token-generator-botdeployment.png)\n\n    Azure ボットが作成されます。\n\n    ![Azure ボット リソースの作成](~/assets/images/meeting-token-generator/meeting-token-generator-bot-page.png)\n\n**クライアント シークレットを作成するには**\n\n  新しい Microsoft App ID を作成した場合は、次の **手順を実行します**。\n\n1. 左側のパネルで、[構成] を **選択します**。 \n\n   > [!TIP]\n   > 将来の **参照のために Microsoft App ID** または **クライアント ID** を保存します。\n\n1. [Microsoft App **ID] の横にある**[管理] を **選択します**。\n\n1. [アプリ **の種類] で [** マルチ **テナント] を選択します**。\n\n    ![Microsoft アプリ ID](~/assets/images/meeting-token-generator/meeting-token-generator-config.png)\n\n1. [クライアント シークレット **] セクションで** 、[新しいクライアント シークレット **] を選択します**。 \n\n    ![新しいクライアント シークレット](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   [ **クライアント シークレットの追加] ウィンドウ** が表示されます。  \n\n1. [説明 **] と入力します**。\n\n1. **[追加]** を選択します。\n\n    ![アプリにクライアント シークレットを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-clientsecret.png)\n\n1. [値] **列で** 、[クリップボードに **コピー] を選択します**。\n\n     ![クライアント シークレットの値](~/assets/images/meeting-token-generator/meeting-token-generator-clientvalue.png)\n   \n   > [!TIP]\n   > 将来の **参照のためにクライアント シークレット** 値またはアプリ パスワードを保存します。\n\n**チャネルを追加Microsoft Teamsするには**\n\n1. [**ホーム**] を選択します。\n\n    ![ホーム ページ](~/assets/images/meeting-token-generator/meeting-token-generator-gotohome.png)\n\n1. [最近使ったリソース] から **ボットを選択します**。\n\n1. 左側 **のウィンドウで** [チャネル] を選択します。 \n\n1. **[Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. このチェック ボックスをオンにして、利用規約 **に同意します**。\n\n1. [同意 **する] を選択します**。\n\n      ![利用規約](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. **[保存]** を選択します。\n\n      ![[選択Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行中の Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!NOTE]\n> ngrok トンネルの作成中に、アプリを実行するために [コマンド ライン] を選択した場合の代 `localhost 5000` `3978` わりに使用します。 \n\n> [!TIP]\n> この **エラーが** ERR_NGROK_4018、コマンド プロンプトに示されている手順に従って ngrok にサインアップして認証します。 `ngrok http -host-header=localhost 3978` コマンドを実行します。\n\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https to io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/meeting-token-generator/meeting-token-generator-ngrok.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > この `WebAppDomain` 名前は、完全修飾ドメイン名で、そのドメイン名に `https://` 含めは含めではありません。\n\n1. 作成 **設定** Azure ボットの [構成] を **選択します**。\n\n1. メッセージング **エンドポイントで、ngrok** から利用可能な HTTPS URL を使用し、URL の最後に **/api/messages を追加します**。\n\n    ![メッセージング エンドポイント](~/assets/images/meeting-token-generator/meeting-token-generator-messaging-endpoint.png)\n\n1. **[適用]** を選択します。\n\n    Azure Bot Service でボットを正常にセットアップしました。\n"
- title: タブ SSO のAADアプリ登録を更新する
  durationInMinutes: 1
  content: "**アプリをポータルから登録するにはAADする**  \n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[アプリの登録 **] を選択します**。\n\n1. ボットを選択します。\n\n   ![アプリの登録](~/assets/images/meeting-token-generator/meeting-token-generator-appregister.png)\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [設定 **] を選択します**。\n\n   ![API を公開する](~/assets/images/meeting-token-generator/meeting-token-generator-exposeanapi.png)\n\n1. の形式 **でアプリケーション ID URI** を設定します `api://{AppID}` 。\n\n   ![リンクの設定](~/assets/images/meeting-token-generator/meeting-token-generator-setlink.png)\n\n1. との `WebAppDomain` 間に値 `api://` を挿入 `/{AppID}` します。</br>\n    `api://ae57****.ngrok.io/{AppID}`</br>\n    \n   次の図は、ドメイン名を示しています。\n    \n    ![アプリ ID URI](~/assets/images/meeting-token-generator/meeting-token-generator-appIDuri.png)\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は `f631****.ngrok.io` 、新しい ngrok サブドメイン名です。\n\n1. **[スコープの追加]** を選択します。 \n\n1. 表示されるパネルで、スコープ `access_as_user` 名として **入力します**。\n\n1. 同意 **Whoを設定しますか?** `Admins and users` に設定します。\n\n1. スコープに適切な値を指定して管理者とユーザーの同意のプロンプトを構成 `access_as_user` するには、フィールドに次の情報を入力します。</br>\n\n     * 管理者 `Teams can access the user’s profile` の同意 **表示名として入力します**。\n\n     * 管理者 `Allows Teams to call the app’s web APIs as the current user` の同意 **の説明として入力します**。\n\n     * [ユーザー `Teams can access the user profile and make requests on the user’s behalf` の **同意] 表示名として入力します**。\n\n     * [ユーザー `Enable Teams to call this app’s APIs with the same rights as the user` の **同意の説明] として入力します**。\n\n   次の図は、フィールドと値を示しています。\n\n    ![スコープを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-addascope.png)\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加** ] を選択します。\n\n    ![スコープの追加](~/assets/images/meeting-token-generator/meeting-token-generator-addscope2.png)\n\n    > [!NOTE]\n    > スコープ **名は、** 最後に **追加されたアプリケーション ID** URI `/access_as_user` と一致する必要があります。</br>\n       `api://ae57****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/meeting-token-generator/meeting-token-generator-scopes.png) \n\n1. [承認済 **みクライアント アプリケーション** ] セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. [クライアント **アプリケーションの追加] を選択します**。 \n\n    ![クライアント アプリの追加](~/assets/images/meeting-token-generator/meeting-token-generator-selectclientapp.png) \n\n1. モバイル **アプリケーションまたはデスクトップ アプリケーション** `1fec8e78-bce4-4aaf-ab1b-5451cc387264` Teamsクライアント ID を入力します。 \n\n    ![クライアント アプリケーションの追加 1](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp1.png) \n\n   Web アプリケーションの **クライアント ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` をTeamsできます。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp2.png) \n\n1. [承認済 **みスコープ] を選択します**。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meeting-token-generator/meeting-token-generator-authorizedscope1.png) \n\n   次の図は、クライアント ID を表示します。\n\n     ![クライアント アプリケーション](~/assets/images/meeting-token-generator/meeting-token-generator-clientapps.png) \n\n1. 左側のパネルで、[API のアクセス **許可] を選択します**。 \n\n   > [!NOTE]\n   > ユーザーは、アプリが別のテナントにAAD場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n     ![アクセス許可の追加](~/assets/images/meeting-token-generator/meeting-token-generator-addpermission.png)\n\n1. [Microsoft **Graph] を選択します**。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n    既定では **、User.Read** が選択されています。\n\n     ![User](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)\n\n1. 以下のアクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profile**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     ![その他のアクセス許可](~/assets/images/meeting-token-generator/meeting-token-generator-otherpermissions.png)\n\n1. 左側のパネルで、[認証] **を選択** してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する場合に同意する必要があります。\n           \n     1. [プラットフォーム **の追加] を選択します**。\n     1. **[Web]** を選びます。\n\n        ![Web](~/assets/images/meeting-token-generator/meeting-token-generator-webauthentication.png)\n\n     1. 完全修飾ドメイン名に追加して、アプリのリダイレクト URI `auth-end` を入力します。</br> \n       `https://ae57****.ngrok.io/auth-end`. </br>\n\n     1. 次 **のチェック ボックスをオンにして** 、暗黙的な付与とハイブリッド フローを有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. [構成 **] を選択します**。\n\n        ![Auth-end](~/assets/images/meeting-token-generator/meeting-token-generator-authend.png)\n"
- title: アプリの設定を設定する
  durationInMinutes: 1
  content: "1. 複製された **リポジトリの appsettings.json** に移動します。\n\n    ![アプリ設定の場所](~/assets/images/meeting-token-generator/meeting-token-generator-appsettingslocation.png)\n\n1. アプリ **で appsettings.json****を開** Visual Studio Code情報を更新します。  \n\n     * ボット `\"MicrosoftAppId\"` の Microsoft **App ID に設定します**。\n     * ボット `\"MicrosoftAppPassword\"` のクライアント シークレット ID 値に設定します。\n     * アプリ `\"AzureAd\".\"TenantId\"` を使用するテナントのテナント ID に設定します。\n\n         > [!NOTE]\n         > このサンプルは、現在のテナントでのみ動作します。\n\n     * ボット `\"AzureAd\".\"ApplicationId\"` の Microsoft **App ID に設定します**。\n     * コンテンツ `\"ContentBubbleUrl\"` バブル iframe URL に設定します `(https://[WebAppDomain]/contentBubble.html)` 。\n\n         > [!NOTE]\n         > `WebAppDomain` は ngrok ドメインなので、コンテンツ バブル URL はに似ています `https://ae57****.ngrok.io/contentBubble.html` 。\n\n    ![アプリの設定](~/assets/images/meeting-token-generator/meeting-token-generator-appsettings.png)\n"
- title: マニフェスト ファイルのセットアップ
  durationInMinutes: 1
  content: >
    1. 複製された **リポジトリの manifest.json** に移動します。

        ![マニフェスト ファイルの場所](~/assets/images/meeting-token-generator/meeting-token-generator-manifestlocation.png)

    1. マニフェスト **.json を開****き**、Visual Studio Codeを変更します。

         * に `manifestVersion` 設定します `1.11` 。

           > [!NOTE]
           > 最新バージョンを提供します。

         * に `$schema` 設定します `https://developer.microsoft.com/json-schemas/teams/v1.11/MicrosoftTeams.schema.json` 。
         * に `resource` 設定します `api://[WebAppDomainName]/[MicrosoftAppId]` 。
         * に `[companyName]` 置き換える `Contoso` 。
         * 次のセクションを完全修飾ドメイン名に置き換える。
           * `[websiteUrl]`
           * `[privacyUrl]`
           * `[termsOfUseUrl]`


           ![マニフェストイメージ1](~/assets/images/meeting-token-generator/meeting-token-generator-manifest-1.png)

         * すべての出現回数を `[WebAppDomainName]` ngrok ドメイン名に置き換える。
         * すべての出現回数をボット `[MicrosoftAppId]` の **Microsoft App ID に置き換える**。

           ![マニフェスト イメージ 2](~/assets/images/meeting-token-generator/meeting-token-generator-manifest-2.png)
- title: npm インストールを使用してクライアント アプリをビルドする
  durationInMinutes: 1
  content: >
    **npm install を使用して配布可能なフォルダーを生成するクライアント アプリをビルドするには**


    1. 複製されたリポジトリ **の App** フォルダーに移動します。

    1. App フォルダー **パスを** コピーします。

    1. 新しいコマンド プロンプト ウィンドウを開き、現在のディレクトリをコピーした App パス **に変更** します。

       ![アプリ フォルダーのパス](~/assets/images/meeting-token-generator/meeting-token-generator-appfolderlocation.png)

    1. パッケージ `npm install` と依存関係をダウンロードするために実行します。

    1. アプリ `npm run build` をビルドするために実行します。

       ![アプリのビルド](~/assets/images/meeting-token-generator/meeting-token-generator-buildapp.png)

       このプロセスでは、アセットがコピーされる **App** フォルダー内に配布可能 **フォルダーまたは /dist** フォルダーが生成されます。 サーバーは、場所から静的ファイルを提供します。

       ![配布可能なフォルダー](~/assets/images/meeting-token-generator/meeting-token-generator-distfolder.png)
- title: サービスのビルドと実行
  durationInMinutes: 1
  content: "**2019 またはコマンド ラインを使用してサービスVisual Studio実行するには**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. **2019 Visual Studioを起動します**。\n   1. [ファイルを **開**  >  **く]**  >  **Project/ソリューション に移動します**。\n\n      ![ファイルを開く](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. csharp **フォルダーから TokenApp.csproj** **ファイルを選択** します。\n\n      ![トークン ファイル](~/assets/images/meeting-token-generator/meeting-token-generator-Tokenfileready.png)\n\n   1. F5 **キーを押** してプロジェクトを実行します。\n\n   1. 次の **ダイアログが表示** される場合は、[はい] を選択します。\n\n      ![信頼証明書](~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png)\n\n      Web ページが開き、アプリ **が準備完了です! というメッセージが表示されます**。\n\n      ![アプリの準備完了](~/assets/images/meeting-token-generator/meeting-token-generator-appisready.png) \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウ **で csharp** フォルダーに移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/meeting-token-generator/meeting-token-generator-dotnetruncmd.png)\n  \n"
- title: 開発者プレビューを有効にする
  durationInMinutes: 1
  content: "**デスクトップ クライアントで開発者プレビューを有効にするにはTeams**\n\n1. テナントの管理コンソールでアプリのアップロードを有効にします。\n   1. 管理者資格情報を[使用Microsoft 365 管理センター](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/)にサインインします。\n   1. 左側のパネルで、[すべて表示] **を選択します**。\n   1. [Teams]**を選択します**。\n\n      ![管理センター メニュー](~/assets/images/meeting-token-generator/meeting-token-generator-admincenterimage.png)\n\n   1. 左側のパネルで、[アプリ]**をTeamsします**。\n   \n   1. [セットアップ **ポリシー] を選択します**。\n\n      ![セットアップ ポリシー](~/assets/images/meeting-token-generator/meeting-token-generator-setuppolicies.png) \n\n   1. [グローバル **] を選択します**。\n\n      ![トグル オン](~/assets/images/meeting-token-generator/meeting-token-generator-turnonsideloadimage.png)\n\n   1. カスタム **アプリアップロードオンの位置** に **切り替** える。\n\n      ![トグル オン](~/assets/images/meeting-token-generator/meeting-token-generator-toggleOn.png)\n\n   1. **[保存]** を選択します。 \n   \n      テスト テナントは、カスタム アプリのサイドローディングを許可できます。\n\n      > [!NOTE]\n      > サイドローディングはアクティブになるのに時間がかかる。\n\n1. [次へ]**にMicrosoft Teams。**\n\n1. インターフェイスの右上隅にある [Teams] を選択します `...` 。\n\n1. [概要 **] を選択します**。 \n\n1. [開発者 **プレビュー] を選択します**。\n\n    ![開発者向けプレビュー](~/assets/images/meeting-token-generator/meeting-token-generator-devpreview.png)\n\n1. [開発者 **プレビューに切り替える] を選択します**。\n\n    ![開発者プレビューに切り替える](~/assets/images/meeting-token-generator/meeting-token-generator-switchtodevpreview.png)\n"
- title: 会議トークン アプリを会議に追加Teams
  durationInMinutes: 1
  content: "**会議を作成Teams会議トークン アプリを追加するには**\n\n1. 複製されたリポジトリで、[マニフェスト] の [リソース] > **csharp >移動します**。\n\n1. Manifest フォルダー.zipファイルを含むフォルダーを **作成** します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip ファイル](~/assets/images/meeting-token-generator/meeting-token-generator-zipfile.png) \n\n1. 少数の発表者と出席者との会議を作成します。\n\n1. 会議を作成したら、会議の詳細ページに移動し、[アプリの追加 **]** **を選択します**。\n\n   ![アプリの追加](~/assets/images/meeting-token-generator/meeting-token-generator-addanapp.png) \n\n1. 開くポップアップで、[アプリの管理] **を選択します**。\n\n   ![アプリを管理する](~/assets/images/meeting-token-generator/meeting-token-generator-manageappsimage.png)\n\n1. カスタム **アプリアップロードを選択します**。 \n\n   ![アップロードカスタム アプリ](~/assets/images/meeting-token-generator/meeting-token-generator-uploadcustomapp.png)\n\n1. [ **開く** ] を選択して.zip作成したファイルを **アップロード** します。\n\n   ![Zip ファイルの選択](~/assets/images/meeting-token-generator/meeting-token-generator-selectzip.png)\n\n1. **[追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/meeting-token-generator/meeting-token-generator-addtheapp.png)\n\n   [ **アプリの管理]** セクションには、アプリケーションの一覧が表示されます。\n\n   ![アプリの管理のアプリ](~/assets/images/meeting-token-generator/meeting-token-generator-manageappsection.png)\n\n1. [会議] Teams移動します。\n\n1. **[アプリの追加]** を選択します。 \n\n   アプリの選択ページで、アプリは会議トークン **アプリとして表示されます**。\n\n   ![アプリのアイコン (Teams](~/assets/images/meeting-token-generator/meeting-token-generator-appicon.png)\n\n1. 会議トークン **アプリを選択します**。\n\n1. **[保存]** を選択します。\n\n   ![ウェルカム アプリ](~/assets/images/meeting-token-generator/meeting-token-generator-welcomeapp.png)\n\n   アプリは会議チャットに表示されます。 \n\n1. 会議を開始します。 \n\n   アイコンは、会議コントロール バーに表示されます。\n\n    ![Meet のトークン](~/assets/images/meeting-token-generator/meeting-token-generator-tokeninmeet.png)\n\n > [!NOTE] \n > 独自のプロジェクトで作業する場合は、永続的なストレージ メカニズムを使用して、テナントのトークン情報とサービス URL を格納してください。\n"
- title: 完全なチャレンジ
  durationInMinutes: 1
  content: >
    このようなことを思い付い出しましたか?


    ![トークン](~/assets/images/meeting-token-generator/meeting-token-generator-yourtokennumber.png)
- content: >-
    ミーティング トークン ジェネレーター アプリの使用を開始するチュートリアルを完了しました。


    リアルタイム シナリオでのアプリケーションの外観を確認します。


    ![リアルタイム](~/assets/images/meeting-token-generator/meeting-token-generator-realtimescenario.png)
