### YamlMime:Tutorial
title: Blazor を使用して初めてのアプリを構築する
metadata:
  title: Hello World with Blazor
  description: このチュートリアルでは、Blazor を使用して Hello World アプリを構築する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: '[概要] に戻る'
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 6d5e41a3e56ec5bbca029126693d9bb3f04c3a0e
  ms.sourcegitcommit: 22c9e44437720d30c992a4a3626a2a9f745983c1
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "60721349"
items:
- durationInMinutes: 1
  content: "\nBlazor を使用すると、JavaScript ではなく、C#を使用して対話型 Web の UIs を構築できます。 \n\n最初のアプリMicrosoft Teamsタブ機能を使用して構築することで、アプリ開発を開始できます。 このアプリは、Blazor と 2019 年Visual Studioします。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"このアプリを示す図には、3 つの機能があります。タブが強調表示されます。\" border=\"false\":::\n\n> [!NOTE]\n> 現在、Teams Toolkit 2019 と Blazor のタブ アプリVisual Studio提供しています。 ボットとメッセージ拡張機能の機能は使用できません。\n"
- title: 前提条件
  durationInMinutes: 1
  content: "\nアプリの構築と展開に必要なツールの一覧を次に示します。\n\n| &nbsp;    | インストール   | using... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (推奨) または[Google Chrome](https://www.google.com/chrome/) | 開発者ツールを含むブラウザー。 |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)、ASP.NET **Web 開発**、または **.NET Core** クロスプラットフォーム開発ワークロード | .NET |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) Visual Studio Code[および Azure CLI](/cli/azure/install-azure-cli) | Azure ツールを使用して、保存されたデータにアクセスしたり、Azure でアプリのクラウド ベースのバックエンドTeams展開したりします。 |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graphエクスプローラーは、Microsoft のデータからクエリを実行できるブラウザー ベースのGraphです。 |\n| &nbsp; | [Teams の開発者ポータル](https://dev.teams.microsoft.com/) | Web ベースのポータルを使用して、組織や組織Teamsストアにアプリを構成、管理、配布Teamsします。 |\n| &nbsp; | **Visual Studio Code拡張機能** | &nbsp; |\n| &nbsp; | [Azure Functions コア ツール](/azure/azure-functions/functions-run-local) | ローカル デバッグの実行中にローカルでバックエンド コンポーネント (Azure でサービスを実行するときに必要な認証ヘルパーを含む)。 プロジェクト ディレクトリ内にインストールされます (npm を使用 `devDependencies` )。 |\n| &nbsp; | [.NET SDK](/dotnet/core/install/) | ローカル デバッグと Azure Functions アプリの展開用にカスタマイズされたバインド。 .NET 3.1 (以降) SDK をグローバルにインストールしていない場合は、ポータブル バージョンをインストールできます。 |\n\n> [!TIP]\n> Microsoft のデータをGraphする場合は、Microsoft データベース エクスプローラーについて説明し、ブックマークGraph必要があります。 このブラウザー ベースのツールを使用すると、アプリの外部で Microsoft Graphクエリを実行できます。\n</details>\n\n## <a name=\"prepare-development-environment\"></a>開発環境の準備\n\n必要なツールをインストールしたら、開発環境をセットアップします。\n\n### <a name=\"install-the-teams-toolkit\"></a>サーバーをインストールTeams Toolkit\n\nこのTeams Toolkitは、アプリのクラウド リソースをプロビジョニングおよび展開するツール、アプリ ストアに発行するツールを使用して開発プロセスを簡略化Teams役立ちます。 このツールキットは、Visual Studio Code、Visual Studio CLI (呼び出し) として使用できます `teamsfx` 。 \n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs)\n\n2019 Visual Studioを使用して、.NET Teams Blazor Server を使用してアプリを開発できます。\n\n拡張機能をインストールTeams Toolkitするには、次の手順を実行します。\n\n1. 2019 Visual Studioを開きます。\n1. [拡張機能 **の管理**  >  **] を選択します**。\n1. 検索ボックスに「Teams Toolkit」**と入力します**。\n1. 拡張機能を選択Teams Toolkitし、[ダウンロード] を **選択します**。 拡張機能がダウンロードされます。\n1. 2019 Visual Studio閉じて、拡張機能をインストールします。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nTeamsFx CLI をインストールするには、パッケージ マネージャーを `npm` 使用します。\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\n構成によっては、CLI のインストールに使用 `sudo` する必要がある場合があります。\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nこの状態は、Linux および macOS システムで一般的です。\n\nnpm グローバル キャッシュを PATH に追加してください。 通常、この手順は、ユーザーのインストーラーの一部Node.jsされます。  \n\nコマンドで CLI を使用 `teamsfx` できます。 コマンドを実行して動作を確認します `teamsfx -h` 。\n\n> [!CAUTION]\n> PowerShell ターミナルで TeamsFx を実行する前に、PowerShell の \"リモート署名済み\" 実行ポリシーを有効にする必要があります。\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>開発テナントTeams設定する\n\nテナント **は**、チャット、ファイルの共有、会議の実行を行う、Teamsのスペース、または組織のコンテナーに似たものになります。 この領域は、アプリのサイドロードとテストも行う場所です。 テナントを使用して開発する準備ができていることを確認します。\n\n### <a name=\"enable-sideloading-option\"></a>サイドローディング オプションを有効にする\n\nアプリを作成した後、アプリを配布せずにアプリTeams読み込む必要があります。 このプロセスはサイドローディングと呼ばれる。 このオプションを表示するには、Microsoft 365アカウントにサインインします。\n  \nテナントが既に存在し、管理者アクセス権を持っていますか? 本当に行うのか確認しましょう!\n\n次の手順でアプリをサイドロードTeams。\n\n1. クライアントで、[Teams] アイコン **を選択** します。\n1. [アプリ **の管理] を選択します**。\n1. カスタム アプリを作成する **アップロード探します**。 オプションが表示された場合は、サイドローディング アプリが有効になります。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"図は、カスタム アプリをアプリにアップロードするTeams。\":::\n\n    > [!NOTE]\n    > カスタム Teamsをアップロードするオプションが表示されていない場合は、管理者にTeamsしてください。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>開発者テナントに無料Teamsを作成する (オプション)\n\n開発者アカウントを持Teams場合は、無料で利用できます。 開発者プログラムMicrosoft 365参加してください。\n\n1. 開発者プログラムの[Microsoft 365に移動します](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. [今 **すぐ参加] を** 選択し、画面の指示に従います。\n1. ようこそ画面で **、[E5 サブスクリプションの設定] を選択します**。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"開発者プログラムにサインアップした後に表示されるMicrosoft 365例。\":::\n\n1. セットアップしTeams管理者アカウントを使用してサインインします。 カスタム アプリ オプションがアップロード **が設定** Teams。\n\n## <a name=\"get-a-free-azure-account\"></a>無料の Azure アカウントを取得する\n\nアプリをホストするか、Azure でリソースにアクセスする場合は、Azure サブスクリプションが必要です。 [開始する前に無料アカウント](https://azure.microsoft.com/free/) を作成します。\n\nこれで、すべてのツールが手に入り、アカウントを設定できます。 次に、開発環境をセットアップし、構築を開始しましょう。\n"
- title: タブ アプリのプロジェクト ワークスペースを作成する
  durationInMinutes: 1
  content: "このチュートリアルでは、.NET/Blazor を使用して最初のアプリを作成、実行Teams展開する手順について説明します。\n\nこのチュートリアルでは、次の情報を学習します。\n1. [新しいタブ プロジェクトを新しいタブ プロジェクトに設定するTeams Toolkit](#create-your-project)\n1. [アプリのディレクトリ構造について](#take-a-tour-of-the-source-code)\n\n## <a name=\"create-your-project\"></a>プロジェクトを作成する\n\nTeams ツールキットを使用して、最初のプロジェクトを作成します。\n\n1. 2019 Visual Studioを開きます。\n1. [新 **しいプロジェクトを作成する] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-select-project.png\" alt-text=\"図は、新しいプロジェクトを作成するオプションを示しています。\" border=\"false\":::\n\n1. [すべての **Microsoft Teams]** **ドロップダウン リストから [プロジェクトの種類] を** 選択します。  \n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-select-teams-app.png\" alt-text=\"図は、テンプレートを選択するオプションを示しています。\" border=\"false\":::\n\n1. [アプリ **Microsoft Teamsテンプレートとして** 選択し、[次へ] を **選択します**。\n    [ **新しいプロジェクトの構成]** 画面が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-configure-project.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n\n1. プロジェクトに適した名前を入力します。\n\n1. プロジェクト ワークスペースを作成するフォルダー パスを選択します。\n\n1. 作成するソリューションの名前を選択し、[次へ] を **選択します**。\n    [ **追加情報] 画面** が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-add-info-create.png\" alt-text=\"図は、追加情報を提供するオプションを示しています。\" border=\"false\":::\n\n1. アプリケーション名を入力します。\n\n1. 会社名を入力します。\n  アプリケーション名と会社名がエンド ユーザーに表示されます。\n\n1. **[作成]** を選択します。 \n    \n    アプリTeams数秒で作成されます。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-tab-app.png\" alt-text=\"図は、2019 年 2019 年に作成Visual Studio示しています。\" border=\"false\":::\n\n<details>\n<summary>アプリを作成する簡単なTeamsまとめです。</summary>\nアプリを作成するためのこの短い要約Teamsしてください。\n\n![アプリをTeamsする](~/assets/videos/blazor-tab-app.gif)\n</details>\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>ソース コードのツアーを開始する\n\nプロジェクトの作成後、基本的な個人用アプリを構築するためのコンポーネントがあります。 プロジェクト ディレクトリ構造は、2019 年のソリューション エクスプローラー領域Visual Studioできます。 \n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-app-solution-explorer.png\" alt-text=\"2019 年に個人用アプリのアプリ プロジェクト ファイルをVisual Studioスクリーンショット。\" border=\"false\":::\n\nこのTeams Toolkit選択した機能に基づいて、プロジェクトのスキャフォールディングを作成します。 その他のファイルの中で、Teams Toolkit保持されます。\n\n- アプリ アイコン: アプリ アイコンは PNG ファイルとして保存 `color.png` されます `outline.png` 。\n- `manifest.json`: 開発者ポータルを通じて発行するアプリ マニフェストは、Teamsに格納されます `Properties/manifest.json` 。\n- `BackendController.cs`: 認証を支援するためにバックエンド `Controllers/BackendController.cs` コントローラーが用意されています。\n\nこのTeams Toolkit基本タブに必要なすべてのコードを Blazor Server としてスキャフォールディングします。\n\n- `Pages/Tab.razor`: は、フロントエンド アプリケーションのエントリ ポイントです。\n- `TeamsFx.cs`and `JS/src/index.js` : は、ホストとの通信を初期化するためにTeamsされます。\n\n他のコントローラーをアプリケーションに追加することで ASP.NET Coreバックエンド機能を追加できます。\n"
- title: 最初のアプリをローカルでTeams実行する
  durationInMinutes: 1
  content: "プロジェクト ワークスペースをユーザー設定で設定したTeams Toolkit、タブ プロジェクトをビルドします。 アカウントにサインインするMicrosoft 365があります。\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>アカウントにサインインMicrosoft 365する\n\nプロジェクトを作成したら、次の方法でシングル サインオンをMicrosoft 365。\n\n1. [TeamsFx **Project**  >  **SSO 用**  >  **に構成する] を選択します**。\n1. プロンプトが表示されたら、Microsoft 365管理者アカウントにサインインします。\n\n## <a name=\"build-and-run-your-app\"></a>アプリの作成と実行\n\nアプリをローカルに構築して実行するには、以下のようにします。\n\n1. 2019 Visual Studioを開きます。 \n1. [**デバッグ**  >  **の開始デバッグ] を選択** するか **、[F5]** を選択してデバッグ モードでアプリを実行します。\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>デバッガーでアプリをローカルに実行した場合に発生することを説明します。</summary>\n\n    **[F5] を選択** すると、次のTeams Toolkit。\n\n    1. アプリケーションをアプリケーションに登録Azure Active Directory。\n    1. アプリケーションを \"サイドローディング\" に登録Microsoft Teams。\n    1. ローカルで実行されているアプリケーション バックエンドを開始します。\n    1. ローカルでホストされているアプリケーションフロントエンドを開始します。\n    1. アプリケーションMicrosoft Teams読み込むよう指示するコマンドTeams Web ブラウザーで開始します (URL はアプリケーション マニフェスト内に登録されます)。\n\n    </details>\n1. 要求された場合は、ローカル デバッグ用の自己署名証明書 SSL 証明書をインストールします。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"ローカル ホストからアプリケーションを読み込むTeams SSL 証明書をインストールするプロンプトを示すスクリーンショット。\":::\n\n    Teamsブラウザーに読み込まれます。\n1. クライアント **を開** くメッセージが表示されたら、[キャンセル] を選択してブラウザーにMicrosoft Teamsします。\n1. お使いの Microsoft 365 アカウントでサインインします。\n1. アプリ **をインストールするように** 求めるメッセージが表示されたら、[追加] をTeams。\n\n    これでご使用のアプリが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-completed-app.png\" alt-text=\"完了したアプリのスクリーンショット\":::\n\n    ブレークポイントの設定など、他の Web アプリケーションと同様に、通常のデバッグ アクティビティを実行できます。 このアプリはホット リロードをサポートしています。  プロジェクト内のファイルを変更すると、ページが再読み込みされます。\n\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>アプリがローカルで実行されていない場合のトラブルシューティング方法について説明します。</summary>\n\nアプリをアプリのサイドローディングTeamsするMicrosoft 365開発アカウントが必要です。 詳細については、「前提条件」セクションを参照してください。\n</details>\n"
- title: 最初のアプリをTeamsする
  durationInMinutes: 1
  content: "\nTab 機能を使用してアプリを作成、ビルド、および実行Teams学習しました。 最後の手順は、Azure にアプリを展開します。\n\nアプリを使用して、Azure に Tab 機能を持つ最初のアプリを展開Teams Toolkit。\n\n## <a name=\"deploy-your-app-to-azure\"></a>アプリを Azure に展開する\n\n展開は、次の 2 つの手順で構成されます。\n\n1. 必要なクラウド リソースが作成されます。 このプロセスは、プロビジョニングとも呼ばれる。\n1. コーディングを開始し、作成したクラウド リソースにアプリをコピーします。\n\n    > **プレビュー**\n    >\n    > Blazor アプリのサポートは、新しいTeams Toolkit。 プロビジョニングと展開は、2019 年と 2019 年Visual Studio開発者ポータルの組み合わせでTeams。\n\n## <a name=\"provision-and-deploy-your-app-to-azure-app-service\"></a>アプリのプロビジョニングと Azure App Service への展開\n\n1. ソリューション エクスプローラーで、プロジェクト ノードを右クリックし、[発行] を **選択します**。 [発行のビルド]**メニュー項目**  >  **を** 使用することもできます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-build-publish.png\" alt-text=\"プロジェクトの発行操作を選択する\" border=\"false\":::\n\n1. [ **発行] ウィンドウで [Azure]** **を** 選択し、[次へ **] を選択** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-publish.png\" alt-text=\"発行ターゲットとして Azure を選択する\" border=\"false\":::\n\n1. [Azure **App Service] (Windows) を選択し、[次へ]** を **選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-app-service.png\" alt-text=\"発行ターゲットとして Azure App Service を選択する\" border=\"false\":::\n\n1. 新 **+** しい App Service インスタンスを作成する場合に選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-app-subscription.png\" alt-text=\"新しいインスタンスを作成します。\" border=\"false\":::\n\n    [App **Service (Windows) ダイアログボックスに、[** 名前] 、[サブスクリプション **名**]  、[**リソース** グループ] 、および [ホスティング プラン] エントリ フィールドが設定されます。  App Service が既に実行されている場合は、既存の設定が選択されます。 新しいリソース グループとホスティング プランを作成できます。\n\n1. 準備 **ができたら、[** 作成] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-service-create-new.png\" alt-text=\"ホスティング プランとサブスクリプションの選択\" border=\"false\":::\n\n    [発行] ダイアログで、新しく作成されたインスタンスが自動的に選択されている **のが確認** できます。\n\n1. 準備 **ができたら、[** 完了] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-app-instance.png\" alt-text=\"新しいインスタンスを選択します。\" border=\"false\":::\n\n1. [展開モード **] の** 横にある [編集] (鉛筆) アイコン **を選択します**。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-deploy-mode.png\" alt-text=\"展開モードを選択します。\" border=\"false\":::\n      \n      [発行] ダイアログが表示されます。\n\n1. [ **展開モード] として [自己格納型** ] **を選択し**、[保存] を **選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-setting.png\" alt-text=\"[自己格納型展開モード] を選択します。\" border=\"false\":::\n\n1. [**発行**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish.png\" alt-text=\"アプリをアプリ サービスに発行する\" border=\"false\":::\n\n      Visual Studio 2019 では、アプリが Azure App Service に展開され、Web アプリがブラウザーに読み込まれます。  \n\n1. URL `/tab` の末尾に追加して、ページを表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-tab-app.png\" alt-text=\"Blazor タブ アプリ\" border=\"false\":::\n\n    サイト **の [ホスティング**] ウィンドウ **の [** 発行Visual Studioサイトの URL などの詳細が表示されます。 \n  \n1. サイト URL **の横** にある [コピー] アイコンを選択し、テキスト ファイルに保存します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-site-url.png\" alt-text=\"Blazor アプリ サイトの URL\" border=\"false\":::\n"
- title: アプリをプレビューしてテストTeams
  durationInMinutes: 1
  content: "\n開発者ポータルを使用して、アプリをプレビューし、アプリ環境で公開Teamsできます。\n\n## <a name=\"create-an-environment-for-your-app\"></a>アプリの環境を作成する\n\nアプリのタブTeams環境が読み込まれる場所を管理する開発者 **ポータル** です。  \n\n### <a name=\"to-create-an-environment\"></a>環境を作成するには\n\n1. 開発者ポータルを開き、Teams。 \n1. 管理者アカウントを使用Microsoft 365サインインします。\n\n1. サイドバー **で [アプリ** ] を見つけて選択します。\n\n1. 表示されるリストからアプリを選択します。\n\n1. [環境 **] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-create-env.png\" alt-text=\"環境の選択\" border=\"false\":::\n\n1. [最初 **の環境を作成する] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-add-env.png\" alt-text=\"[新しい環境の追加] を選択する\" border=\"false\":::\n\n1. 環境の名前を入力し、[追加] を **選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-env-name.png\" alt-text=\"新しい環境名を追加する\" border=\"false\":::\n\n1. [最初 **の環境変数を作成する] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-create-env-var.png\" alt-text=\"新しい環境変数の追加\" border=\"false\":::\n\n1. 名前 `azure_app_url` として入力 **します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-add-variable.png\" alt-text=\"環境変数の作成\" border=\"false\":::\n\n1. 値を指定せずに Azure サイトの URL `https://` を **入力します**。 [発行] ダイアログの [ホスティング] ウィンドウで説明した URL を使用します。 \n\n1. **[追加]** を選択します。\n  \n    環境が追加されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-azure-url-added.png\" alt-text=\"環境変数の作成\" border=\"false\":::\n\n## <a name=\"update-the-app-manifest\"></a>アプリ マニフェストを更新します。\n\nアプリ マニフェストは、URL からタブを読み込 `localhost` む。 作成した環境にリストされている URL からタブを読み込むアプリ マニフェストを構成します。\n\nアプリ マニフェストを更新するには、次の方法を実行します。\n- [Web サイトの URL を更新する](#update-website-url)\n- [タブ機能を構成する](#configure-the-tab-capability)\n- [アプリのシングル サインオンを構成する](#configure-single-sign-on-for-your-app)\n\n### <a name=\"update-website-url\"></a>Web サイトの URL を更新する\n\n1. サイドバーから **[基本情報]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments3.png\" alt-text=\"基本情報の選択\":::\n\n    これは、[基本情報] ウィンドウで指定された URL の `localhost:XXXXX` 一部として **記載** されています。\n\n1. Web サイト (有効な HTTPS URL である必要があります) およびアプリ URL の中かっこを含む、すべての出現箇所を 、中かっこで置 `localhost:XXXXX` `{{azure_app_url}}` **き換えてください**。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments4.png\" alt-text=\"環境の基本情報を調整する\":::\n\n1. 置換 **が完了したら** 、[保存] を選択します。\n  \n    これで、環境変数に保存した URL から実行するようにアプリが構成されました。\n\n### <a name=\"configure-the-tab-capability\"></a>タブ機能を構成する\n\n1. サイドバーから **[アプリの機能** ] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments5.png\" alt-text=\"機能の選択\":::\n\n1. [個人用 **] タブを選択します**。\n1. [個人用] タブの横にある 3 つの **ドットを選択し、[** 編集] を **選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments6.png\" alt-text=\"個人用タブ設定の編集\":::\n\n1. URL を [コンテンツ URL] フィールドと [Web サイト **URL]** フィールドの環境変数 **に置き換** えます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments7.png\" alt-text=\"個人用タブ URL の編集\":::\n\n1. **[更新]** を選択します。\n\n1. **[保存]** を選択します。\n  \n  タブは、Azure URL から実行するように構成されています。\n\n### <a name=\"configure-single-sign-on-for-your-app\"></a>アプリのシングル サインオンを構成する\n\n1. サイドバー **から [シングル サインオン** ] を選択します。\n\n1. アプリケーション `localhost` ID URI 内の **値を . に置き** 換える `{{azure_app_url}}` 。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-sso.png\" alt-text=\"シングル サインオンアプリケーション ID URI の編集\":::\n\n1. **[保存]** を選択します。\n\n1. サイドバーで、[ドメイン] **を選択します**。\n\n1. [**ドメインの追加**] を選択します。\n\n1. 有効な `{{azure_app_url}}` ドメインとしてリストされている場合は、確認します。 有効でない場合は、有効なドメインとして追加します。 次に、[追加] **を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-domain.png\" alt-text=\"ドメインの追加\":::\n\n  これでマニフェスト ファイルが更新されました。 ページの上部にある **[プレビュー Teams]** オプションを使用して、アプリをアプリで起動Teams。"
