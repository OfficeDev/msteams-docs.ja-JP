### YamlMime:Tutorial
title: Blazor を使用して初めてのアプリを構築する
metadata:
  title: Blazor を使用したHello World
  description: このチュートリアルでは、Blazor を使用してHello World アプリをビルドし、C# を使用して対話型 Web UI を構築し、タブ アプリとボット アプリを作成する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 04/03/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 開始の概要に戻る
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: b6e588c81a79ed3b7dbab81a1e4e3e15d1d0bfa2
  ms.sourcegitcommit: c7fbb789b9654e9b8238700460b7ae5b2a58f216
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 06/29/2022
  ms.locfileid: "66484241"
items:
- durationInMinutes: 1
  content: "\nBlazor を使用すると、JavaScript の代わりに C# を使用して対話型 Web UI を構築できます。 \n\nBlazor と Visual Studio の最新バージョンを使用して、タブ アプリとボット アプリを作成できます。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/blazor/your-blazor-helloworld-app.png\" alt-text=\"このアプリを示す図には、タブとボットの 2 つの機能があります。\" border=\"true\":::\n\n> [!NOTE]\n> 現時点では、Teams Toolkit はメッセージ拡張機能機能をサポートしていません。\n"
- title: 前提条件
  durationInMinutes: 1
  content: "\nアプリのビルドとデプロイに必要なツールの一覧を次に示します。\n\n| &nbsp;    | インストール   | 使用するには... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio バージョン 17.2.0 プレビュー 2.1](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=enterprise&ch=pre&rel=17)|  Visual Studio Enterprise 2022 プレビュー (バージョン 17.2.0 プレビュー 2.1) を選択します。 |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/download-app) | Microsoft Teams を使用して、チャット、会議、通話用のアプリを通じて共同作業を行うすべてのユーザーと 1 か所で共同作業を行うことができます。 |\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (推奨) または [Google Chrome](https://www.google.com/chrome/) | 開発者ツールを備えたブラウザー。 |\n\n\n## <a name=\"prepare-development-environment\"></a>開発環境を準備する\n\n必要なツールをインストールしたら、開発環境を設定します。\n\n### <a name=\"install-microsoft-teams-toolkit\"></a>Microsoft Teams Toolkit をインストールする\n\nTeams Toolkit を使用すると、アプリのクラウド リソースのプロビジョニングとデプロイ、Teams ストアへの公開などを行うツールにより、開発プロセスを簡略化できます。 このツールキットは Visual Studio で使用することも、CLI (呼び出し) `teamsfx`として使用することもできます。 \n\n# <a name=\"latest-version-of-the-visual-studio\"></a>[Visual Studio の最新バージョン](#tab/vs)\n\nVisual Studio の最新バージョンを使用して、.NET で Blazor Server を使用して Teams アプリを開発できます。\n\nMicrosoft Teams Toolkit 拡張機能をインストールするには:\n\n1. Visual Studio の最新バージョンをダウンロードします。\n1. ダウンロード フォルダーから開きます `vs_enterprise__3bed52501a604464b1eff2ce580fd4eb.exe` 。\n1. **Visual Studio インストーラー** ページで **[続行**] を選択してインストールを構成します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/visual-studio-installer.png\" alt-text=\"[続行] を選択してインストールを構成する\" border=\"true\":::  \n\n1. ワークロード **の下で ASP.NET と Web 開発** を選択します。\n\n1. **Microsoft Teams 開発ツールを選択します**。\n   \n1. [**インストール**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs.install.png\" alt-text=\"図は、Microsoft 開発ツールをインストールするオプションを示しています。\" border=\"true\":::  \n   \n Visual Studio は数分でインストールされます。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nTeamsFx CLI をインストールするには、`npm` パッケージ マネージャーを使用します。\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\n構成によっては、CLI をインストールするために `sudo` を使用しなければならないこともあります。\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nLinux および macOS システムではこの条件はより一般的です。\n\nnpm グローバル キャッシュが PATH に追加されていることを確認します。 この手順は通常、Node.js インストーラーの一部として行われます。  \n\nCLI で `teamsfx` コマンドを指定して使用できます。 `teamsfx -h` を実行して、このコマンドが動作していることを確認します。\n\n> [!CAUTION]\n> PowerShell ターミナルで TeamsFx を実行する前に、PowerShell で \"remote signed\" 実行ポリシーを有効にする必要があります。\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Teams 開発テナントを設定する\n\n**テナント** とは、チャット、ファイルの共有、会議の実行を行う Teams の組織のスペースまたはコンテナーのようなものです。 このスペースは、アプリをサイドロードしてテストする場所でもあります。 テナントを使って開発する準備ができているかどうかを確認しましょう。\n\n### <a name=\"enable-sideloading-option\"></a>サイドローディングのオプションを有効にする\n\nアプリを作成したら、アプリを配布せずに Teams に読み込む必要があります。 このプロセスはサイドローディングと呼ばれます。 このオプションを表示するには、Microsoft 365 アカウントにサインインします。\n  \n既にテナントがあり、管理者アクセス権がありますか? 実際にそうかどうかを確認しましょう。\n\nTeams でアプリをサイドロードできるかどうかを確認します。\n\n1. Teams クライアントで、**[Store]** アイコンを選択します。\n1. **[アプリの管理]** を選択します。\n1. **[カスタム アプリのアップロード]** オプションを探します。 オプションが表示された場合は、アプリのサイドローディングが有効です。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"図は、Teams でカスタム アプリをアップロードするオプションを示しています。\":::\n\n    > [!NOTE]\n    > Teams にカスタム アプリをアップロードするオプションが表示されない場合は、Teams 管理者に接続します。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>無料の Teams 開発者テナントを作成する (省略可能)\n\nTeams 開発者アカウントをお持ちでない場合は、無料で入手できます。 Microsoft 365 開発者プログラムに参加します。\n\n1. [Microsoft 365 開発者プログラム](https://developer.microsoft.com/microsoft-365/dev-program)に移動します。\n1. **[今すぐ参加]** を選択し、画面の指示に従います。\n1. ようこそ画面で、**[E5 サブスクリプションの設定]** を選択します。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Microsoft 365 開発者プログラムにサインアップした後に表示される内容の例\":::\n\n1. 設定した管理者アカウントを使用して Teams にサインインします。 Teams に **[カスタム アプリのアップロード]** オプションがあることを確認します。\n\n## <a name=\"get-a-free-azure-account\"></a>無料の Azure アカウントを取得します。\n\nアプリをホストする場合、または Azure でリソースにアクセスする場合は、Azure サブスクリプションが必要です。開始する前に、[無料アカウントを作成](https://azure.microsoft.com/free/) してください。\n\nこれで、すべてのツールを取得し、アカウントを設定しました。 次に、開発環境を設定し、ビルドを開始しましょう。\n"
- title: タブ アプリ用のプロジェクト ワークスペースを作成する
  durationInMinutes: 1
  content: "最初のアプリを作成して Teams アプリ開発を開始します。 このアプリは、タブ機能を使用します。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/blazor/your-blazor-helloworld-app1.png\" alt-text=\"このアプリを示す図には、1 つの機能があります。タブが強調表示されています。\" border=\"false\":::    \n\nこのチュートリアルでは、.NET/Blazor を使用して最初の Teams アプリを作成、実行、デプロイする手順について説明します。\n\nこのセクションでは、次の情報を学習できます。\n\n1. [Teams Toolkit を使用して新しいタブ プロジェクトを設定する方法](#create-your-tab-project)\n1. [アプリのディレクトリ構造について](#take-a-tour-of-the-source-code-for-teams-tab-app)\n\n## <a name=\"create-your-tab-project\"></a>タブ プロジェクトを作成する\n\nTeams Toolkit を使用して最初のプロジェクトを作成します。 ツールキットを使用すると、Teams アプリ プロジェクトを作成および構成するための一連のページが表示されます。\n\n1. **新しいプロジェクト ページの作成** : プロジェクトの種類を選択します。\n1. **新しいプロジェクト ページを構成** する: プロジェクトの詳細を入力します。\n1. **新しい Teams アプリケーション ページを作成** する: Teams アプリの機能を選択します。\n\n**タブ プロジェクト ワークスペースを作成するには**\n\n1. Visual Studio の最新バージョンを開きます。\n\n1. [ **新しいプロジェクトの作成**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-project.png\" alt-text=\"図は、新しいプロジェクトを作成するオプションを示しています。\" border=\"false\":::\n\n    [ **新しいプロジェクトの作成]** ページが表示されます。\n\n1. プロジェクトの詳細を選択します。\n\n     プロジェクトの種類を選択します。\n\n      1. **[すべてのプラットフォーム**] ドロップダウン リストから **Microsoft Teams を** 選択します。  \n    \n      1. テンプレートとして **Microsoft Teams アプリ** を選択します。\n\n      1. **[次へ]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-teams-app.png\" alt-text=\"図は、テンプレートを選択するオプションを示しています。\" border=\"false\":::\n    \n      [ **新しいプロジェクトの構成]** ページが表示されます。\n\n1.  新しいプロジェクトの詳細を構成します。     \n\n      次のプロジェクト構成を選択します。\n\n      1. プロジェクトに適した名前を入力します。\n\n          > [!NOTE] \n          > 入力したプロジェクト名は **、ソリューション** 名としても自動的に入力されることに注意してください。 必要に応じて、プロジェクト名に影響を与えずにソリューション名を変更できます。\n\n      1. プロジェクト ワークスペースを作成するフォルダー パスを選択します。\n\n      1. 必要に応じて、別のソリューション名を入力します。\n\n      1. 必要に応じて、プロジェクトとソリューションを同じフォルダーに保存するオプションをオンにします。 このチュートリアルでは、このオプションは必要ありません。\n\n      1. **[作成]** を選択します。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-new-project.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n\n      [ **新しい Teams アプリケーションの作成** ] ページが表示されます。  \n\n1.  Teams アプリ機能を選択します。 \n      \n    アプリの機能を選択します。\n\n    1. アプリの機能として **Tab アプリ** を選択します。\n\n    1. **[作成]** を選択します。      \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-tab.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n    \n    Teams タブ アプリは数秒で作成されます。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/vs-tab-app.png\" alt-text=\"図は、Visual Studio で作成されたアプリ プロジェクトを示しています。\" border=\"false\":::\n    \n\n<details>\n<summary>Teams タブ アプリの作成の簡単な要約。</summary>\nTeams タブ アプリを作成するための簡単な要約をご覧ください。\n\n![Teams アプリを作成する](~/assets/videos/blazorapp.gif)\n</details>\n\n## <a name=\"take-a-tour-of-the-source-code-for-teams-tab-app\"></a>Teams タブ アプリのソース コードのツアーに参加する\n\nプロジェクトが作成されると、基本的な個人用アプリをビルドするためのコンポーネントが準備できたことになります。 プロジェクト ディレクトリ構造は、最新の Visual Studio の **ソリューション エクスプローラー** 領域で表示できます。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/blazor-app-solution-explorer.png\" alt-text=\"最新の Visual Studio で個人用アプリのアプリ プロジェクト ファイルを示すスクリーンショット。\" border=\"false\":::\n\nTeams Toolkit では、選択した機能に基づいて、プロジェクトのスキャフォールディングが作成されます。 他のファイルの中でも、Teams Toolkit では次の内容が維持されます。\n\n| フォルダー名 | コンテンツ |\n| --- | --- |\n| アプリのアイコン | アプリ アイコンは PNG ファイルとして `color.png` と `outline.png` に格納されます。 |\n| プロパティ/`manifest.json` | Teams 用開発者ポータルを使用して発行するためのアプリ マニフェストは、次の場所に `Properties/manifest.json`格納されます。 |\n| コントローラー/`BackendController.cs` | 認証を支援するためにバックエンド コントローラーが用意されています `Controllers/BackendController.cs` 。 |\n| `Pages/Tab.razor` | Teams 用開発者ポータルを使用して発行するためのアプリ マニフェストは、次の場所に `Properties/manifest.json`格納されます。 |\n| `TeamsFx.cs` と `JS/src/index.js` | コンテンツは、Teams ホストとの通信を初期化するために使用されます。 |\n\nバックエンド機能を追加するには、他の ASP.NET Core コントローラーをアプリケーションに追加します。\n"
- title: 最初の Teams タブ アプリをビルドして実行する
  durationInMinutes: 1
  content: "Teams Toolkit を使用してプロジェクト ワークスペースを設定したら、次にタブ プロジェクトをビルドします。\n\nアプリをビルドして実行するには:\n\n1. **[Project** > **Teams Toolkit** > **Configure your Microsoft Teams**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-msteamsapp.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1. Microsoft 365 アカウントを選択するか **、サインインするアカウントを追加** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/M365-account.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1. **デバッグ** > **開始デバッグを** 選択するか **、F5** を選択して、デバッグ モードでアプリを実行します。\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>デバッガーでアプリをローカルに実行した場合に発生することを説明します。</summary>\n\n    **F5** を選択すると、Teams Toolkit:\n\n    1. Azure Active Directory にアプリケーションを登録します。\n    1. Teams でアプリケーションを \"サイドローディング\" に登録します。\n    1. ローカルで実行されているアプリケーション バックエンドを開始します。\n    1. ローカルでホストされているアプリケーション フロントエンドを開始します。\n    1. アプリケーションをサイド ロードするように Teams に指示するコマンドを使用して、Web ブラウザーで Teams を起動します (URL はアプリケーション マニフェスト内に登録されます)。\n\n    </details>\n\n1. 要求された場合は、ローカル デバッグ用の自己署名証明書をインストールします。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Teams が localhost からアプリケーションを読み込むことができるように SSL 証明書をインストールするように求めるメッセージを示すスクリーンショット。\":::\n\n    Teams は Web ブラウザーに読み込まれます。\n    \n1. アプリを Teams にインストールするように求められたら、[ **追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-add-app.png\" alt-text=\"Teams Web クライアントにアプリを追加する方法を示すスクリーンショット\" border=\"true\":::\n\n   おめでとうございます。最初のタブ アプリはローカル環境で実行されています。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/app-local.png\" alt-text=\"完了したアプリのスクリーンショット\" border=\"true\":::\n\n1. ページ内を移動して、ユーザーの詳細を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/authorize-user-info.png\" alt-text=\"ユーザー情報にアクセスするための [承認] ボタンのスクリーンショット\" border=\"true\":::\n\n1. **[承認]** を選択して、Microsoft Graph を使用してアプリがユーザーの詳細を取得できるようにします。\n\n    アプリは、ユーザーの詳細を表示するためのアクセス権を付与するアクセス許可を要求します。    \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/ms-graph-permission.png\" alt-text=\"ユーザー情報にアクセスするためのアクセス許可を受け入れる方法を示すスクリーンショット\" border=\"true\":::\n\n1. **[同意する]** を選択して、アプリがユーザーの詳細情報にアクセスできるようにします。\n\n    写真と詳細が **個人用タブ** に表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/tab-user-info.png\" alt-text=\"タブにユーザー情報を表示するスクリーンショット\" border=\"true\":::\n\n    他の Web アプリケーションと同様に、プレークポイントの設定など通常のデバッグ作業を行うことができます。 このアプリはホット リロードをサポートしています。  プロジェクト内のファイルを変更すると、ページが再読み込みされます。\n\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>アプリがローカルで実行されない場合のトラブルシューティング方法について説明します。</summary>\n\nTeams でアプリを実行するには、アプリのサイドローディングを許可する Microsoft 365 開発アカウントが必要です。 詳細については、「前提条件」セクションを参照してください。\n</details>\n"
- title: 最初の Teams タブ アプリをプレビューする
  durationInMinutes: 1
  content: "\nタブ機能を使用して Teams アプリを作成、ビルド、実行する方法を学習しました。 最後の手順は、Azure にアプリをデプロイし、Teams でプレビューすることです。 内容は次のとおりです。\n\n1. [クラウドでタブ アプリをプロビジョニングする: クラウド](#to-provision-your-tab-app-in-the-cloud)でタブ アプリをプロビジョニングできます。\n1. [タブ アプリをクラウドにデプロイする](#to-deploy-your-tab-app-to-cloud): タブ アプリをクラウドにデプロイできます。 \n1. [Teams でタブ アプリをプレビュー](#to-preview-your-tab-app-in-teams)する: タブ アプリが Teams で開きます。 \n\nTeams Toolkit を使用して、タブ機能を備えた最初のアプリを Azure にデプロイしましょう。\n\n#### <a name=\"to-provision-your-tab-app-in-the-cloud\"></a>**クラウドでタブ アプリをプロビジョニングするには**\n\n1. クラウドで **Project** > **Teams Toolkit** > **のプロビジョニングを** 選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-provision.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1. **[プロビジョニング**] ダイアログで次のように入力します。\n\n   1. **サブスクリプション名**: Visual Studio Enterprise サブスクリプション。 </br>\n   1. **リソース グループ**: **[新規** ] を選択して、アプリ用に生成されたリソース グループを追加します。</br>\n   1. リージョンを選択 **します**。\n   1. [ **プロビジョニング**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-subscription.png\" alt-text=\"プロジェクトのサブスクリプション操作を選択する\" border=\"true\":::\n\n    プロビジョニングの警告が表示されます。 \n\n1. [ **プロビジョニング**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-warning.png\" alt-text=\"プロビジョニングを選択する\" border=\"true\":::\n\n    リソース グループがクラウドでプロビジョニングされるまで数分かかります。 \n    \n1. プロビジョニングが完了したら、[OK] を選択 **します**。 \n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-complete.png\" alt-text=\"リソース グループが生成される\" border=\"true\":::\n\n1. [**プロビジョニングされたリソースの表示**] を選択して、Azure portalに表示します。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/view-resource.png\" alt-text=\"リソース グループが生成される\" border=\"true\":::\n\n1. サインイン プロンプトでAzure portal アカウントにサインインします。 \n\n    app-dev-rg が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/app-dev-rg-azure.png\" alt-text=\"Azure で表示する\" border=\"true\":::\n\n    リソースはAzure portalでプロビジョニングされます。\n\n#### <a name=\"to-deploy-your-tab-app-to-cloud\"></a>**タブ アプリをクラウドにデプロイするには**\n\n1. **Project** > **Teams Toolkit** > **Deploy to the Cloud を** 選択します。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-deploytocloud.png\" alt-text=\"クラウドへのデプロイを選択する\" border=\"true\":::\n\n1. **[OK]** をクリックします。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-success.png\" alt-text=\"クラウドへのデプロイを選択する\" border=\"true\":::\n\n    タブ アプリがクラウドに正常にデプロイされました。\n\n#### <a name=\"to-preview-your-tab-app-in-teams\"></a>**Teams でタブ アプリをプレビューするには**    \n\n1. **Project** > **Teams Toolkit** > **プレビュー Teams アプリを選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-preview.png\" alt-text=\"プレビューを選択する\" border=\"false\":::\n\n1. アプリを Teams にインストールするように求められたら、[ **追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-add-app.png\" alt-text=\"Teams Web クライアントにアプリを追加する方法を示すスクリーンショット。\":::\n\n    おめでとうございます。最初のタブ アプリは Azure 環境で実行されています。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-tab-app-azure.png\" alt-text=\"完了したアプリのスクリーンショット\" border=\"true\":::\n\n1. ページ内を移動して、ユーザーの詳細を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/authorize-user-info.png\" alt-text=\"ユーザー情報にアクセスするための [承認] ボタンのスクリーンショット\" border=\"true\":::\n\n1. **[承認]** を選択して、Microsoft Graph を使用してアプリがユーザーの詳細を取得できるようにします。\n\n    アプリは、ユーザーの詳細を表示するためのアクセス権を付与するアクセス許可を要求します。    \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/ms-graph-permission.png\" alt-text=\"ユーザー情報にアクセスするためのアクセス許可を受け入れる方法を示すスクリーンショット\" border=\"true\":::\n\n1. **[同意する]** を選択して、アプリがユーザーの詳細情報にアクセスできるようにします。\n\n    写真と詳細が **個人用タブ** に表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure-user-info.png\" alt-text=\"タブにユーザー情報を表示するスクリーンショット\" border=\"true\":::\n"
- title: ボット アプリ用のプロジェクト ワークスペースを作成する
  durationInMinutes: 1
  content: "最初のアプリを作成して Teams アプリ開発を開始します。 このアプリでは、ボット機能を使用します。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/blazor/your-helloworld-app-bot.png\" alt-text=\"このアプリを示す図には、1 つの機能があります。タブが強調表示されています。\" border=\"false\":::    \n\nこのチュートリアルでは、.NET/Blazor を使用して最初の Teams アプリを作成、実行、デプロイする手順について説明します。\n\nこのセクションでは、次の情報を学習できます。\n\n1. [Teams Toolkit を使用して新しいボット プロジェクトを設定する方法](#create-your-bot-project)\n1. [アプリのディレクトリ構造について](#take-a-tour-of-the-source-code-for-teams-bot-app)\n\n## <a name=\"create-your-bot-project\"></a>ボット プロジェクトを作成する\n\nTeams Toolkit を使用して最初のプロジェクトを作成します。 ツールキットを使用すると、Teams アプリ プロジェクトを作成および構成するための一連のページが表示されます。\n\n1. **新しいプロジェクト ページの作成** : プロジェクトの種類を選択します。\n1. **新しいプロジェクト ページを構成** する: プロジェクトの詳細を入力します。\n1. **新しい Teams アプリケーション ページを作成** する: Teams アプリの機能を選択します。\n\n**ボット プロジェクト ワークスペースを作成するには**\n\n1. Visual Studio の最新バージョンを開きます。\n\n1. [ **新しいプロジェクトの作成**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-project.png\" alt-text=\"図は、新しいプロジェクトを作成するオプションを示しています。\" border=\"false\":::\n\n    [ **新しいプロジェクトの作成]** ページが表示されます。\n\n1. プロジェクトの詳細を選択します。\n\n      プロジェクトの種類を選択します。\n\n      1. **[すべてのプラットフォーム**] ドロップダウン リストから **Microsoft Teams を** 選択します。  \n    \n      1. テンプレートとして **Microsoft Teams アプリ** を選択します。\n\n      1. **[次へ]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/vs-select-teams-app.png\" alt-text=\"図は、テンプレートを選択するオプションを示しています。\" border=\"false\":::\n\n      [ **新しいプロジェクトの構成]** ページが表示されます。\n\n1.  新しいプロジェクトの詳細を構成します。  \n\n      次のプロジェクト構成を選択します。\n\n      1. プロジェクトに適した名前を入力します。\n\n          > [!NOTE] \n          > 入力したプロジェクト名は **、ソリューション** 名としても自動的に入力されることに注意してください。 必要に応じて、プロジェクト名に影響を与えずにソリューション名を変更できます。\n\n      1. プロジェクト ワークスペースを作成するフォルダー パスを選択します。\n\n      1. 必要に応じて、別のソリューション名を入力します。\n\n      1. 必要に応じて、プロジェクトとソリューションを同じフォルダーに保存するオプションをオンにします。 このチュートリアルでは、このオプションは必要ありません。\n\n      1. **[作成]** を選択します。   \n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-new-project-bot.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n\n      [ **新しい Teams アプリケーションの作成** ] ページが表示されます。  \n\n1.  Teams アプリ機能を選択します。 \n\n    アプリの機能を選択します。 \n\n    1. アプリの機能として **ボット アプリ** を選択します。\n\n    1. **[作成]** を選択します。     \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-bot.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n\n    Teams ボット アプリは数秒で作成されます。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-bot-app-team.png\" alt-text=\"図は、最新の Visual Studio で作成されたアプリ プロジェクトを示しています。\" border=\"false\":::\n    \n\n<details>\n<summary>Teams ボット アプリの作成の簡単な要約。</summary>\nTeams ボット アプリを作成するための簡単な要約をご覧ください。\n\n![Teams アプリを作成する](~/assets/videos/botapp.gif)\n</details>\n\n## <a name=\"take-a-tour-of-the-source-code-for-teams-bot-app\"></a>Teams ボット アプリのソース コードのツアーに参加する\n\nプロジェクトが作成されると、基本的な個人用アプリをビルドするためのコンポーネントが準備できたことになります。 プロジェクト ディレクトリ構造は、最新の Visual Studio の **ソリューション エクスプローラー** 領域で表示できます。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/blazor-appbot-solution-explorer.png\" alt-text=\"最新の Visual Studio で個人用アプリのアプリ プロジェクト ファイルを示すスクリーンショット。\" border=\"false\":::\n\nTeams Toolkit では、選択した機能に基づいて、プロジェクトのスキャフォールディングが作成されます。 他のファイルの中でも、Teams Toolkit では次の内容が維持されます。\n\n| フォルダー名 | コンテンツ |\n| --- | --- |\n| アプリのアイコン | アプリ アイコンは PNG ファイルとして `color.png` と `outline.png` に格納されます。 |\n| プロパティ/`manifest.json` | Teams 用開発者ポータルを使用して発行するためのアプリ マニフェストは、次の場所に `Properties/manifest.json`格納されます。 |\n| コントローラー/`BackendController.cs` | 認証を支援するためにバックエンド コントローラーが用意されています `Controllers/BackendController.cs` 。 |\n| `TeamsFx.cs` と `JS/src/index.js` | コンテンツは、Teams ホストとの通信を初期化するために使用されます。 |\n\nバックエンド機能を追加するには、他の ASP.NET Core コントローラーをアプリケーションに追加します。\n"
- title: 最初のボット アプリをビルドして実行する
  durationInMinutes: 1
  content: "\nアプリをローカルに構築して実行するには、以下のようにします。\n\n1. **[Project** > **Teams Toolkit** > **Configure your Microsoft Teams**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-msteamsapp.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1. Microsoft 365 アカウントを選択するか **、サインインするアカウントを追加** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/M365-account.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1.  ngrok またはコマンド プロンプトを使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n    ```bash\n    ngrok http -host-header=localhost 2544\n    ```\n\n 1. **デバッグ** > **開始デバッグを** 選択するか **、F5** を選択して、デバッグ モードでアプリを実行します。\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>デバッガーでアプリをローカルに実行した場合に発生することを説明します。</summary>\n\n    **F5** を選択すると、Teams Toolkit:\n\n    1. Azure Active Directory にアプリケーションを登録します。\n    1. Teams でアプリケーションを \"サイドローディング\" に登録します。\n    1. ローカルで実行されているアプリケーション バックエンドを開始します。\n    1. ローカルでホストされているアプリケーション フロントエンドを開始します。\n    1. アプリケーションをサイド ロードするように Teams に指示するコマンドを使用して、Web ブラウザーで Teams を起動します (URL はアプリケーション マニフェスト内に登録されます)。\n\n    </details>\n    \n    >[!NOTE]\n    > アプリを初めて実行すると、すべての依存関係がダウンロードされ、アプリがビルドされます。 ビルドが完了すると、自動的にブラウザー ウィンドウが開きます。 この処理には 3 ～ 5 分かかります。\n\n    Web ブラウザーでアプリの実行が開始されます。\n\n1. ローカル マシン上の Teams にアプリをサイドロードするように求められたら、**[追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/add-bot.png\" alt-text=\"ボットが Teams クライアントに追加されていることを示すスクリーンショット。\":::\n\n    これで、ボットは Teams で正常に実行されるようになりました。 アプリが読み込まれると、ボットを使用したチャット セッションが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/bot-running.png\" alt-text=\"ボットが Teams クライアントで実行されていることを示すスクリーンショット。\" border=\"true\":::\n\n    `welcome` を入力すると概要カードが表示され、`learn` と入力するとアダプティブ カードとボット コマンド ドキュメントが示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/bot-welcome.png\" alt-text=\"Teams クライアント上のボットのウェルカム カードを示すスクリーンショット。\" border=\"true\":::       \n\n     他の Web アプリケーションと同様に、プレークポイントの設定など通常のデバッグ作業を行うことができます。 このアプリはホット リロードをサポートしています。  プロジェクト内のファイルを変更すると、ページが再読み込みされます。\n     \n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>アプリがローカルで実行されない場合のトラブルシューティング方法について説明します。</summary>\n\n  Teams でアプリを正常に実行するには、Teams アカウントでサイドローディングが有効になっていることを確認します。 「前提条件」セクションで、サイドローディングの詳細について確認できます。\n"
- title: 最初のボット アプリをプレビューする
  durationInMinutes: 1
  content: "\nボット機能を使用して Teams アプリを作成、ビルド、実行することを学習しました。 最後の手順は、Azure にアプリをデプロイし、Teams でプレビューすることです。 内容は次のとおりです。\n\n1. [クラウドでボット アプリをプロビジョニングする: クラウド](#to-provision-your-bot-app-in-the-cloud)でボット アプリをプロビジョニングできます。\n1. [ボット アプリをクラウドにデプロイする](#to-deploy-your-bot-app-to-cloud): ボット アプリをクラウドにデプロイできます。 \n1. [Teams でボット アプリをプレビュー](#to-preview-your-bot-app-in-teams)する: ボット アプリは Teams で開きます。 \n\nTeams Toolkit を使用して Azure に最初のボット アプリをデプロイしましょう。\n\n#### <a name=\"to-provision-your-bot-app-in-the-cloud\"></a>**クラウドでボット アプリをプロビジョニングするには**\n\n1. クラウドで **Project** > **Teams Toolkit** > **のプロビジョニングを** 選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure-app.png\" alt-text=\"クラウドでのプロビジョニング\" border=\"false\":::\n\n1. **[プロビジョニング**] ダイアログで次のように入力します。\n\n    1. **サブスクリプション名**: TTL を使用した Teams Cloud - Dev Test = 3 日間。 </br>\n    1. **リソース グループ**: **[新規** ] を選択して、アプリ用に生成されたリソース グループを追加します。</br>\n    1. リージョンを選択 **します**。\n    1. [ **プロビジョニング**] を選択します。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-azure.png\" alt-text=\"[プロビジョニングの編集] ウィンドウ\" border=\"false\":::\n\n       プロビジョニングの警告が表示されます。 \n\n1. [ **プロビジョニング**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/permission-azure.png\" alt-text=\"警告\" border=\"false\":::\n\n   リソース グループがクラウドでプロビジョニングされるまで数分かかります。\n    \n1. プロビジョニングが完了したら、[OK] を選択 **します**。 \n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/apppackage1-azure.png\" alt-text=\"アクセス許可 OK\" border=\"false\":::\n\n1. [**プロビジョニングされたリソースの表示**] を選択して、Azure portalに表示します。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/view-resource-azure.png\" alt-text=\"プロビジョニングされたリソース\" border=\"false\":::\n\n1. サインイン プロンプトでAzure portal アカウントにサインインします。 \n\n    app-dev-rg が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure.png\" alt-text=\"作成された Azure アプリ\" border=\"true\":::\n\n    リソースはAzure portalでプロビジョニングされます。\n\n#### <a name=\"to-deploy-your-bot-app-to-cloud\"></a>**ボット アプリをクラウドにデプロイするには**\n\n 1. **Project** > **Teams Toolkit** > **Deploy to the Cloud を** 選択します。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-to-cloud-azure.png\" alt-text=\"クラウドにデプロイする\" border=\"true\":::\n\n 1. **[OK]** をクリックします。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-success.png\" alt-text=\"デプロイの成功\" border=\"true\":::\n\n    ボット アプリがクラウドに正常にデプロイされました。\n\n#### <a name=\"to-preview-your-bot-app-in-teams\"></a>**Teams でボット アプリをプレビューするには** \n\n 1. **Project** > **Teams Toolkit** > **プレビュー Teams アプリを選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/preview-azure.png\" alt-text=\"Azure でプレビューを選択する\" border=\"false\":::\n\n 1. アプリを Teams にインストールするように求められたら、[ **追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/add-app-azure.png\" alt-text=\"Teams にアプリを追加する方法を示すスクリーンショット。\":::\n\n    これで、ボットは Teams で正常に実行されるようになりました。 アプリが読み込まれると、ボットを使用したチャット セッションが表示されます。\n\n 1. 入力 `welcome` すると、概要カードを表示できます。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/welcome.png\" alt-text=\"概要カードが開く\" border=\"true\":::\n\n 1. アダプティブ カードとボットコマンドのドキュメントに入力 `learn` して移動できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/learn.png\" alt-text=\"ボットとアダプティブ カードが開く\" border=\"true\":::\n"
- title: おめでとうございます!
  durationInMinutes: 1
  content: "\nこれで完了です。\n\nそれぞれ異なる機能を持つ 2 つのアプリを作成しました。タブ アプリとボット アプリです。\n\nBlazor を使用してアプリをビルドするためのチュートリアルを完了しました。"
