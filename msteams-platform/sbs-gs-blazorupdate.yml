### YamlMime:Tutorial
title: Blazor を使用して初めてのアプリを構築する
metadata:
  title: Blazor を使用したHallo Welt
  description: このチュートリアルでは、Blazor を使用してHallo Weltアプリをビルドする方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 04/03/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Első lépésekの概要に戻る
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: afc7358f97e53004e1ca10185b39d9451d2070f6
  ms.sourcegitcommit: 123a64d7bcd310352dcff9f769b5f7f9cafd6aeb
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 04/18/2022
  ms.locfileid: "64910558"
items:
- durationInMinutes: 1
  content: "\nBlazor を使用すると、JavaScript の代わりに C# を使用して対話型 Web UI を構築できます。 \n\nBlazor と最新バージョンのVisual Studioを使用して、タブ アプリとボット アプリを作成できます。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/blazor/your-blazor-helloworld-app.png\" alt-text=\"このアプリを示す図には、タブとボットの 2 つの機能があります。\" border=\"false\":::\n\n> [!NOTE]\n> 現在、Teams Toolkitではメッセージ拡張機能はサポートされていません。\n"
- title: 前提条件
  durationInMinutes: 1
  content: "\nアプリのビルドとデプロイに必要なツールの一覧を次に示します。\n\n| &nbsp;    | インストール   | using... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio バージョン 17.2.0 プレビュー 2.1](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=enterprise&ch=pre&rel=17)|  Visual Studio Enterprise 2022 プレビュー (バージョン 17.2.0 プレビュー 2.1) を選択します。 |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/download-app) | Microsoft Teams、チャット、会議、通話用のアプリを通じて作業するすべてのユーザーと共同作業を行うことができます。すべて 1 か所で行うことができます。 |\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (推奨) または [Google Chrome](https://www.google.com/chrome/) | 開発者ツールを備えたブラウザー。 |\n\n\n## <a name=\"prepare-development-environment\"></a>開発環境を準備する\n\n必要なツールをインストールしたら、開発環境を設定します。\n\n### <a name=\"install-microsoft-teams-toolkit\"></a>Microsoft Teams Toolkitをインストールする\n\nTeams Toolkitは、アプリのクラウド リソースのプロビジョニングとデプロイ、Teams ストアへの発行などを行うツールを使用して開発プロセスを簡略化するのに役立ちます。 ツールキットは、Visual Studioまたは CLI (呼び出し) `teamsfx`として使用できます。 \n\n# <a name=\"latest-version-of-the-visual-studio\"></a>[Visual Studioの最新バージョン](#tab/vs)\n\n最新バージョンのVisual Studioを使用して、.NET で Blazor Server を使用してTeams アプリを開発できます。\n\nMicrosoft Teams Toolkit拡張機能をインストールするには:\n\n1. Visual Studioの最新バージョンをダウンロードします。\n1. ダウンロード フォルダーから開きます `vs_enterprise__3bed52501a604464b1eff2ce580fd4eb.exe` 。\n1. **Visual Studio インストーラー** ページで **[続行**] を選択してインストールを構成します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/visual-studio-installer.png\" alt-text=\"[続行] を選択してインストールを構成する\" border=\"true\":::  \n\n1. ワークロード **の下で ASP.NET と Web 開発** を選択します。\n\n1. **開発ツールMicrosoft Teams選択します**。\n   \n1. [**インストール**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs.install.png\" alt-text=\"図は、Microsoft 開発ツールをインストールするオプションを示しています。\" border=\"true\":::  \n   \n Visual Studioは数分でインストールされます。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nTeamsFx CLI をインストールするには、パッケージ マネージャーを `npm` 使用します。\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\n構成によっては、CLI のインストールに使用 `sudo` する必要がある場合があります。\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nこの条件は、Linux および macOS システムでより一般的です。\n\nnpm グローバル キャッシュを PATH に追加していることを確認します。 この手順は通常、Node.js インストーラーの一部として行われます。  \n\nコマンドで CLI を `teamsfx` 使用できます。 コマンドが動作していることを確認するには、次のコマンドを実行します `teamsfx -h`。\n\n> [!CAUTION]\n> PowerShell ターミナルで TeamsFx を実行する前に、PowerShell の \"リモート署名済み\" 実行ポリシーを有効にする必要があります。\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Teams開発テナントを設定する\n\n**テナント** は、チャット、ファイル共有、会議の実行を行う、Teams内の組織のスペースやコンテナーのようなものです。 この領域は、アプリをサイドロードしてテストする場所でもあります。 テナントで開発する準備ができているかどうかを確認しましょう。\n\n### <a name=\"enable-sideloading-option\"></a>サイドローディング オプションを有効にする\n\nアプリを作成したら、アプリを配布せずに Teams に読み込む必要があります。 このプロセスはサイドローディングと呼ばれます。 このオプションを表示するには、Microsoft 365 アカウントにサインインします。\n  \nテナントは既にあり、管理者はアクセスできますか? 実際に行うかどうかを確認しましょう。\n\nTeamsでアプリをサイドロードできるかどうかを確認します。\n\n1. Teams クライアントで、[**ストア**] アイコンを選択します。\n1. [ **アプリの管理**] を選択します。\n1. **カスタム アプリをアップロード** するオプションを探します。 このオプションが表示された場合は、サイドローディング アプリが有効になります。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"図は、Teamsでカスタム アプリをアップロードするオプションを示しています。\":::\n\n    > [!NOTE]\n    > Teamsカスタム アプリをアップロードするオプションが表示されない場合は、Teams管理者に接続します。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>無料のTeams開発者テナントを作成する (省略可能)\n\nTeams開発者アカウントをお持ちでない場合は、無料で入手できます。 Microsoft 365開発者プログラムに参加してください。\n\n1. [Microsoft 365 開発者プログラム](https://developer.microsoft.com/microsoft-365/dev-program)に移動します。\n1. [ **今すぐ参加** ] を選択し、画面の指示に従います。\n1. ウェルカム画面で、[ **E5 サブスクリプションのセットアップ**] を選択します。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Microsoft 365開発者プログラムにサインアップした後に表示される内容の例。\":::\n\n1. 設定した管理者アカウントを使用して、Teamsにサインインします。 **Teamsにカスタム アプリ オプションアップロード** があることを確認します。\n\n## <a name=\"get-a-free-azure-account\"></a>無料の Azure アカウントを取得する\n\nアプリをホストする場合、または Azure でリソースにアクセスする場合は、Azure サブスクリプションが必要です。 [開始する前に無料アカウントを作成](https://azure.microsoft.com/free/) します。\n\nこれで、すべてのツールが用意され、アカウントが設定されました。 次に、開発環境を設定し、ビルドを開始しましょう。\n"
- title: タブ アプリのプロジェクト ワークスペースを作成する
  durationInMinutes: 1
  content: "最初のアプリTeams作成して、アプリ開発を開始します。 このアプリでは、タブ機能を使用します。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/blazor/your-blazor-helloworld-app1.png\" alt-text=\"このアプリを示す図には、1 つの機能があります。タブが強調表示されています。\" border=\"false\":::    \n\nこのチュートリアルでは、.NET/Blazor を使用して最初のTeams アプリを作成、実行、デプロイする手順について説明します。\n\nこのセクションでは、次の情報を学習できます。\n\n1. [Teams Toolkitを使用して新しいタブ プロジェクトを設定する方法](#create-your-tab-project)\n1. [アプリのディレクトリ構造について](#take-a-tour-of-the-source-code-for-teams-tab-app)\n\n## <a name=\"create-your-tab-project\"></a>タブ プロジェクトを作成する\n\nTeams Toolkitを使用して、最初のプロジェクトを作成します。 ツールキットを使用すると、Teams アプリ プロジェクトを作成して構成するための一連のページが表示されます。\n\n1. **新しいプロジェクト ページの作成** : プロジェクトの種類を選択します。\n1. **新しいプロジェクト ページを構成** する: プロジェクトの詳細を入力します。\n1. **新しいTeams アプリケーション ページを作成** する: Teams アプリ機能を選択します。\n\n**タブ プロジェクト ワークスペースを作成するには**\n\n1. 最新バージョンのVisual Studioを開きます。\n\n1. [ **新しいプロジェクトの作成**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-project.png\" alt-text=\"図は、新しいプロジェクトを作成するオプションを示しています。\" border=\"false\":::\n\n    [ **新しいプロジェクトの作成]** ページが表示されます。\n\n1. プロジェクトの詳細を選択します。\n\n     プロジェクトの種類を選択します。\n\n      1. **[すべてのプラットフォーム**] ドロップダウン リストから **Microsoft Teams** を選択します。  \n    \n      1. テンプレートとして **[Microsoft Teams アプリ**] を選択します。\n\n      1. **[次へ]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-teams-app.png\" alt-text=\"図は、テンプレートを選択するオプションを示しています。\" border=\"false\":::\n    \n      [ **新しいプロジェクトの構成]** ページが表示されます。\n\n1.  新しいプロジェクトの詳細を構成します。     \n\n      次のプロジェクト構成を選択します。\n\n      1. プロジェクトに適した名前を入力します。\n\n          > [!NOTE] \n          > 入力したプロジェクト名は **、ソリューション** 名としても自動的に入力されることに注意してください。 必要に応じて、プロジェクト名に影響を与えずにソリューション名を変更できます。\n\n      1. プロジェクト ワークスペースを作成するフォルダー パスを選択します。\n\n      1. 必要に応じて、別のソリューション名を入力します。\n\n      1. 必要に応じて、プロジェクトとソリューションを同じフォルダーに保存するオプションをオンにします。 このチュートリアルでは、このオプションは必要ありません。\n\n      1. **[作成]** を選択します。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-new-project.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n\n      [**新しいTeamsアプリケーションの作成**] ページが表示されます。  \n\n1.  アプリ機能Teams選択します。 \n      \n    アプリの機能を選択します。\n\n    1. アプリの機能として **Tab アプリ** を選択します。\n\n    1. **[作成]** を選択します。      \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-tab.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n    \n    Teams タブ アプリは数秒で作成されます。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/vs-tab-app.png\" alt-text=\"図は、Visual Studioで作成されたアプリ プロジェクトを示しています。\" border=\"false\":::\n    \n\n<details>\n<summary>Teams タブ アプリの作成の概要。</summary>\nTeams タブ アプリを作成するための簡単な要約をご覧ください。\n\n![Teams アプリを作成する](~/assets/videos/blazorapp.gif)\n</details>\n\n## <a name=\"take-a-tour-of-the-source-code-for-teams-tab-app\"></a>Teams タブ アプリのソース コードのツアーに参加する\n\nプロジェクトの作成後、基本的な個人用アプリを構築するためのコンポーネントが用意されています。 プロジェクト ディレクトリ構造は、最新の **Visual StudioのPrůzkumník řešení** 領域で表示できます。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/blazor-app-solution-explorer.png\" alt-text=\"最新のVisual Studioの個人用アプリのアプリ プロジェクト ファイルを示すスクリーンショット。\" border=\"false\":::\n\nTeams Toolkit選択した機能に基づいて、プロジェクトのスキャフォールディングを作成します。 他のファイルの中でも、Teams Toolkitは次の情報を保持します。\n\n| フォルダー名 | コンテンツ |\n| --- | --- |\n| アプリのアイコン | アプリ アイコンは PNG ファイルとして `color.png` と `outline.png` に格納されます。 |\n| プロパティ/`manifest.json` | 開発者ポータル for Teamsを使用して発行するためのアプリ マニフェストは、次の場所に`Properties/manifest.json`格納されます。 |\n| コントローラー/`BackendController.cs` | 認証を支援するためにバックエンド コントローラーが用意されています `Controllers/BackendController.cs` 。 |\n| `Pages/Tab.razor` | 開発者ポータル for Teamsを使用して発行するためのアプリ マニフェストは、次の場所に`Properties/manifest.json`格納されます。 |\n| `TeamsFx.cs` と `JS/src/index.js` | コンテンツは、Teams ホストとの通信を初期化するために使用されます。 |\n\nバックエンド機能を追加するには、他の ASP.NET Core コントローラーをアプリケーションに追加します。\n"
- title: 最初のTeams タブ アプリをビルドして実行する
  durationInMinutes: 1
  content: "Teams Toolkitを使用してプロジェクト ワークスペースを設定したら、タブ プロジェクトをビルドします。\n\nアプリをビルドして実行するには:\n\n1. **Project** >  **Teams Toolkit** > **[Microsoft Teamsの構成**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-msteamsapp.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1. Microsoft 365 アカウントを選択するか、サインイン **するアカウントを追加** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/M365-account.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1. **DebugStart デバッグ** > **を** 選択するか **、F5** を選択して、デバッグ モードでアプリを実行します。\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>デバッガーでアプリをローカルに実行した場合に発生することを説明します。</summary>\n\n    **F5** を選択すると、次のTeams Toolkit。\n\n    1. アプリケーションをAzure Active Directoryに登録します。\n    1. Teamsでアプリケーションを \"サイドローディング\" に登録します。\n    1. ローカルで実行されているアプリケーション バックエンドを開始します。\n    1. ローカルでホストされているアプリケーション フロントエンドを開始します。\n    1. web ブラウザーでTeamsを起動し、アプリケーションをサイド ロードするようにTeamsに指示します (URL はアプリケーション マニフェスト内に登録されます)。\n\n    </details>\n\n1. 要求された場合は、ローカル デバッグ用の自己署名証明書をインストールします。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"アプリケーションを localhost から読み込むTeamsを有効にするために SSL 証明書をインストールするプロンプトを示すスクリーンショット。\":::\n\n    Teamsは Web ブラウザーに読み込まれます。\n    \n1. アプリをTeamsにインストールするように求められたら、[**追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-add-app.png\" alt-text=\"Teams Web クライアントにアプリを追加する方法を示すスクリーンショット\" border=\"true\":::\n\n   おめでとうございます。最初のタブ アプリはローカル環境で実行されています。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/app-local.png\" alt-text=\"完了したアプリのスクリーンショット\" border=\"true\":::\n\n1. ページ内を移動して、ユーザーの詳細を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/authorize-user-info.png\" alt-text=\"ユーザー情報にアクセスするための [承認] ボタンのスクリーンショット\" border=\"true\":::\n\n1. [**承認] を** 選択して、Microsoft Graphを使用してアプリでユーザーの詳細を取得できるようにします。\n\n    アプリは、ユーザーの詳細を表示するためのアクセス許可を付与するアクセス許可を要求します。    \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/ms-graph-permission.png\" alt-text=\"ユーザー情報にアクセスするためのアクセス許可を受け入れる方法を示すスクリーンショット\" border=\"true\":::\n\n1. [ **承諾]** を選択して、アプリがユーザーの詳細にアクセスできるようにします。\n\n    写真と詳細が **個人用タブ** に表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/tab-user-info.png\" alt-text=\"タブにユーザー情報を表示するスクリーンショット\" border=\"true\":::\n\n    ブレークポイントの設定などの通常のデバッグ アクティビティは、他の Web アプリケーションと同様に実行できます。 このアプリはホット リロードをサポートしています。  プロジェクト内のファイルを変更すると、ページが再読み込みされます。\n\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>アプリがローカルで実行されない場合のトラブルシューティング方法について説明します。</summary>\n\nTeamsでアプリを実行するには、アプリのサイドローディングを許可するMicrosoft 365開発アカウントが必要です。 詳細については、「前提条件」セクションを参照してください。\n</details>\n"
- title: 最初のTeams タブ アプリをプレビューする
  durationInMinutes: 1
  content: "\nタブ機能を使用してアプリTeams作成、ビルド、実行する方法を学習しました。 最後の手順では、アプリを Azure にデプロイし、Teamsでプレビューします。 内容は次のとおりです。\n\n1. [クラウドでタブ アプリをプロビジョニングする: クラウド](#to-provision-your-tab-app-in-the-cloud)でタブ アプリをプロビジョニングできます。\n1. [タブ アプリをクラウドにデプロイする](#to-deploy-your-tab-app-to-cloud): タブ アプリをクラウドにデプロイできます。 \n1. [Teamsでタブ アプリをプレビュー](#to-preview-your-tab-app-in-teams)する: Teamsでタブ アプリが開きます。 \n\nTeams Toolkitを使用して、タブ機能を備えた最初のアプリを Azure にデプロイしましょう。\n\n#### <a name=\"to-provision-your-tab-app-in-the-cloud\"></a>**クラウドでタブ アプリをプロビジョニングするには**\n\n1. クラウド **で Project** >  **Teams Toolkit** >  **Provision を** 選択します。?\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-provision.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1. **[プロビジョニング**] ダイアログで次のように入力します。\n\n   1. **サブスクリプション名**: Visual Studio Enterprise サブスクリプション。 </br>\n   1. **リソース グループ**: **[新規** ] を選択して、アプリ用に生成されたリソース グループを追加します。</br>\n   1. リージョンを選択 **します**。\n   1. [ **プロビジョニング**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-subscription.png\" alt-text=\"プロジェクトのサブスクリプション操作を選択する\" border=\"true\":::\n\n    プロビジョニングの警告が表示されます。 \n\n1. [ **プロビジョニング**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-warning.png\" alt-text=\"プロビジョニングを選択する\" border=\"true\":::\n\n    リソース グループがクラウドでプロビジョニングされるまで数分かかります。 \n    \n1. プロビジョニングが完了したら、[OK] を選択 **します**。 \n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-complete.png\" alt-text=\"リソース グループが生成される\" border=\"true\":::\n\n1. [**プロビジョニングされたリソースの表示**] を選択して、Azure-Portalに表示します。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/view-resource.png\" alt-text=\"リソース グループが生成される\" border=\"true\":::\n\n1. サインイン プロンプトでAzure-Portal アカウントにサインインします。 \n\n    app-dev-rg が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/app-dev-rg-azure.png\" alt-text=\"Azure で表示する\" border=\"true\":::\n\n    リソースはAzure-Portalでプロビジョニングされます。\n\n#### <a name=\"to-deploy-your-tab-app-to-cloud\"></a>**タブ アプリをクラウドにデプロイするには**\n\n1. **[Project** >  **Teams Toolkit** > **クラウドへのデプロイ**] を選択します。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-deploytocloud.png\" alt-text=\"クラウドへのデプロイを選択する\" border=\"true\":::\n\n1. **[OK]** を選択します。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-success.png\" alt-text=\"クラウドへのデプロイを選択する\" border=\"true\":::\n\n    タブ アプリがクラウドに正常にデプロイされました。\n\n#### <a name=\"to-preview-your-tab-app-in-teams\"></a>**Teamsでタブ アプリをプレビューするには**    \n\n1. **Project** >  **Teams Toolkit** >  **Preview Teams アプリ** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-build-preview.png\" alt-text=\"プレビューを選択する\" border=\"false\":::\n\n1. アプリをTeamsにインストールするように求められたら、[**追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-add-app.png\" alt-text=\"Teams Web クライアントにアプリを追加する方法を示すスクリーンショット。\":::\n\n    おめでとうございます。最初のタブ アプリは Azure 環境で実行されています。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/blazor-tab-app-azure.png\" alt-text=\"完了したアプリのスクリーンショット\" border=\"true\":::\n\n1. ページ内を移動して、ユーザーの詳細を表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/authorize-user-info.png\" alt-text=\"ユーザー情報にアクセスするための [承認] ボタンのスクリーンショット\" border=\"true\":::\n\n1. [**承認] を** 選択して、Microsoft Graphを使用してアプリでユーザーの詳細を取得できるようにします。\n\n    アプリは、ユーザーの詳細を表示するためのアクセス許可を付与するアクセス許可を要求します。    \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/ms-graph-permission.png\" alt-text=\"ユーザー情報にアクセスするためのアクセス許可を受け入れる方法を示すスクリーンショット\" border=\"true\":::\n\n1. [ **承諾]** を選択して、アプリがユーザーの詳細にアクセスできるようにします。\n\n    写真と詳細が **個人用タブ** に表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure-user-info.png\" alt-text=\"タブにユーザー情報を表示するスクリーンショット\" border=\"true\":::\n"
- title: ボット アプリのプロジェクト ワークスペースを作成する
  durationInMinutes: 1
  content: "最初のアプリTeams作成して、アプリ開発を開始します。 このアプリでは、ボット機能を使用します。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/blazor/your-helloworld-app-bot.png\" alt-text=\"このアプリを示す図には、1 つの機能があります。タブが強調表示されています。\" border=\"false\":::    \n\nこのチュートリアルでは、.NET/Blazor を使用して最初のTeams アプリを作成、実行、デプロイする手順について説明します。\n\nこのセクションでは、次の情報を学習できます。\n\n1. [Teams Toolkitを使用して新しいボット プロジェクトを設定する方法](#create-your-bot-project)\n1. [アプリのディレクトリ構造について](#take-a-tour-of-the-source-code-for-teams-bot-app)\n\n## <a name=\"create-your-bot-project\"></a>ボット プロジェクトを作成する\n\nTeams Toolkitを使用して、最初のプロジェクトを作成します。 ツールキットを使用すると、Teams アプリ プロジェクトを作成して構成するための一連のページが表示されます。\n\n1. **新しいプロジェクト ページの作成** : プロジェクトの種類を選択します。\n1. **新しいプロジェクト ページを構成** する: プロジェクトの詳細を入力します。\n1. **新しいTeams アプリケーション ページを作成** する: Teams アプリ機能を選択します。\n\n**ボット プロジェクト ワークスペースを作成するには**\n\n1. 最新バージョンのVisual Studioを開きます。\n\n1. [ **新しいプロジェクトの作成**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-select-project.png\" alt-text=\"図は、新しいプロジェクトを作成するオプションを示しています。\" border=\"false\":::\n\n    [ **新しいプロジェクトの作成]** ページが表示されます。\n\n1. プロジェクトの詳細を選択します。\n\n      プロジェクトの種類を選択します。\n\n      1. **[すべてのプラットフォーム**] ドロップダウン リストから **Microsoft Teams** を選択します。  \n    \n      1. テンプレートとして **[Microsoft Teams アプリ**] を選択します。\n\n      1. **[次へ]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/vs-select-teams-app.png\" alt-text=\"図は、テンプレートを選択するオプションを示しています。\" border=\"false\":::\n\n      [ **新しいプロジェクトの構成]** ページが表示されます。\n\n1.  新しいプロジェクトの詳細を構成します。  \n\n      次のプロジェクト構成を選択します。\n\n      1. プロジェクトに適した名前を入力します。\n\n          > [!NOTE] \n          > 入力したプロジェクト名は **、ソリューション** 名としても自動的に入力されることに注意してください。 必要に応じて、プロジェクト名に影響を与えずにソリューション名を変更できます。\n\n      1. プロジェクト ワークスペースを作成するフォルダー パスを選択します。\n\n      1. 必要に応じて、別のソリューション名を入力します。\n\n      1. 必要に応じて、プロジェクトとソリューションを同じフォルダーに保存するオプションをオンにします。 このチュートリアルでは、このオプションは必要ありません。\n\n      1. **[作成]** を選択します。   \n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-new-project-bot.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n\n      [**新しいTeamsアプリケーションの作成**] ページが表示されます。  \n\n1.  アプリ機能Teams選択します。 \n\n    アプリの機能を選択します。 \n\n    1. アプリの機能として **ボット アプリ** を選択します。\n\n    1. **[作成]** を選択します。     \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/select-bot.png\" alt-text=\"図は、新しいプロジェクトを構成するためのオプションを示しています。\" border=\"false\":::\n\n    Teams ボット アプリは数秒で作成されます。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/vs-bot-app-team.png\" alt-text=\"図は、最新のVisual Studioで作成されたアプリ プロジェクトを示しています。\" border=\"false\":::\n    \n\n<details>\n<summary>Teams ボット アプリの作成の簡単な要約。</summary>\nTeams ボット アプリを作成するための簡単な要約をご覧ください。\n\n![Teams アプリを作成する](~/assets/videos/botapp.gif)\n</details>\n\n## <a name=\"take-a-tour-of-the-source-code-for-teams-bot-app\"></a>Teams ボット アプリのソース コードのツアーに参加する\n\nプロジェクトの作成後、基本的な個人用アプリを構築するためのコンポーネントが用意されています。 プロジェクト ディレクトリ構造は、最新の **Visual StudioのPrůzkumník řešení** 領域で表示できます。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor/blazor-appbot-solution-explorer.png\" alt-text=\"最新のVisual Studioの個人用アプリのアプリ プロジェクト ファイルを示すスクリーンショット。\" border=\"false\":::\n\nTeams Toolkit選択した機能に基づいて、プロジェクトのスキャフォールディングを作成します。 他のファイルの中でも、Teams Toolkitは次の情報を保持します。\n\n| フォルダー名 | コンテンツ |\n| --- | --- |\n| アプリのアイコン | アプリ アイコンは PNG ファイルとして `color.png` と `outline.png` に格納されます。 |\n| プロパティ/`manifest.json` | 開発者ポータル for Teamsを使用して発行するためのアプリ マニフェストは、次の場所に`Properties/manifest.json`格納されます。 |\n| コントローラー/`BackendController.cs` | 認証を支援するためにバックエンド コントローラーが用意されています `Controllers/BackendController.cs` 。 |\n| `TeamsFx.cs` と `JS/src/index.js` | コンテンツは、Teams ホストとの通信を初期化するために使用されます。 |\n\nバックエンド機能を追加するには、他の ASP.NET Core コントローラーをアプリケーションに追加します。\n"
- title: 最初のボット アプリをビルドして実行する
  durationInMinutes: 1
  content: "\nアプリをローカルに構築して実行するには、以下のようにします。\n\n1. **Project** >  **Teams Toolkit** > **[Microsoft Teamsの構成**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/configure-msteamsapp.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1. Microsoft 365 アカウントを選択するか、サインイン **するアカウントを追加** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/M365-account.png\" alt-text=\"プロジェクトのプロビジョニング操作を選択する\" border=\"false\":::\n\n1.  ngrok またはコマンド プロンプトを使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n    ```bash\n    ngrok http -host-header=localhost 2544\n    ```\n\n 1. **DebugStart デバッグ** > **を** 選択するか **、F5** を選択して、デバッグ モードでアプリを実行します。\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>デバッガーでアプリをローカルに実行した場合に発生することを説明します。</summary>\n\n    **F5** を選択すると、次のTeams Toolkit。\n\n    1. アプリケーションをAzure Active Directoryに登録します。\n    1. Teamsでアプリケーションを \"サイドローディング\" に登録します。\n    1. ローカルで実行されているアプリケーション バックエンドを開始します。\n    1. ローカルでホストされているアプリケーション フロントエンドを開始します。\n    1. web ブラウザーでTeamsを起動し、アプリケーションをサイド ロードするようにTeamsに指示します (URL はアプリケーション マニフェスト内に登録されます)。\n\n    </details>\n    \n    >[!NOTE]\n    > アプリを初めて実行すると、すべての依存関係がダウンロードされ、アプリがビルドされます。 ビルドが完了すると、自動的にブラウザー ウィンドウが開きます。 このプロセスが完了するまでに 3 ~ 5 分かかる場合があります。\n\n    Web ブラウザーでアプリの実行が開始されます。\n\n1. ローカル コンピューター上のTeamsにアプリをサイドロードするように求められたら、[**追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/add-bot.png\" alt-text=\"ボットがクライアントに追加されていることを示すスクリーンショットTeams。\":::\n\n    これで、ボットはTeamsで正常に実行されました。 アプリが読み込まれると、ボットとのチャット セッションが開きます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/bot-running.png\" alt-text=\"ボットがクライアントで実行されていることを示すスクリーンショットTeams。\" border=\"true\":::\n\n    入力 `welcome` して概要カードを表示し、入力 `learn` してアダプティブ カードとボットコマンドのドキュメントに移動できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/bot-welcome.png\" alt-text=\"Teams クライアント上のボットのウェルカム カードを示すスクリーンショット。\" border=\"true\":::       \n\n     ブレークポイントの設定などの通常のデバッグ アクティビティは、他の Web アプリケーションと同様に実行できます。 このアプリはホット リロードをサポートしています。  プロジェクト内のファイルを変更すると、ページが再読み込みされます。\n     \n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>アプリがローカルで実行されない場合のトラブルシューティング方法について説明します。</summary>\n\n  Teamsでアプリを正常に実行するには、Teams アカウントでのサイドローディングが有効になっていることを確認します。 サイドローディングの詳細については、「前提条件」セクションを参照してください。\n"
- title: 最初のボット アプリをプレビューする
  durationInMinutes: 1
  content: "\nボット機能を備えたアプリを作成、ビルド、実行Teams学習しました。 最後の手順では、アプリを Azure にデプロイし、Teamsでプレビューします。 内容は次のとおりです。\n\n1. [クラウドでボット アプリをプロビジョニングする: クラウド](#to-provision-your-bot-app-in-the-cloud)でボット アプリをプロビジョニングできます。\n1. [ボット アプリをクラウドにデプロイする](#to-deploy-your-bot-app-to-cloud): ボット アプリをクラウドにデプロイできます。 \n1. [Teamsでボット アプリをプレビュー](#to-preview-your-bot-app-in-teams)する: Teamsでボット アプリが開きます。 \n\nTeams Toolkitを使用して Azure に最初のボット アプリをデプロイしましょう。\n\n#### <a name=\"to-provision-your-bot-app-in-the-cloud\"></a>**クラウドでボット アプリをプロビジョニングするには**\n\n1. クラウド **で Project** >  **Teams Toolkit** >  **Provision を** 選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure-app.png\" alt-text=\"クラウドでのプロビジョニング\" border=\"false\":::\n\n1. **[プロビジョニング**] ダイアログで次のように入力します。\n\n    1. **サブスクリプション名**: TEAMS クラウド - 開発テストと TTL = 3 日間。 </br>\n    1. **リソース グループ**: **[新規** ] を選択して、アプリ用に生成されたリソース グループを追加します。</br>\n    1. リージョンを選択 **します**。\n    1. [ **プロビジョニング**] を選択します。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/provision-azure.png\" alt-text=\"[プロビジョニングの編集] ウィンドウ\" border=\"false\":::\n\n       プロビジョニングの警告が表示されます。 \n\n1. [ **プロビジョニング**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/permission-azure.png\" alt-text=\"警告\" border=\"false\":::\n\n   リソース グループがクラウドでプロビジョニングされるまで数分かかります。\n    \n1. プロビジョニングが完了したら、[OK] を選択 **します**。 \n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/apppackage1-azure.png\" alt-text=\"アクセス許可 OK\" border=\"false\":::\n\n1. [**プロビジョニングされたリソースの表示**] を選択して、Azure-Portalに表示します。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/view-resource-azure.png\" alt-text=\"プロビジョニングされたリソース\" border=\"false\":::\n\n1. サインイン プロンプトでAzure-Portal アカウントにサインインします。 \n\n    app-dev-rg が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/azure.png\" alt-text=\"作成された Azure アプリ\" border=\"true\":::\n\n    リソースはAzure-Portalでプロビジョニングされます。\n\n#### <a name=\"to-deploy-your-bot-app-to-cloud\"></a>**ボット アプリをクラウドにデプロイするには**\n\n 1. **[Project** >  **Teams Toolkit** > **クラウドへのデプロイ**] を選択します。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-to-cloud-azure.png\" alt-text=\"クラウドにデプロイする\" border=\"true\":::\n\n 1. **[OK]** を選択します。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/deploy-success.png\" alt-text=\"デプロイの成功\" border=\"true\":::\n\n    ボット アプリがクラウドに正常にデプロイされました。\n\n#### <a name=\"to-preview-your-bot-app-in-teams\"></a>**Teamsでボット アプリをプレビューするには** \n\n 1. **Project** >  **Teams Toolkit** >  **Preview Teams アプリ** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/preview-azure.png\" alt-text=\"Azure でプレビューを選択する\" border=\"false\":::\n\n 1. アプリをTeamsにインストールするように求められたら、[**追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/add-app-azure.png\" alt-text=\"Teamsにアプリを追加する方法を示すスクリーンショット。\":::\n\n    これで、ボットはTeamsで正常に実行されました。 アプリが読み込まれると、ボットとのチャット セッションが開きます。\n\n 1. 入力 `welcome` すると、概要カードを表示できます。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/welcome.png\" alt-text=\"概要カードが開く\" border=\"true\":::\n\n 1. アダプティブ カードとボットコマンドのドキュメントに入力 `learn` して移動できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-preview2/learn.png\" alt-text=\"ボットとアダプティブ カードが開く\" border=\"true\":::\n"
- title: おめでとうございます!
  durationInMinutes: 1
  content: "\nこれで完了です。\n\nそれぞれ異なる機能を持つ 2 つのアプリを作成しました。タブ アプリとボット アプリです。\n\nBlazor を使用してアプリをビルドするためのチュートリアルを完了しました。"
