### YamlMime:Tutorial
title: プロアクティブ メッセージの送信
metadata:
  title: プロアクティブ メッセージの送信
  description: この記事では、ウェルカム メッセージ、スケジュールされたメッセージ、ボットからの通知など、プロアクティブなメッセージを送信する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 06/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ./bots/how-to/conversations/send-proactive-messages.md
  nextTutorialTitle: プロアクティブ メッセージの詳細
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 9c763e584bcd574c2fc511000f6470d7608e3ac0
  ms.sourcegitcommit: b72f51377f41be18ee9b70b042f736605f755cf1
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 10/21/2022
  ms.locfileid: "68670179"
items:
- durationInMinutes: 1
  content: "プロアクティブ メッセージは、次のようなメッセージを含むユーザーからの要求に応答しないボットによって送信されるメッセージです。\n - ウェルカム メッセージ\n - 通知\n - 予定されたメッセージ\n \nこのステップ バイ ステップ ガイドは、ボットからプロアクティブ メッセージを送信するのに役立ちます。 次の出力が表示されます。\n\n* チャットでのプロアクティブな hello メッセージ。  \n\n  :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-helo1.png\" alt-text=\"プロアクティブ Hello メッセージ\":::\n\n* アダプティブ カードとしてのプロアクティブ hello メッセージ。\n\n  :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png\" alt-text=\"アダプティブ カードのプロアクティブ Hello メッセージ\"::: \n"
- title: 前提条件
  durationInMinutes: 2
  content: "次のコマンドをインストールしてください。    \n\n| &nbsp; | インストール | 使用するには... |\n | --- | --- | --- |\n | **必須** | &nbsp; | &nbsp; |\n | &nbsp; | [Visual Studio 2022 バージョン 17.3](https://visualstudio.microsoft.com)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • ASP.NET と Web 開発 <br> • .NET Core クロスプラットフォーム開発 | Visual Studio 2022 でエンタープライズ バージョンをインストールし、ワークロードをインストールできます。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams アプリの機能 (会話型ボット、メッセージ拡張機能、受信 Webhook) には、受信接続が必要です。 トンネルは、開発システムを Teams に接続します。 タブのみを含むアプリには必要ありません。 このパッケージはプロジェクト ディレクトリ内にインストールされます (npm `devDependencies` を使用)。 |\n | &nbsp; | [Microsoft 365 開発者アカウント](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | アプリをインストールするための適切なアクセス許可を持つ Teams アカウントにアクセスします。 |\n | &nbsp; | [Teams の開発者ポータル](https://dev.teams.microsoft.com/) | Teams アプリを構成、管理、組織や Teams ストアなどに配布するための Web ベースのポータル。 |\n"
- title: ローカル環境を設定する
  durationInMinutes: 3
  content: "1.  [サンプル コード](https://github.com/MicrosoftDocs/msteams-docs/tree/master/msteams-platform/assets/downloads/SendProactiveMessages.zip) (Zip ファイル) をダウンロードし、ファイルを抽出します。\n1.  抽出されたファイルに移動し、[ **ProactiveBot.csproj**] をダブルクリックします。 ソリューションが Visual Studio で開きます。\n1.  Visual Studio で、プロジェクト (**ProactiveBot**) を右クリックし、[ **ビルド** ] を選択してソリューションをビルドします。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactivebot-project1.png\" alt-text=\"プロアクティブ ボット プロジェクト\":::\n\n    <br>\n\n    <details>\n\n    <summary><b>トラブルシューティング</b></summary>\n\n    **パッケージを見つけられない** エラーが発生した場合は、次の手順に従います。\n\n    1.  **[ツール]** > **[NuGet パッケージ マネージャー パッケージ マネージャー** > **の設定]** の順に移動します。\n    1.  表示される **[オプション]** ウィンドウで、[ **NuGet パッケージ マネージャー** > **パッケージ ソース**] を選択します。\n    1.  **[追加]** を選択します。\n    1.  **[名前**] と [**ソース**] フィールドに「」と`https://api.nuget.org/v3/index.json`入力`nuget.org`します。\n    1.  [ **更新]** を選択し **、[OK] を選択します**。\n    1.  プロジェクトをリビルドします。\n    <br>\n\n    </details>\n    \n1. 解凍して ngrok をインストールします。\n   * Windows: をダブルクリックします `ngrok.zip`。\n   * Linux または OS X: ターミナルから ngrok を解凍し、コマンドを `unzip /path/to/ngrok.zip` 実行します。\n1. ngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n    ```bash\n    ngrok http --host-header=localhost 3978\n    ```\n    \n1. ngrok から HTTPS URL をコピーします。 \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/ngrok-base-url1.png\" alt-text=\"ngrok ベース URL。\"lightbox=\"~/assets/images/proactive-scenario/ngrok-base-url1.png\":::   \n"
- title: 開発者向けプレビューを有効にする
  durationInMinutes: 1
  content: >
    1. テナントの管理コンソールでアプリのアップロードを有効にします。
        1. 管理者の資格情報で [Microsoft 365 管理センター](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/)にサインインします。
        1. 左側のパネルで、[ **すべて表示**] を選択します。
        1. [ **Teams] を選択します**。

           :::image type="content" source="./assets/images/meeting-token-generator/meeting-token-generator-admincenter_1.png" alt-text="管理センター メニュー" border="true":::
- title: Teams アプリを作成してインストールする
  durationInMinutes: 5
  content: "1. [Teams 用開発者ポータルを](https://dev.teams.microsoft.com)開きます。\n\n   次のページが表示されます。\n\n   :::image type=\"content\" source=\"~/assets/images/proactive-scenario/developer-portal-intro.png\" alt-text=\"開発者ポータルの概要\":::\n\n1. [**アプリのインポート] を** > 選択 **します**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/upload-app-package.png\" alt-text=\"Select-upload パッケージ\":::  \n\n1. [ **AppManifest** ] を選択し、[ **開く**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-package.png\" alt-text=\"[アプリ パッケージ] を選択します\":::\n\n1. **[インポート]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-import.png\" alt-text=\"[インポート] を選択します\":::\n\n    次のページが表示されます。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-message.png\" alt-text=\"プロアクティブ メッセージ。\"lightbox=\"~/assets/images/proactive-scenario/proactive-message.png\"::: \n\n1. [**アプリ機能ボット]** >  を選択 **します**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-features.png\" alt-text=\"[アプリ機能] を選択する\":::\n\n1. [ **新しいボットの作成] を選択します**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-bot.png\" alt-text=\"ボットを選択する\":::     \n    \n1. [ **新しいボット**] を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/create-new-bot.png\" alt-text=\"新しいボットを作成する\":::\n\n    [ **ボットの追加]** ウィンドウが表示されます。\n\n1. **「プロアクティブ メッセージ ボット」** と入力し、[追加] を選択 **します**。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/enter-proactive-message.png\" alt-text=\"プロアクティブ メッセージを入力する\":::\n\n    これで、Bot Proactive Message ボットがアプリケーションに正常に追加されました。 **[ボット名]** と [**ボット ID] が** 表示されます。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/bot-name.png\" alt-text=\"ボット名と ID\":::\n\n   > [!TIP]\n   > 後で参照するために **ボット ID を** 保存します。\n\n1. **プロアクティブ メッセージ ボット** をダブルクリックします。\n\n   [ **プロアクティブ メッセージ デモ]** ページが表示されます。\n\n1. [**構成] を選択** し、 の形式`https://your ngrok/api/messages`で **エンドポイント アドレス** を設定します。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-configure.png\" alt-text=\"[構成] を選択します\":::\n\n1. [**クライアント シークレット** > ]**ボットのクライアント シークレットを追加するを選択します**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/secret.png\" alt-text=\"シークレットの選択\":::\n\n1. [ **新しいクライアント シークレットが生成されました** ] ウィンドウが表示され、[ **OK] を選択します**。    \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/new-secret.png\" alt-text=\"新しいシークレット\":::\n\n    > [!TIP]\n    > 後で参照するために、[ **新しいクライアント シークレット** ] の値を保存します。\n\n1. [アプリ :::image type=\"icon\" source=\"~/assets/images/proactive-scenario/apps-icon.png\"::: ] アイコンを選択し、[ **プロアクティブ メッセージ デモ**] を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-apps.png\" alt-text=\"[アプリ] を選択します\":::\n\n    次のページが表示されます。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/overview-page.png\" alt-text=\"概要ページ\":::\n\n1. [**構成**] で [**アプリの機能**] を選択し、[ボット] を選択 **します**。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-features1.png\" alt-text=\"アプリの機能を選択する\":::\n\n1. [既存のボットの選択] ドロップダウンから [ **プロアクティブ メッセージ** **ボット] を選択** します。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-send-proactive-message.png\" alt-text=\"[プロアクティブ メッセージの送信] を選択します\":::\n\n1. [ **個人用** > **保存] を選択します**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-personal.png\" alt-text=\"個人用を選択する\":::\n\n1. Visual Studio で **appsettings.json ファイルを** 開き、次の情報を更新します。\n\n    * **MicrosoftAppID** をボット ID に設定します。\n    * **MicrosoftAppPassword** をクライアント シークレット ID の値に設定します。\n\n   :::image type=\"content\" source=\"~/assets/images/proactive-scenario/appsettings.png\" alt-text=\"アプリ設定ファイル\":::\n\n1. [ **デバッグ** > **] [デバッグの開始] の順に選択します**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/debug.png\" alt-text=\"[デバッグ] を選択します\":::\n\n   対応するプロアクティブ メッセージ サンプルが表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-confirm.png\" alt-text=\"プロアクティブな確認\":::\n\n1. 開発者ポータルにGo back、**Teams で [プレビュー**] を選択します。\n    \n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/preview-teams.png\" alt-text=\"Teams のプレビュー\":::\n\n1. **[追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-add.png\" alt-text=\"[追加] を選択する\":::\n\n   次のページが表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/teams-open1.png\" alt-text=\"Teams Open\":::\n\n   ブラウザーを開きます。\n\n1. URL を `http://localhost:3978/api/notify` コピーしてブラウザーに貼り付けて、チャットでプロアクティブな hello メッセージを取得します。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/url-paste.png\" alt-text=\"URL 貼り付け\":::\n\n1. Teams に移動します。 インストールが成功すると、ボットからプロアクティブな hello メッセージが表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-reply.png\" alt-text=\"プロアクティブ応答\":::\n"
- title: アダプティブ カードをプロアクティブ メッセージに追加する
  durationInMinutes: 10
  content: "1. Visual Studio で、デバッグ プロセスを停止します。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/stop-debugging.png\" alt-text=\"デバッグの停止\":::\n\n1. [ **依存関係**] を右クリックし、[ **NuGet パッケージの管理**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/dependencies.png\" alt-text=\"プロアクティブな依存関係\":::\n\n1. **NuGet ProactiveBot** で、[**参照**] を選択し、**AdaptiveCards** を検索します。 \n1. **[インストール]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-adaptive cards.png\" alt-text=\"[アダプティブ カード] を選択します\":::\n\n1. [ **変更のプレビュー** ] ウィンドウで、[ **OK] を選択します**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-ok.png\" alt-text=\"[OK] を選択します\":::\n\n1. **[コントローラー**] **で NotifyController.cs** ファイルを開きます。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-notify.png\" alt-text=\"[通知] を選択します\":::\n\n1. 既存 `BotCallback` のコードを次のコードに置き換えて、アダプティブ カード メッセージを送信します。     \n    \n   ```csharp\n   private async Task BotCallback(ITurnContext turnContext, CancellationToken cancellationToken)\n    {\n                AdaptiveCard card = new AdaptiveCard(new AdaptiveSchemaVersion(1, 0));\n\n                card.Body.Add(new AdaptiveTextBlock()\n                {\n                    Text = \"Proactive Hello\",\n                    Size = AdaptiveTextSize.ExtraLarge\n                });\n\n                card.Body.Add(new AdaptiveImage()\n                {\n                    Url = new Uri(\"http://adaptivecards.io/content/cats/1.png\")\n                });\n\n                Attachment attachment = new Attachment()\n                {\n                    ContentType = AdaptiveCard.ContentType,\n                    Content = card\n                };\n\n                await turnContext.SendActivityAsync(MessageFactory.Attachment(attachment));\n    }\n   ```  \n\n1. **F5** キーを押してコードを実行します。\n\n   対応するプロアクティブ メッセージ サンプルが表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-confirm.png\" alt-text=\"プロアクティブな確認\":::\n\n1. Teams に移動し、アプリをアンインストールします。 \n\n1. 同じアプリを再インストールしてイベントを取得します `conversationUpdate` 。   \n\n1. ブラウザーに `http://localhost:3978/api/notify` URL をコピーして貼り付けて、アダプティブ カードにプロアクティブな hello メッセージを取得します。     \n"
- title: 課題の完了
  durationInMinutes: 3
  content: >
    このようなものを思いついたのですか? アダプティブ カードのプロアクティブ hello メッセージの表示方法は次のとおりです。


    :::image type="content" source="~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png" alt-text="アダプティブ カードのプロアクティブ Hello メッセージ":::
- content: >-
    このシナリオは完了です。

    * 通知を毎日送信したり、ユーザーからのフィードバックを定期的に要求したりできます。

    * 複数の通知を回避するために調整制限を処理します。
