### YamlMime:Tutorial
title: Teams 通話と会議ボット
metadata:
  title: 通話と会議を使用した Teams ボット
  description: この学習モジュールでは、Teams 用のボットで通話機能と会議機能を設定する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: 通話ボットを登録する
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: b57e9744699c7318674f387451f17afc66c5667e
  ms.sourcegitcommit: 88fb2e9a18de3bd84e3c604ff235fc753c8de8f5
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/02/2022
  ms.locfileid: "68818063"
items:
- durationInMinutes: 1
  content: >
    Microsoft Teams 通話ボットと会議ボットは、クラウド通信Graph APIを統合することで、通話の作成、通話への参加、通話の転送またはリダイレクト、スケジュールされた会議への参加、参加者の招待などの基本的な機能を提供します。


    ボットは、リアルタイムの音声、ビデオ、画面共有を使用して、Teams の通話や会議と対話できます。 通話やオンライン会議用の Microsoft Graph API を使用すると、Teams アプリは音声とビデオを使用してユーザーと対話してエクスペリエンスを向上させることができます。 これらの API を使用すると、次の新機能を追加できます:


    * 対話型音声応答 (IVR) を使用します。

    * 呼び出し制御を使用します。

    * デスクトップやアプリの共有など、リアルタイムのオーディオおよびビデオ ストリームへのアクセスを提供します。


    ボットを作成し、Teams アプリでこれらの Graph API を使用するための追加情報とアクセス許可を指定します。


    このステップ バイ ステップ ガイドは、Teams 通話ボットと会議ボットを設定するのに役立ちます。 このチュートリアルの終わりまでに、次の出力を実現できます。


    :::image type="content" source="./assets/images/calls-and-meetings/final-output.png" alt-text="最終的な出力。":::
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境を設定していることを確認します。\n\n | &nbsp; | インストール | 使用するには... |\n | --- | --- | --- |\n | **必須** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft 365 開発者アカウント](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | アプリをインストールするための適切なアクセス許可を持つ Teams アカウントにアクセスします。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams アプリの機能 (会話型ボット、メッセージ拡張機能、受信 Webhook) には、受信接続が必要です。 トンネルは、開発システムを Teams に接続します。 タブのみを含むアプリには必要ありません。 このパッケージはプロジェクト ディレクトリ内にインストールされます (npm `devDependencies` を使用)。 |\n | &nbsp; | [Visual Studio 2022 バージョン 17.3](https://visualstudio.microsoft.com)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • ASP.NET と Web 開発 <br> • .NET Core クロスプラットフォーム開発 | Visual Studio 2022 でエンタープライズ バージョンをインストールし、ワークロードをインストールできます。 |   \n | &nbsp; | [.NET Core SDK バージョン 3.1 (ゲスト アカウントではありません)](https://dotnet.microsoft.com/en-us/download) | ローカル デバッグとAzure Functionsアプリのデプロイ用にカスタマイズされたバインド。 .NET 3.1 (以降) SDK をグローバルにインストールしていない場合は、移植可能なバージョンをインストールできます。 |\n | &nbsp; | [Microsoft Teams と Teams アカウント](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams は、チャット、会議、通話、すべてのアプリを通じて作業するすべてのユーザーと 1 か所で共同作業を行います。 |\n | &nbsp; | [Windows PowerShell](/microsoftteams/teams-powershell-install) | すべてのコマンドを実行してインストールします。 |\n"
- title: 通話ボットと会議ボットを設定する
  durationInMinutes: 5
  content: "アプリをMicrosoft ID プラットフォームと統合し、Microsoft Graph APIを呼び出すために、Microsoft Azure portalでアプリ登録を使用してアプリケーションを登録します。 次の手順を実行します。\n\n1. Web サーバーのエンドポイントへの ngrok トンネルを作成します。\n1. Azure ボット サービスにボットを登録する Azure ボット リソースを作成します。\n1. ボットのシングル サインオン (SSO) 認証を有効にするクライアント シークレットを作成します。\n1. PowerShell を使用してオンライン会議を作成するためのデモ テナント ユーザーのポリシーを作成します。\n1. ダウンストリーム呼び出しの API アクセス許可を追加します。\n1. Azure アカウントでボット チャネル登録を作成します。\n1. Microsoft Teams チャネルを追加して、ボットを Teams チャネルにデプロイします。\n1. 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**ngrok トンネルを作成する**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n```bash\nngrok http --host-header=rewrite 3978\n```\n\n**Azure でアプリを登録する**\n\n1. 個人用 Microsoft アカウントを使用[してAzure portal](https://portal.azure.com/)に移動します。\n1. **Azure Active Directory** を選択します。\n\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Azure Active Directory。\":::\n\n1. 左側のウィンドウで、[**アプリの登録**] を選択します。\n1. **[新規登録]** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory_1.png\" alt-text=\"新しい Azure Active Directory。\":::\n\n\n**[アプリケーションの登録** ] ウィンドウが表示されます。 アプリケーションの登録情報を入力します。\n\n  1. [ **名前]** に、ユーザーに表示されるアプリケーション名を入力します。\n\n  1. [ **サポートされているアカウントの種類**] で、アプリケーションでサポートするアカウントを選択します。\n\n  1. [ **リダイレクト URI (省略可能)]** で、アプリ **Web またはパブリック クライアント (モバイルとデスクトップ)** の種類を選択し、アプリケーションのリダイレクト URI を入力します。\n\n     > [!NOTE]\n     > Web アプリケーションの場合は、ベース URI を として `http://localhost:31544`指定します。 パブリック クライアント アプリケーションの場合は、トークン応答を として `myapp://auth`返すために Azure AD によって使用される URI を指定します。\n\n  1. **[登録]** を選択します。\n\n     :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app_2.png\" alt-text=\"レジスタの選択を示すスクリーンショット。\" lightbox=\"./assets/images/calls-and-meetings/reg-app_1.png\":::\n\n**クライアント シークレットを作成するには**\n\n1. ボットの [ **概要** ] ページで[ **要点** ] を選択し、今後参照するために **アプリケーション (クライアント) ID** (Microsoft アプリ ID) を保存します。\n\n   :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new_2.png\" alt-text=\"Microsoft アプリ ID を示すスクリーンショット。\":::\n\n1. [ **管理**] で、[ **証明書&シークレット**] を選択します。\n1. [**クライアント シークレット****] [新しいクライアント シークレット**] を > 選択します。\n\n**[クライアント シークレットの追加]** ウィンドウが表示されます。\n\n  1. クライアント シークレットに **「Description」と** 入力します。\n  1. **[追加]** を選択します。\n\n     :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client_2.png\" alt-text=\"追加されているクライアント シークレットを示すスクリーンショット。\"lightbox=\"./assets/images/calls-and-meetings/add-client_2.png\":::\n\n  1. [ **クリップボードにコピー] を** 選択して **、値** の詳細をコピーします。\n\n     :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret_2.png\" alt-text=\"クリップボードにコピーされる値を示す画面シャツ。\":::\n\n      > [!TIP]\n      > 後で参照するために、クライアント シークレット **の値** またはアプリ パスワードを保存します。\n\n**PowerShell スクリプトを実行してポリシーを作成する**\n\n1. 次の PowerShell スクリプトを使用してオンライン会議を作成するデモ テナント ユーザーのポリシーを作成します。\n\n    > [!NOTE]\n    > PSI Windows PowerShell管理者として実行し、スクリプトを実行します。\n\n    ```PowerShell\n\n    New-CsApplicationAccessPolicy -Identity \"<<policy-identity/policy-name>>\" -AppIds \"<<azure-client-id>>\" -Description \"Policy-description\"\n    Grant-CsApplicationAccessPolicy -PolicyName \"<<policy-identity/policy-name>>\" -Identity \"<<object-id-of-the-user-to-whom-policy-need-to-be-granted>>\"\n\n    ```\n\n1. を **Microsoft アプリ ID** に置き換え、`object-id`Teams へのサインインに使用したアカウントの **テナント ID** に置き換えます`azure-client-id`。 次の図に示すようにリンクをコピーすると、取得したリンクに Teams アカウントのテナント ID が表示されます。\n\n    1. [ **Teams] を選択します**。\n\n    1. 省略記号 ●●●を選択します。\n\n    1. **[チームへのリンクを取得する]** を選択します。\n   \n       :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-final.png\" alt-text=\"Microsoft-App ID の置き換えを示すスクリーンショット。\":::\n   \n1. PowerShell スクリプトに、`azure-client-id`、`policy-description`、、および `object-id` を追加`PolicyName`します。\n1. PowerShell でメッセージが表示されたら、Teams アカウントでサインインします。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell_1.png\" alt-text=\"PowerShell を示すスクリーンショット。\":::\n\n1. PowerShell で次のコマンドを実行して、ポリシーが正常に作成されたかどうかを確認します。 ポリシー名を定義したポリシー名に置き換えます。\n\n \n    ```PowerShell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n    > [!NOTE]\n    > 実行中のスクリプトがシステムで無効になっていないことを確認します。 詳細については、「 [実行ポリシー](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.2)」を参照してください。\n\n**ダウンストリーム呼び出しの API アクセス許可を追加するには**\n\n> [!NOTE]\n> アカウントが Microsoft の管理者の同意を付与できることを確認します。 アクセス許可を追加した後、 を選択 `Grant admin consent for Microsoft` して同意の状態を把握します。\n\n1. ボットの [ **管理** ] ウィンドウで、[ **API のアクセス許可**] を選択します。\n1. [**アクセス許可を追加**] を選択します。 **[API のアクセス許可の要求** ] ウィンドウが表示されます。\n1. [**Microsoft API Microsoft Graph] を** > 選択します。\n1. [**アプリケーションのアクセス許可**] を選択します。\n1. [アクセス許可] を選択し、次のGraph API アプリケーションのアクセス許可をAzure アプリに追加し、管理者の同意を付与します。\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. **[アクセス許可の追加]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/api-permissions_1.png\" alt-text=\"API アクセス許可の追加を示すスクリーンショット。\" lightbox=\"./assets/images/calls-and-meetings/api-permissions_1.png\":::\n\n**Azure アカウントでボット チャネル登録を作成する**\n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスで **Azure Bot** を検索します。\n1. [ **Azure Bot**] を選択します。\n1. **[作成]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot_1.png\" alt-text=\"Azure ボットのホームページを示すスクリーンショット。\":::\n  \n   **[Azure Bot の作成** ] ウィンドウが表示されます。\n\n1. **[ボット ハンドル]** フィールドでボット ハンドル名を入力します。\n1. ドロップダウン リストから **サブスクリプション** と **リソース グループ** を選択します。\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"Azure ボットの作成を示すスクリーンショット。\":::\n  \n   新しいリソース グループを作成することもできます。 [ **新規作成]** を選択>リソース名を入力> **[OK] を選択します**。\n\n1. 新しいリソース グループを作成した場合は、[ **新しいリソース グループの場所** ] ドロップダウン リストから必要な場所を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"新しいリソース グループの場所を示すスクリーンショット。\":::\n\n1. [**マルチテナント**] として [**アプリの種類]** を選択します。\n\n    > [!NOTE]\n    > [Microsoft アプリ ID] セクションで `Creation type` 、 `Create new Microsoft App ID` 新しいボットを作成するために既に選択されています。 ボットを既に登録している場合は、 を選択 `Use existing app registration`することもできます。 フィールドに `Existing app ID` 「Microsoft App ID」と入力し、フィールドに「value」 `Existing app password` と入力します。\n\n1. [ **既存のアプリの登録を使用する** ] を選択し、デモ テナントに登録されている Azure アプリのアプリ **ID を** 入力します。\n1. **[確認 + 作成]** を選びます。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create_1.png\" alt-text=\"マルチテナントの選択を示すスクリーンショット。\":::\n\n1. 検証に合格した場合は、[作成] を選択 **します**。\n\n   ボット サービスがプロビジョニングされるまで少し時間がかかります。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation_1.png\" alt-text=\"検証パスを示すスクリーンショット。\":::\n\n1. [**リソースに移動**] を選びます。 ボットと関連リソースがリソース グループに一覧表示されます。\n\n    これで、Azure ボットが作成されました。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource_1.png\" alt-text=\"リソースに移動するナビゲーションを示すスクリーンショット。\":::\n\n**Microsoft Teams チャネルを追加するには**\n\n1. **[ホーム]** に移動します。\n1. [ **最近使ったリソース**] からボットを選択します。\n1. 左側のウィンドウで [ **チャネル** ] を選択します。\n1. **Microsoft Teams を選択する** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams_1.png\" alt-text=\"チャネル Teams を示すスクリーンショット。\":::\n\n1. チェックボックスをオンにして **、利用規約** に同意します。\n1. [ **同意する] を選択します**。\n\n    :::image type=\"content\" source=\"~/assets/images/calls-and-meetings/terms.png\" alt-text=\"サービス利用規約\":::\n\n1. **[適用]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/apply-teams_1.png\" alt-text=\"microsoft teams\":::\n\n1. [ **Microsoft Teams** ] を選択し、Teams チャネル ページの [ **通話** ] タブを選択します。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"Teams を構成します。\":::\n\n1. [ **呼び出しを有効にする] を** 選択し、HTTPS ngrok URL を使用して **Webhook** を更新します (https://yourngrok/api/callback) 最後に を追加 `/api/callback` します)。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling_1.png\" alt-text=\"呼び出しを有効にします。\":::\n\n1. **[適用]** を選択します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok に移動します。\n1. 次の図に示すように、HTTPS URL (https から io) をコピーします。\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok_1.png\" alt-text=\"ngrok ウィンドウを示すスクリーンショット。\":::\n\n1. ボットの **[ホーム]** ページに移動します。\n1. 左側のウィンドウの **[設定]** で [**構成] を** 選択します。\n1. **メッセージング エンドポイント** で、ngrok から HTTPS URL を追加し、URL の末尾に **/api/messages** を追加します。\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint_1.png\" alt-text=\"メッセージング エンドポイントを示すスクリーンショット。\":::\n\n1. **[適用]** を選択します。\n\n    Azure ボット サービスでボットを正常に設定しました。ボット サービス接続を設定する必要があります。\n"
- title: Teams アプリ パッケージを更新して作成する
  durationInMinutes: 1
  content: "Microsoft Teams で会話ボットを認証し、Teams アプリ パッケージを作成して組織にアップロードする方法を理解するようにボット サンプルを構成します。\n\n1. Visual Studio で appsettings.json を更新します。\n1. Visual Studio で manifest.json を更新し、エクスプローラーの zip ファイルに圧縮します。\n\n**ボットを呼び出すための appsettings を更新する**\n\n1. リポジトリ に移動します https://github.com/OfficeDev/Microsoft-Teams-Samples.git。\n1. [ **コード** ] を選択し、ドロップダウンを選択します。\n1. [ **ZIP のダウンロード] を選択します**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/git_1.png\" alt-text=\"リポジトリのダウンロードを示すスクリーンショット。\":::\n\n    > [!NOTE]\n    > ダウンロードしたリポジトリのパスを必ず書き留めます。\n\n1. **エクスプローラー** で、**Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > **csharp** フォルダーに移動します。\n1. Visual Studio で **appsettings.json ファイルを** 開き、ボットの構成を更新します。\n\n    * は、ボットの構成ページから取得 `MicrosoftAppId` できます。 `MicrosoftAppPassword`は、前に保存したクライアント シークレット ID の値です。\n    * または は、 `tenantId` `UserId` Teams へのサインインに使用するアカウントのリンクから取得できます。 イメージのパスに従って、 の `tenantId`リンクを取得します。\n      \n       1. [ **Teams] を選択します**。\n\n       1. 省略記号 ●●●を選択します。\n\n       1. **[チームへのリンクを取得する]** を選択します。\n\n     :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-final.png\" alt-text=\"Teams リンクを示すスクリーンショット。\":::\n    \n    * と は `displayName` `id` [、Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) サイトから取得できます。\n\n        * Teams テナント アカウントを使用してページにサインインします。\n\n        * 検索ボックスの URl の末尾に を追加 `Users` します。\n\n        * **[クエリの実行]** を選択します。\n        \n          :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer_1.png\" alt-text=\"Graph Explorer。\":::\n\n\n        * アカウントにリンクされている表示名とユーザー ID が生成されます。\n\n        * 任意の 3 つのアカウントを選択し、 と `UserId` の appsettings.json に追加`DisplayName`します。\n   \n          :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer_2.png\" alt-text=\"Graph Explorer。\" lightbox=\"./assets/images/calls-and-meetings/graph-explorer_2.png\":::\n\n   \n        > [!NOTE]\n        > `TenantId`または `UserId` Teams アカウントのは、通話を開始する場所を示し`DisplayName``UserId`、ユーザーは通話をリダイレクトまたは転送するユーザーを示します。\n\n1. 、、 `ClientId``AppId` **をアプリケーション (クライアント) ID**、`MicrosoftAppPassword``ClientSecret`および `AppSecret` **を Value** に置き換えます`MicrosoftAppId`。\n1. を URL に`ngrok`置き換えます`BotBaseUrl`。\n1. と を`UserId`置き換えます`TenantId`。\n1. と を`Id`置き換えます`DisplayName`。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings_1.png\" alt-text=\"Appsettings Json を示すスクリーンショット。\":::\n\n1. **[保存]** を選択します。\n\n**マニフェストを更新するには**\n\n1. **エクスプローラー** で、**Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > **csharp** > **Manifest** フォルダーに移動します。\n1. `manifest.json` ファイルを Visual Studio で開きます。\n1. ファイルで `manifest.json` 、 **{id}、{BotId} を** Microsoft アプリ ID に置き換えます。\n1. https:// を除く **validDomains** に ngrok url を追加します。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest_1.png\" alt-text=\"マニフェストを示すスクリーンショット。\" lightbox= \"./assets/images/calls-and-meetings/manifest_1.png\" :::\n\n1. **Manifest** フォルダーの内容を zip 形式で作成`manifest.zip`します。\n\n    > [!NOTE]\n    > には `manifest.zip` 、追加のフォルダーを含めてはなりません。 zip フォルダー内に `manifest json` ソース ファイル、 `color` アイコン、アイコン `outline` が必要です。\n    > 組織または Teams アカウントのデモ テナントにマニフェストをアップロードし、Visual Studio でソリューションを実行します。\n\n1. Teams に移動します。\n1. アップロード `manifest.zip`するには、[ **アプリ] > [アプリの管理] > [アプリのアップロード] > [カスタム アプリのアップロード] を選択します**。\n\n   :::image type=\"content\" source=\"./assets/images/calls-and-meetings/upload.png\" alt-text=\"出力の追加の選択を示すスクリーンショット。\":::\n\n1. エクスプローラーのリポジトリ フォルダーから開きます`manifest.zip`。\n1. [ **追加]** を選択して、Teams に通話ボットをインストールします。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output_1.png\" alt-text=\"出力の追加の選択を示すスクリーンショット。\":::\n\n    Visual Studio でデバッグした後、このボットと対話できます。\n"
- title: 通話ボットと会議ボットとの対話
  durationInMinutes: 2
  content: "ボットを使用すると、チャネル内またはチャット内の専用スペース内のサービスとコンテンツにアクセスできます。\n\nボットを使用するには、次の手順を実行します。\n\n1. Teams の左側のウィンドウで省略記号 ●●● を選択し、一覧からアプリを選択します。\n1. ボットは、アダプティブ カードを使用してウェルカム テキストを送信します。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/bot-with-adaptive-card.png\" alt-text=\"ボットのアダプティブ カード。\":::\n\n1. [ **呼び出しの作成] を選択します**。 \n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/placed-call.png\" alt-text=\"発信された呼び出しを示すスクリーンショット。\":::\n\n1. [ **呼び出しの転送]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/transfer-call.png\" alt-text=\"転送呼び出しを示すスクリーンショット。\":::\n\n1. ボットに会議のスケジュールを設定し、参加者を招待するように依頼できます。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/meeting.png\" alt-text=\"会議ボットを示すスクリーンショット。\":::\n"
- title: 課題の完了
  durationInMinutes: 1
  content: >
    あなたはこのような出力を思いついたのですか?


    :::image type="content" source="./assets/images/calls-and-meetings/final-output.png" alt-text="最終的な出力。":::
- content: Microsoft Teams のボット呼び出しと会議アプリの使用を開始するためのチュートリアルを完了しました。
