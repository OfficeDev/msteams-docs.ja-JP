### YamlMime:Tutorial
title: Teams 会話ボットを作成する
metadata:
  title: Teams 会話ボットを作成する
  description: この学習モジュールでは、Microsoft Teams アプリケーションで基本的な会話ボットを作成する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 04/01/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/conversations/channel-and-group-conversations.md
  nextTutorialTitle: ボットとのチャネルおよびグループ チャットの会話
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 0ffb1072424e60c5625ccd0d38f223c5e7643c9e
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740633"
items:
- durationInMinutes: 1
  content: >
    Teams 会話ボットを使用すると、ユーザーはテキスト、対話型カード、タスク モジュールを介して Web サービスと対話できます。 基本的な会話は、1 つの REST API である Bot Framework コネクタを介して処理されます。 この API を使用すると、ボットは Teams やその他のチャネルと通信できます。 Bot Builder SDK には、次の機能があります。


    * Bot Framework コネクタに簡単にアクセスできます。

    * 会話フローと状態を管理するための追加機能。

    * 自然言語処理 (NLP) などのコグニティブ サービスを組み込む簡単な方法。


    ボットが最初にグループまたはチームに追加されると、概要メッセージが送信されます。 メッセージには、ボットの機能とその使用方法の簡単な説明が表示されます。


    このステップ バイ ステップ ガイドは、Teams アプリケーションで基本的な会話ボットを作成するのに役立ちます。 次の出力が表示されます。


    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="最終的な出力。"lightbox="assets/images/conversation-bot/final-output.png":::
- title: 前提条件
  durationInMinutes: 1
  content: "開発環境を設定するには、次のツールをインストールします。\n\n| &nbsp; | インストール | 使用するには... |\n | --- | --- | --- |\n | **必須** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft 365 開発者アカウント](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | アプリをインストールするための適切なアクセス許可を持つ Teams アカウントにアクセスします。 |\n | &nbsp; | [Ngrok](https://ngrok.com/download) | Teams アプリの機能 (会話型ボット、メッセージ拡張機能、受信 Webhook) には、受信接続が必要です。 トンネルは、開発システムを Teams に接続します。 タブのみを含むアプリには必要ありません。 このパッケージはプロジェクト ディレクトリ内にインストールされます (npm `devDependencies` を使用)。 |\n | &nbsp; | [Visual Studio 2022 バージョン 17.3](https://visualstudio.microsoft.com)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • **ASP.NET と Web 開発** <br> • **.NET Core クロスプラットフォーム開発** | Visual Studio 2022 でエンタープライズ バージョンをインストールし、ワークロードをインストールできます。 |   \n | &nbsp; | [.NET Core SDK バージョン 3.1](https://dotnet.microsoft.com/en-us/download) | ローカル デバッグとAzure Functionsアプリのデプロイ用にカスタマイズされたバインド。 .NET 3.1 (以降) SDK をグローバルにインストールしていない場合は、移植可能なバージョンをインストールできます。 |\n | &nbsp; | [Microsoft Teams と Teams アカウント](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams は、チャット、会議、通話、すべてのアプリを通じて作業するすべてのユーザーと 1 か所で共同作業を行います。 |\n"
- title: 会話ボットを設定する
  durationInMinutes: 5
  content: "Azure でボットを開発してホストするときに、ボットを Azure ボット サービスに登録します。 次の手順を実行します。\n\n1. ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n1. Azure アカウントでボット チャネル登録を作成します。\n1. ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n1. ダウンストリーム呼び出しの API アクセス許可を追加します。\n1. 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n1. Microsoft Teams チャネルを追加して、ボットを Teams チャネルにデプロイします。\n\n**ngrok トンネルを作成する**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n```bash\nngrok http --host-header=rewrite 3978\n```\n\n**Azure アカウントでボット チャネル登録を作成する**\n\n1. [Azure portal](https://portal.azure.com/)にアクセスします。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスで **Azure Bot** を検索します。\n1. [ **Azure Bot**] を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Azure ボット。\":::\n\n1. **[作成]** を選択します。\n1. **[ボット ハンドル]** フィールドでボット ハンドル名を入力します。\n1. ドロップダウン リストから **[サブスクリプション]** を選択します。\n1. ドロップダウン リストから既存の **リソース グループ** を選択するか、新しいリソース グループを作成し、[ **新規作成**] を選択し、リソース名を入力し、[ **OK] を** 選択し、[ **新しいリソース グループの場所** ] ドロップダウン リストから必要な場所を選択します。\n1. [必要な **データ所在地 (プレビュー)] を選択します**。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/create-azure-bot.png\" alt-text=\"Azure ボットを作成します。\":::\n\n1. **Microsoft アプリ ID** の **マルチテナント** として **アプリ種類** を選択します。\n\n    > [!NOTE]\n    > [Microsoft アプリ ID の **作成の種類** ] セクションで、新しいボットを作成するために [ **新しい Microsoft アプリ ID の** 作成] が既に選択されています。 ボットを既に登録している場合は、[ **既存のアプリの登録を使用** する] を選択することもできます。 [既存のアプリ ID] フィールドに「Microsoft **App ID」と** 入力し、[ **既存のアプリ パスワード** ] フィールドに値を入力します。 \n1. **[確認 + 作成]** を選びます。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/review-create.png\" alt-text=\"確認して作成します。\":::\n\n1. 検証に合格した場合は、[ **作成**] を選択します。 ボット サービスがプロビジョニングされるまで少し時間がかかります。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/validation-passed.png\" alt-text=\"ボットの検証。\":::\n\n1. [**リソースに移動**] を選びます。 ボットと関連リソースがリソース グループに一覧表示されます。\n\n    これで、Azure ボットが作成されました。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/go-to-resource.png\" alt-text=\"リソース カードに移動します。\":::\n\n**クライアント シークレットを作成するには**\n\n1. **[構成設定]** で、**[追加]** を選択します。 将来の参照のために、**Microsoft アプリ ID** (クライアント ID) を保存します。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/microsoft-app-id.png\" alt-text=\"Microsoft アプリ ID。\":::\n\n1. Microsoft アプリ ID の隣にある [ **管理** ] **を選択します**。\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"ボットを管理する\":::\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 [ **クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n    :::image type=\"content\" source=\"./assets/images/meetings-side-panel/newclientsecret.png\" alt-text=\"新しいクライアント シークレット。\":::\n\n1. **[説明]** を入力し、**[追加]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/add-client-secret.png\" alt-text=\"クライアント シークレットを追加します。\":::\n\n1. [**値**] 列で [**クリップボードにコピー**] を選択し、後で参照できるようにクライアント シークレット ID を保存します。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/value.png\" alt-text=\"バリュー カード。\":::\n\n**ダウンストリーム呼び出しの API アクセス許可を追加するには**\n\n1. ボットの [ **管理** ] ウィンドウで、[ **API のアクセス許可**] を選択します。\n1. [**アクセス許可を追加**] を選択します。 **[API のアクセス許可の要求** ] ウィンドウが表示されます。\n1. [ **Microsoft API] を** 選択し、[ **Microsoft Graph**] を選択します。\n1. [ **アプリケーションのアクセス許可**] を選択し、[アクセス許可] を選択します。\n1. アプリでダウンストリーム API に必要なユーザーアクセス許可 (例: `User.Read`) を追加します。\n1. **[アクセス許可の追加]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/api-permissions.png\" alt-text=\"API のアクセス許可を追加します。\"lightbox=\"assets/images/conversation-bot/api-permissions.png\":::\n\n**メッセージング エンドポイントを追加するには**\n\n1. ボットの **[ホーム**] ページに移動し、左側のウィンドウの **[設定]** で **[構成**] を選択します。\n1. ngrok に移動します。\n1. 次の図に示すように、HTTPS URL (https から io) をコピーします。\n    \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"ngrok HTTPS URL\":::\n   \n1. **メッセージング エンドポイント** で、ngrok から使用できる HTTPS URL を追加し、URL の末尾に **/api/messages** を追加します。\n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/messaging-endpoint.png\" alt-text=\"メッセージング エンドポイント。\":::\n\n1. **[適用]** を選択します。\n\n**Microsoft Teams チャネルを追加するには**\n\n1. **[ホーム]** に移動します。\n1. [ **最近使ったリソース** ] セクションで、ボットを開きます。\n1. 左側のウィンドウで [**チャネル**] を選択し、[**Microsoft Teams**] を選択します <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> 使用可能なチャネルの一覧から。    \n    \n    :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"チャネルで Teams を選択する\":::\n\n1. サービス利用規約に同意するチェック ボックスをオンにし、**[承諾する]** を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/terms-of-service.png\" alt-text=\"サービス条件。\":::\n\n1. **[保存]** を選択します。\n\n    Azure Bot Serviceでボットを正常に設定できました。これで、ボット サービス接続を設定する必要があります。\n"
- title: ボット サービス接続を設定する
  durationInMinutes: 1
  content: "Microsoft Teams で会話ボットを認証し、Teams アプリ パッケージを作成して組織にアップロードする方法を理解するようにボット サンプルを構成します。\n\n1. Visual Studio で appsettings.json を更新します。\n1. Visual Studio で manifest.json を更新し、エクスプローラーの zip ファイルに圧縮します。\n1. Visual Studio でソリューションを実行します。\n1. ボットを Teams にアップロードします。\n\n**会話ボットの appsettings を更新する**\n\n1. リポジトリ に移動します https://github.com/Microsoft/botbuilder-samples.git。\n1. [ **コード** ] を選択し、ドロップダウンを選択します。\n1. [ **ZIP のダウンロード] を選択します**。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/repo.png\" alt-text=\"リポジトリの複製。\":::\n\n1. ダウンロードしたリポジトリのパスを必ず書き留めます。\n1. **エクスプローラー** で、**57.teams-conversation-bot** **csharp_dotnetcore** >  **botbuilder-samples** > **サンプル** > に移動します。\n1. Visual Studio で **appsettings.json ファイルを** 開き、ボットの構成を更新します。\n\n    * のボット名を追加します `MicrosoftAppType`。\n    * は、ボットの構成ページから取得 `MicrosoftAppId` できます。 `MicrosoftAppPassword`は、前に保存したクライアント シークレット ID の値です。\n    * または は、 `MicrosoftAppTenantId` `UserId` Teams へのログインに使用するアカウントのリンクから取得できます。 イメージのパスに従って、 の `tenant id`リンクを取得します。\n    \n        :::image type=\"content\" source=\"./assets/images/conversation-bot/teams-link-new.png\" alt-text=\"Teams のテナント ID パス。\":::\n\n        :::image type=\"content\" source=\"./assets/images/conversation-bot/tenant-id.png\" alt-text=\"Teams リンクをコピーします。\":::\n\n        URL からテナント ID をコピーします。\n\n        :::image type=\"content\" source=\"./assets/images/conversation-bot/url-tenantid.png\" alt-text=\"TenantID。\":::\n\n1. **[保存]** を選択します。    \n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/appsettings.png\" alt-text=\"Appsettings Json。\":::\n\n**マニフェストを更新するには**\n\n1. **エクスプローラー** で、**57.teams-conversation-bot****TeamsAppManifest** **csharp_dotnetcore** >  **botbuilder-samples** > **サンプル** >  > に移動します。\n1. Visual Studio で **manifest.json** ファイルを開きます。\n1. **manifest.json** ファイルで **{id}、{botId}** を見つけて、Microsoft アプリ ID を追加します。\n1. ngrok URL を **validDomains** に追加し、除外 `https://` して保存します。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/manifest.png\" alt-text=\"マニフェスト。\":::\n\n1. **TeamsAppManifest** フォルダーの内容を圧縮して **、manifest.zip** を作成します。\n\n    > [!NOTE]\n    > には `manifest.zip` 、その中に追加のフォルダーを含めてはいけません。 zip フォルダー内に `manifest json` ソース ファイル、 `color` アイコン、アイコン `outline` が含まれている必要があります。\n    > Visual Studio でソリューションを実行し、組織または Teams アカウントのデモ テナントにマニフェストをアップロードします。\n\n**Visual Studio でソリューションを実行するには**\n\n1. Visual Studio を開きます。\n1. [ **ファイル] を** 選択し、[ **開く**] を選択します。\n1. [**プロジェクト/ソリューション] を** 選択して、`.csproj`エクスプローラーからファイルを開きます。\n1. **57.teams-conversation-bot** **csharp_dotnetcore** >  **botbuilder-samples** >  >  に移動します。\n1. [ファイル] を選択 `TeamsConversationBot.csproj` し、[ **スタートアップ プロジェクト** ] の一覧からボットを選択します。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/visual-studio.png\" alt-text=\"Visual Studio のデバッグ。\":::\n\n1. F5 キーを押してデバッグします。 ボットの準備ができたら、確認画面が表示されます。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/bot.png\" alt-text=\"ボットの準備完了画面。\":::\n\n**アプリを Teams にアップロードするには**\n\n1. Teams に移動します。\n1. **manifest.zip** アップロードするには、[**ストア] > [アプリの管理] を選択>カスタム アプリをアップロード** し、エクスプローラーのリポジトリから **manifest.zip** を開きます。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/upload-manifest.png\" alt-text=\"Teams でのマニフェストのアップロード。\":::\n\n1. [ **追加]** を選択して、Teams に会話ボットをインストールします。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/add-app-teams.png\" alt-text=\"Teams にアプリを追加します。\":::\n\n    これで、このボットと対話できます。\n"
- title: 会話ボットとの対話
  durationInMinutes: 2
  content: >
    Teams でボットを操作する場合は、メッセージを送信するか、コマンド 一覧からコマンドを選択します。 ボットは次の文字列に応答します。


    Teams の左側のウィンドウで省略記号 ●●●を選択し、一覧からアプリを選択します。 ボットには、次のように **提案が** 表示されます。


    :::image type="content" source="./assets/images/conversation-bot/suggestions.png" alt-text="候補カード。":::


    | MentionMe    | ようこそ表示   | MessageAllMembers |

    | --- | --- | --- |

    | :::image type="content" source="./assets/images/conversation-bot/mentionme-new.png" alt-text="Mentionme カード"lightbox="assets/images/conversation-bot/mentionme-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/show-welcome-new.png" alt-text="ウェルカム カードを表示する"lightbox="assets/images/conversation-bot/show-welcome-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/message-all-members-new.png" alt-text="MessageAllMembers カード"lightbox="assets/images/conversation-bot/message-all-members-new.png"::: |

    | **結果：** ボットがメッセージに応答し、ユーザーにメンションします。 | **結果：** ボットは、対話するためのウェルカム カードを送信します。 |  **結果：** ボットは、現在の会話の各メンバーに 1 対 1 のメッセージを送信します。 |

    | **有効なスコープ:** 個人用、グループ チャット、チーム チャット。 | **有効なスコープ:** 個人用、グループ チャット、チーム チャット。 |  **有効なスコープ:** 個人用、グループ チャット、チーム チャット。 |


    コマンド リストからオプションを選択するには、新規作成メッセージ領域に **「@TeamsConversationBot** 」と入力し、作成領域の上に「 **何ができるか」** と入力します。
- title: 課題の完了
  durationInMinutes: 1
  content: >
    このようなものを思いついたのですか?


    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="最終的な出力。"lightbox="assets/images/conversation-bot/final-output.png":::
- content: Microsoft Teams の会話ボットの使用を開始するためのチュートリアルを完了しました。
