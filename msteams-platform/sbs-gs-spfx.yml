### YamlMime:Tutorial
title: アプリを使用して最初のアプリをSPFx
metadata:
  title: Hello World with SPFx
  description: このチュートリアルでは、このチュートリアルで Hello World アプリをビルドする方法についてSPFx。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: '[概要] に戻る'
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 74ba4a768e50ec9da1b1475b5cbab66dfd8e6847
  ms.sourcegitcommit: 22c9e44437720d30c992a4a3626a2a9f745983c1
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "60721510"
items:
- durationInMinutes: 1
  content: >
    ページSharePoint Framework (SPFx) は、ページおよび Web パーツ モデルです。 クライアント側のアプリケーション開発を完全にSharePointします。 アプリを簡単にデータと統合し、SharePointを拡張Microsoft Teams。


    タブMicrosoft Teamsを使用して最初SPFxを構築することで、アプリ開発を開始します。


    :::image type="content" source="~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png" alt-text="このアプリを示す図には、3 つの機能があります。タブが強調表示されます。" border="false":::


    > [!NOTE]

    > 現在、Teams Toolkitは、アプリのタブ機能のみを提供Teams、Visual Studio CodeとSharePoint Framework。 ボットとメッセージ拡張機能の機能は使用できません。
- title: 前提条件
  durationInMinutes: 1
  content: "アプリの構築と展開に必要なツールの一覧を次に示します。\n\n| &nbsp; | インストール | using... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (推奨) または[Google Chrome](https://www.google.com/chrome/) | 開発者ツールを含むブラウザー。 |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript、TypeScript、または SharePoint Framework (SPFx) ビルド環境。 バージョン 1.55 以降を使用します。 |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graphエクスプローラーは、Microsoft のデータからクエリを実行できるブラウザー ベースのGraphです。 |\n| &nbsp; | [Teams の開発者ポータル](https://dev.teams.microsoft.com/) | Web ベースのポータルを使用して、組織や組織Teamsストアにアプリを構成、管理、配布Teamsします。 |\n\n> [!TIP]\n> Microsoft のデータをGraphする場合は、Microsoft データベース エクスプローラーについて説明し、ブックマークGraph必要があります。 このブラウザー ベースのツールを使用すると、アプリの外部で Microsoft Graphクエリを実行できます。\n</details>\n\n## <a name=\"prepare-development-environment\"></a>開発環境の準備\n\n必要なツールをインストールしたら、開発環境をセットアップします。\n\n### <a name=\"install-the-teams-toolkit\"></a>サーバーをインストールTeams Toolkit\n\nこのTeams Toolkitは、アプリのクラウド リソースをプロビジョニングおよび展開するツール、アプリ ストアに発行するツールを使用して開発プロセスを簡略化Teams役立ちます。 このツールキットは、Visual Studio Code、Visual Studio CLI (呼び出し) として使用できます `teamsfx` 。\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. [Visual Studio Codeを開き、[拡張機能] ビュー **(Ctrl + Shift + X**  /  **の [2014** 年 3 月] または [拡張機能 **>選択します**)。\n1. 検索ボックスに「Teams Toolkit」**と入力します**。\n1. [インストール **] の** 横にある [インストール] をTeams Toolkit。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscode.png\" alt-text=\"図は、拡張機能Teams Toolkitを示しています。\":::\n\n    インストールTeams Toolkitすると、Visual Studio Codeアイコンが表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"図は、サイドバー Teams ToolkitアイコンをVisual Studio Codeしています。\":::\n\nまた、マーケットプレースのTeams ToolkitをVisual Studio Code[できます](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension)。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nTeamsFx CLI をインストールするには、パッケージ マネージャーを `npm` 使用します。\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\n構成によっては、CLI のインストールに使用 `sudo` する必要がある場合があります。\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nこの状態は、Linux および macOS システムで一般的です。\n\nnpm グローバル キャッシュを PATH に追加してください。 通常、この手順は、ユーザーのインストーラーの一部Node.jsされます。  \n\nコマンドで CLI を使用 `teamsfx` できます。 コマンドを実行して動作を確認します `teamsfx -h` 。\n\n> [!CAUTION]\n> PowerShell ターミナルで TeamsFx を実行する前に、PowerShell の \"リモート署名済み\" 実行ポリシーを有効にする必要があります。\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>開発テナントTeams設定する\n\nテナント **は**、チャット、ファイルの共有、会議の実行を行う、Teamsのスペース、または組織のコンテナーに似たものになります。 この領域は、アプリのサイドロードとテストも行う場所です。 テナントを使用して開発する準備ができていることを確認します。\n\n### <a name=\"enable-sideloading-option\"></a>サイドローディング オプションを有効にする\n\nアプリを作成した後、アプリを配布せずにアプリTeams読み込む必要があります。 このプロセスはサイドローディングと呼ばれる。 このオプションを表示するには、Microsoft 365アカウントにサインインします。\n  \nテナントが既に存在し、管理者アクセス権を持っていますか? 本当に行うのか確認しましょう!\n\n次の手順でアプリをサイドロードTeams。\n\n1. クライアントで、[Teams] アイコン **を選択** します。\n1. [アプリ **の管理] を選択します**。\n1. カスタム アプリを作成する **アップロード探します**。 オプションが表示された場合は、サイドローディング アプリが有効になります。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"図は、カスタム アプリをアプリにアップロードするTeams。\":::\n\n    > [!NOTE]\n    > カスタム Teamsをアップロードするオプションが表示されていない場合は、管理者にTeamsしてください。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>開発者テナントに無料Teamsを作成する (オプション)\n\n開発者アカウントを持Teams場合は、無料で利用できます。 開発者プログラムMicrosoft 365参加してください。\n\n1. 開発者プログラムの[Microsoft 365に移動します](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. [今 **すぐ参加] を** 選択し、画面の指示に従います。\n1. ようこそ画面で **、[E5 サブスクリプションの設定] を選択します**。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"開発者プログラムにサインアップした後に表示されるMicrosoft 365例。\":::\n\n1. セットアップしTeams管理者アカウントを使用してサインインします。 カスタム アプリ オプションがアップロード **が設定** Teams。\n\n## <a name=\"sharepoint-collection-site-administrator-account\"></a>SharePointコレクション サイト管理者アカウント\n\nサイト コレクションの管理者アカウントSharePointしてください。 このアカウントは、ホスティングの展開時に必要になります。 開発者プログラム のテナントMicrosoft 365場合は、その時点で作成した管理者アカウントを使用できます。\n\nこれで、すべてのツールが手に入り、アカウントを設定しました。 次に、開発環境をセットアップし、構築を開始しましょう。\n"
- title: タブ アプリのプロジェクト ワークスペースを作成する
  durationInMinutes: 1
  content: "このチュートリアルでは、アプリを使用してアプリを作成、ビルド、展開するTeams手順をSharePoint Framework SPFx。 このアプリにはタブ機能があります。  \n\nこのチュートリアルでは、次の情報を学習します。\n1. [プロジェクトを使用して新しいプロジェクトをセットアップするTeams Toolkit](#create-your-project)\n1. [アプリのディレクトリ構造について](#take-a-tour-of-the-source-code)\n\n## <a name=\"create-your-project\"></a>プロジェクトを作成する\n\n前提条件が満たされている場合は、まず始めましょう。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Visual Studio Code を開きます。\n1. サイドバーのTeams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: アイコンをVisual Studio Codeします。\n\n1. **[新しいプロジェクトの作成]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Teams ツールキットのサイド バーにある [新しいプロジェクトの作成] リンクの位置\":::。\n\n1. **[新しい Teams アプリを作成]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-new-project-intro.png\" alt-text=\"[新しいプロジェクトの作成] のウィザードの開始\":::。\n\n1. [タブ **] を選択し****、[OK] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-project-capabilities.png\" alt-text=\"新しいアプリに機能を追加する方法を示すスクリーンショット\":::。\n\n1. フロントエンド **SharePoint FrameworkタイプとしてSPFx (SPFx)** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-project-hosting.png\" alt-text=\"新規アプリのホスティングを選択する方法を示すスクリーンショット\":::。\n\n1. [**フレームワークReact]** を **選択** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-which-framework.png\" alt-text=\"Select Framework\":::\n\n1. **[Enter] を** 選択して、既定の **Web パーツ名を受け入れる**。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/webpart-name.png\" alt-text=\"Webpart 名を入力する\":::\n\n1. **[Enter] を** 選択して、既定の **Web パーツの説明を受け入れる**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/webpart-description.png\" alt-text=\"Webpart の説明を入力する\":::\n\n1. ワークスペース フォルダーを選択します。 このToolkitプロジェクトのワークスペース フォルダーにフォルダーを作成します。\n\n1. `HelloWorld` のように、アプリに適した名前を入力します。 アプリの名前が英数字である必要があります。  **[Enter] を選択** して続行します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-app-name.png\" alt-text=\"アプリSPFxを入力する\":::\n\n    アプリTeams数秒で作成されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-app-created.png\" alt-text=\"SPFx作成されたアプリ\":::\n\n<details>\n<summary>アプリを作成する簡単なTeamsまとめです。</summary>\nアプリを作成するためのこの短い要約Teamsしてください。\n\n![アプリをTeamsする](~/assets/videos/spfx-tab-app.gif)\n</details>\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\n`teamsfx` CLI を使用して、最初のプロジェクトを作成します。  プロジェクト フォルダーを作成するフォルダーから開始します。\n\n``` bash\nteamsfx new\n```\n\nCLI では、プロジェクトを作成するためのいくつかの質問を行います。 すべての質問には、回答に関する指示が含まれています。たとえば、矢印キーを使用してオプションを選択します。 質問に回答した場合は **、[Enter] を選択して** 確認します。\n\n1. **[新しい Teams アプリを作成]** を選択します。\n1. [タブ **] を選択します**。\n1. [SharePoint Framework **(SPFx)** フロントエンド ホスティング] を選択します。\n1. [フレームワーク **React** 選択します。\n1. Web **パーツ名の Enter** **キーを押します**。\n1. Web **パーツの説明** に **対して Enter キーを押します**。\n1. **Enter** キーを押して、既定のワークスペース フォルダーを選択します。\n1. `helloworld` のように、アプリに適した名前を入力します。  アプリの名前は、英数字のみで構成されている必要があります。\n\n  すべての質問に回答すると、プロジェクトが作成されます。\n\n---\n\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>ソース コードのツアーを開始する\n\nプロジェクトの作成後、基本的な個人用アプリを構築するためのコンポーネントがあります。 プロジェクト ディレクトリとファイルは、プロジェクト の [エクスプローラー] 領域で表示Visual Studio Code。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-project-files-spfx.png\" alt-text=\"Visual Studio Code で個人用アプリ向けのアプリのプロジェクト ファイルを表示したスクリーンショット。\" border=\"false\":::\n\nこのToolkit、タブ機能のプロジェクト ディレクトリにスキャフォールディングを作成します。 \n\nこのディレクトリ内の他のアイテムの中で、Teams Toolkit含まれます。\n\n- `fx`: ディレクトリ内のアプリの `.fx` 状態。  \n- appPackage: には、アプリ のアイコンが含 `color.png` まれているとします `outline.png` 。\n- `manifest.source.json`: 開発者ポータルに発行するアプリ マニフェストが含Teams。\n- `settings.json`: プロジェクトの作成時に選択した設定です。\n\nWeb パーツ プロジェクトSPFx選択すると、次のファイルが UI に関連します。\n\n- `SPFx/src/webparts/{webpart}`: Web パーツSPFx含まれる。\n- `.vscode/launch.json`: デバッグ パレットで使用できるデバッグ構成について説明します。\n"
- title: タブ アプリをビルドする
  durationInMinutes: 1
  content: "プロジェクト ワークスペースをユーザー設定で設定したTeams Toolkit、タブ プロジェクトをビルドします。 アカウントにサインインするMicrosoft 365があります。\n\nこのページでは、最初のアプリを [ビルドして実行する方法について学習します。](#build-and-run-your-app-locally-in-visual-studio-code)\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>アカウントにサインインMicrosoft 365する\n\nアカウントをMicrosoft 365して、アカウントにサインインTeams。 開発者プログラムのテナントMicrosoft 365している場合は、登録時に設定した管理者アカウントMicrosoft 365です。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Visual Studio Code を開きます。\n1. サイドバーのTeams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: アイコンを選択します。  \n1. **[M365 にサインインする] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/account-signin.png\" alt-text=\"ユーザーにサインインする場所を示すMicrosoft 365。\" border=\"false\":::\n\n    既定の Web ブラウザーが開き、アカウントにサインインできます。\n\n1. 資格情報を使用してMicrosoft 365アカウントにサインインします。\n1. プロンプトが表示されたらブラウザーを閉じ、ブラウザーに戻Visual Studio Code。\n1. データ内のTeams ToolkitにVisual Studio Code。\n\n    サイドバー **の [ACCOUNTS]** セクションには、アカウント名Microsoft 365表示されます。\n\n    これで、アプリをビルドしてローカルで実行する準備ができました。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cline)\n\n- TeamsFx CLI を使用Microsoft 365サインインして、次のコマンドを実行します。\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    既定の Web ブラウザーが開き、アカウントにサインインできます。 資格情報を使用してアカウントにサインインします。 プロンプトが表示されたら、ブラウザーを閉じます。\n\n    アカウント ログインは、ユーザーと TeamsFx CLI Visual Studio Code共有されます。\n\n    これで、開発環境が構成されたので、最初のアプリを作成、ビルド、およびTeamsできます。\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Visual Studio Code でアプリをローカルにビルドして実行する\n\nアプリをローカルに構築して実行するには、以下のようにします。\n\n1. [Visual Studio Code F5 キー **を選択** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-debug-local.png\" alt-text=\"ローカル ワークベンチでアプリをSPFxする方法を示すスクリーンショット。\":::\n\n    > [!NOTE]\n    > アプリを初めて実行すると、すべての依存関係がダウンロードされ、アプリがビルドされます。  ビルドが完了すると、ブラウザー ウィンドウが自動的に開SharePointワークベンチが読み込まれます。  このプロセスの完了には 3 ~ 5 分かかる場合があります。\n\n    ワークベンチがSharePoint後:\n\n    >[!NOTE]\n    > ツールキットでは、必要に応じてローカル証明書をインストールするようメッセージが表示されます。 この証明書により、Teams は `https://localhost` からアプリケーションを読み込むことができます。 以下のダイアログが表示されたら、「はい」を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"ローカル ホストからアプリケーションを読み込むTeams SSL 証明書をインストールするプロンプトを示すスクリーンショット。\":::\n\n1. [Web **パーツとアイコンの追加] を** 選択して Web パーツを追加します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-workbench-addpart.png\" alt-text=\"ポップアップと一緒にSPFxワークベンチを表示する Web パーツを追加するスクリーンショット。\":::\n\n1. メニューから Web パーツを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-workbench-addpart2.png\" alt-text=\"ポップアップで実行されているSPFxワークベンチを示すスクリーンショットで、Web パーツの選択を追加します。\":::\n\n    アプリが実行されている必要があります。  アプリは、他の web パーツ (ブレークポイントSPFxなど) としてデバッグできます。\n\n    > [!TIP]\n    > ブラウザー ウィンドウの render メソッドにブレークポイントを配置し `SPFx/src/webparts/{webpart}/{webpart}.ts` 、再読み込みしてみてください。 VS Codeコード内のブレークポイントで停止します。\n"
- title: 最初のアプリをTeamsする
  durationInMinutes: 1
  content: "Tab 機能を使用してアプリを作成、ビルド、および実行Teams学習しました。 最後の手順は、アプリを展開します。\n\nタブ機能を持つ最初のアプリを、タブ機能を使用してSharePointにTeams Toolkit。\n\nこのページでは、次の方法について学習します。\n1. [最初のアプリを展開する](#deploy-your-app-to-sharepoint)\n1. [アップロードパッケージをインストールするSharePoint](#upload-the-app-package-to-sharepoint)\n\n## <a name=\"deploy-your-app-to-sharepoint\"></a>アプリをアプリに展開SharePoint\n\n展開にSharePointアプリ カタログが存在することを確認します。 存在しない場合は、作成 [します](/sharepoint/use-app-catalog)。 アプリ カタログを作成するには、最大で 15 分かかる場合があります。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Visual Studio Code を開きます。\n1. サイドバーからTeams Toolkitアイコンを選択してTeamsします。\n1. [クラウド **でプロビジョニング] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/provisioning-commands.png\" alt-text=\"プロビジョニング コマンドを示すスクリーンショット\":::\n\n    このToolkit右下隅の進行状況を更新します。 数秒後に、次の通知が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/provision-complete.png\" alt-text=\"プロビジョニング完了ダイアログを示すスクリーンショット。\":::\n\n1. プロビジョニングが完了したら、[クラウドに **展開する] を選択します**。\n\n    アプリToolkitアプリは自動的に展開されません。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/deploying-command.png\" alt-text=\"展開コマンドを表示するスクリーンショット\":::\n\n1. 手動 **でビルドSharePoint展開** するように求めるメッセージが表示されたら、[パッケージのビルド] を選択し、[パッケージのビルド **SharePointします**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/build-sharepoint-package.png\" alt-text=\"[Sharepoint パッケージのビルド] ダイアログのスクリーンショット\":::\n\n    アプリ パッケージがビルドされ、パッケージをサイトにアップロードするメッセージSharePointできます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-app-package-complete.png\" alt-text=\"Sharepoint アプリ パッケージ メッセージのスクリーンショット\":::\n\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nターミナル ウィンドウで次の設定を行います。\n\n1. `teamsfx provision` を実行します。\n\n  ``` bash\n  teamsfx provision\n  ```\n\n1. `teamsfx deploy` を実行します。\n\n  ``` bash\n  teamsfx deploy\n  ```\n\n1. メッセージが表示されたら、[パッケージの **ビルドSharePoint選択します**。\n\n---\n\n## <a name=\"upload-the-app-package-to-sharepoint\"></a>アップロードパッケージをインストールするSharePoint\n\n次のパッケージをSharePointします `SPFx/sharepoint/solution` 。 アップロードを次の方法でSharePoint。\n\n1. コンソールにMicrosoft 365 管理します。\n1. アプリ カタログSharePoint開きます。\n\n    1. を `https://admin.microsoft.com/AdminPortal/Home` 開きます。\n    1. [**管理センター] で**、**管理センター** SharePoint選択します。\n    1. サイドバー メニュー **から [その他の** 機能] を選択します。\n    1. [アプリ **] で [開く** ] **を押します**。\n    1. [アプリ **カタログ] を選択します**。\n    1. カタログ サイトを自動的に作成するオプションを選択し **、[OK] を選択します**。\n\n1. [アプリ **の配布] を選択SharePoint。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-distribute-apps.png\" alt-text=\"アプリを配布SharePoint。\" border=\"true\":::\n\n1. [アップロード]**を選択します**。\n\n1. [ファイル **の選択] を選択します**。\n\n1. プロジェクト内 `helloworld.sppkg` のフォルダー内 `SPFx/sharepoint/solution` のファイルを検索します。 [**開く**]を選択します。\n\n1. **[OK]** を選択します。\n\n    Hello World ソリューションを信頼する場合は、選択を求めるメッセージが表示されます。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-upload-trust-msg-box.png\" alt-text=\"展開のメッセージを信頼します。\" border=\"true\":::\n\n1. [組織内のすべての **サイトでこの** ソリューションを使用できる] が選択されている場合は、[展開] を選択 **します**。\n\n1. [ファイル] **タブを選択** します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-appcatalog-filestab.png\" alt-text=\"[アプリ カタログ] の [ファイル] タブSharePoint選択します。\" border=\"true\":::\n\n1. 展開したパッケージを選択し、[同期して展開 **する] をTeams。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-sync-to-teams.png\" alt-text=\"[アプリ カタログ] の [ファイル] タブSharePoint選択します。\" border=\"true\":::\n\n    > [!Note]\n    > 同期プロセスTeams数分かかる場合があります。 ブラウザーの右側に、アプリが正常に同期されたことを示すメッセージが表示Teams。\n\n1. アプリケーションを開Teams (またはサインイン時 `https://teams.microsoft.com` )。\n1. サイドバーでトリプルドットを選択し、[すべてのアプリ] **を選択します**。  \n\n    アプリは、組織カテゴリ用 **に構築されたアプリに配置** されます。 そこからアプリを追加できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-app-in-teams.png\" alt-text=\"アプリ内のアプリを示すスクリーンショットTeams\" border=\"true\":::\n\n    おめでとうございます! これで、アプリをアプリに追加するTeams。"
