### YamlMime:Tutorial
title: SPFx を使用して最初のアプリをビルドする
metadata:
  title: SPFx を使った Hello World
  description: このチュートリアルでは、SPFx を使用して Hello World アプリをビルドする方法について説明します。 ステップ バイ ステップ ガイドは、ツールキットのインストール、開発テナントのセットアップ、サイドローディングの有効化に役立ちます。
  audience: Developer
  level: Beginner
  ms.date: 05/09/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 開始の概要に戻る
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8f942af2c34711806ced9d2c39e42bc276ffceb8
  ms.sourcegitcommit: bb15ce26cd65bec90991b703069424ab4b4e1a61
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 10/28/2022
  ms.locfileid: "68772315"
items:
- durationInMinutes: 1
  content: "SharePoint Framework (SPFx) は、Microsoft Teams と SharePoint 用のクライアント側ソリューションを構築するための開発モデルです。 SPFx Teams アプリは、Microsoft 365 でホストされます。 クライアント側の SPFx ソリューションの開発とホストが完全にサポートされます。 SharePoint Framework ソリューションは、以下のものと統合することができます。\n\n- SharePoint データと Microsoft Teams の拡張。 \n- Azure Active Directory でセキュリティ保護された組織の API。\n\nこのチュートリアルでは、タブ機能を使用して最初のアプリをビルドすることにより、SPFx を使った最初の Microsoft Teams アプリの開発を開始します。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab1.png\" alt-text=\"このアプリには 3 つの機能があることを示す図。タブが強調表示されています。\":::\n\n> [!NOTE]\n> Teams Toolkit では、現在、Visual Studio Code と SharePoint Framework を使用する Teams アプリでタブ機能のみが提供されています。 ボットとメッセージ拡張機能の機能は使用できません。\n"
- title: 前提条件
  durationInMinutes: 1
  content: "アプリをビルドしてデプロイするために必要なツールの一覧を次に示します。\n\n| &nbsp; | インストール | 使用するには... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript または TypeScript、ビルド環境。 最新バージョン​​を使用します。 || &nbsp; | [Teams ツールキット](#install-the-teams-toolkit) | アプリのプロジェクト スキャフォールディングを作成する Microsoft Visual Studio Code 拡張機能。 バージョン 4.0.0 を使用します。|\n| &nbsp; | [Teams ツールキット](#install-the-teams-toolkit) | アプリのプロジェクト スキャフォールディングを作成する Microsoft Visual Studio Code 拡張機能。 バージョン 4.0.0 を使用します。|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | バックエンド JavaScript ランタイム環境。 バージョン 14 または 16 を使用します。|\n| &nbsp; | [Microsoft&nbsp;Edge](https://www.microsoft.com/edge) (推奨) または [Google Chrome](https://www.google.com/chrome/) | 開発者ツールを備えたブラウザー。 |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph エクスプローラー。Microsoft Graph データからクエリを実行できるブラウザー ベースのツール。 |\n| &nbsp; | [Teams の開発者ポータル](https://dev.teams.microsoft.com/) | Teams アプリを構成、管理、組織や Teams ストアなどに配布するための Web ベースのポータル。 |\n\n> [!TIP]\n> Microsoft Graph データを操作する場合は、Microsoft Graph エクスプローラーについて学び、ブックマークする必要があります。 このブラウザー ベースのツールを使用すると、アプリの外部で Microsoft Graph に対してクエリを実行できます。\n</details>\n\n## <a name=\"prepare-development-environment\"></a>開発環境を準備する\n\n必要なツールをインストールしたら、開発環境を設定します。\n\n### <a name=\"install-the-teams-toolkit\"></a>Teams Toolkit をインストールする\n\nTeams Toolkit を使用すると、アプリのクラウド リソースのプロビジョニングとデプロイ、Teams ストアへの公開などを行うツールにより、開発プロセスを簡略化できます。 このツールキットは、Visual Studio Code、Visual Studio で、または (`teamsfx` という) CLI として使用できます。\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Visual Studio Code を開き、**[拡張機能]** ビュー (**Ctrl + Shift + X** / **⌘⇧-X** または **[表示] > [拡張機能]**) を選択します。\n1. 検索ボックスに、「**Teams Toolkit**」と入力します。\n1. Teams Toolkit の横にある **[インストール]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-install-toolkit-vscode.png\" alt-text=\"microsoft ツールキット\":::\n\n    インストールされると、Visual Studio Code のサイド バーに [Teams Toolkit] アイコンが表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"図は、Visual Studio Code サイド バーの Teams Toolkit アイコンを示しています。\":::\n\nTeams Toolkit は、[Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension) にもあります。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nTeamsFx CLI をインストールするには、`npm` パッケージ マネージャーを使用します。\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\n構成によっては、CLI をインストールするために `sudo` を使用しなければならないこともあります。\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nLinux および macOS システムではこの条件はより一般的です。\n\nnpm グローバル キャッシュが PATH に追加されていることを確認します。 この手順は通常、Node.js インストーラーの一部として行われます。  \n\nCLI で `teamsfx` コマンドを指定して使用できます。 `teamsfx -h` を実行して、このコマンドが動作していることを確認します。\n\n> [!CAUTION]\n> PowerShell ターミナルで TeamsFx を実行する前に、PowerShell で \"remote signed\" 実行ポリシーを有効にする必要があります。\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Teams 開発テナントを設定する\n\n**テナント** とは、チャット、ファイルの共有、会議の実行を行う Teams の組織のスペースまたはコンテナーのようなものです。 このスペースは、アプリをサイドロードしてテストする場所でもあります。 テナントを使って開発する準備ができているかどうかを確認しましょう。\n\n### <a name=\"enable-sideloading-option\"></a>サイドローディングのオプションを有効にする\n\nアプリを作成したら、アプリを配布せずに Teams に読み込む必要があります。 このプロセスはサイドローディングと呼ばれます。 このオプションを表示するには、Microsoft 365 アカウントにサインインします。\n  \n> [!NOTE]\n> サイドローディングは、Teams のローカル環境でアプリをプレビューおよびテストするために必要です。 有効になっていない場合は、Teams でアプリをローカルでプレビューしてテストすることはできません。\n\n既にテナントがあり、管理者アクセス権がありますか? 実際にあるかどうかを確認しましょう。\n\nTeams でアプリをサイドロードできるかどうかを確認します。\n\n1. Teams クライアントで、**[Store]** アイコンを選択します。\n1. **[アプリの管理]** を選択します。\n1. **[カスタム アプリのアップロード]** オプションを探します。 オプションが表示された場合は、アプリのサイドローディングが有効です。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-custom-new1.png\" alt-text=\"ボット ホーム\":::\n\n    > [!NOTE]\n    > Teams でカスタム アプリをアップロードするオプションが表示されない場合は、Teams 管理者に問い合わせてください。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>無料の Teams 開発者テナントを作成する (省略可能)\n\nTeams 開発者アカウントをお持ちでない場合は、無料で取得できます。 Microsoft 365 開発者プログラムに参加します。\n\n1. [Microsoft 365 開発者プログラム](https://developer.microsoft.com/microsoft-365/dev-program)に移動します。\n1. **[今すぐ参加]** を選択し、画面の指示に従います。\n1. ようこそ画面で、**[E5 サブスクリプションの設定]** を選択します。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-microsoft-365.png\" alt-text=\"Microsoft 365\":::\n\n1. 設定した管理者アカウントを使用して Teams にサインインします。 Teams に **[カスタム アプリのアップロード]** オプションがあることを確認します。\n\n## <a name=\"sharepoint-collection-site-administrator-account\"></a>SharePoint コレクション サイトの管理者アカウント\n\nSharePoint サイト コレクションの管理者アカウントがあることを確認します。 ホスティングのデプロイ時にこのアカウントが必要になります。 Microsoft 365 開発者プログラム テナントを使用している場合は、そのときに作成した管理者アカウントを使用することができます。\n\nこれで、すべてのツールの準備とアカウントの設定ができました。 次に、開発環境を設定し、ビルドを開始しましょう。\n"
- title: タブ アプリ用のプロジェクト ワークスペースを作成する
  durationInMinutes: 1
  content: "このチュートリアルでは、SharePoint Framework (SPFx) を使用して Teams アプリを作成、ビルド、デプロイする手順について説明します。 このアプリにはタブ機能が備わります。  \n\nこのチュートリアルでは、次の方法について学ぶことができます:\n1. [Teams Toolkit を使用して新しいプロジェクトを設定する方法](#create-your-project)\n1. [アプリのディレクトリ構造について](#take-a-tour-of-the-source-code)\n\n> [!IMPORTANT]\n> プロジェクト ワークスペースの作成を開始する前に、Microsoft 365 または Azure のアカウントにサインインしていないことを確認してください。\n\n## <a name=\"create-your-project\"></a>プロジェクトを作成する\n\n前提条件を満たしている場合は開始します。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Visual Studio Code を開きます。\n1. Visual Studio Code のサイド バーで Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: アイコンを選択します。\n\n1. **[新しい Teams アプリを作成]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-project.png\" alt-text=\"Teams ツールキットのサイド バーにある [新しいプロジェクトの作成] リンクの位置\":::。\n\n1. **[新しい Teams アプリを作成]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-new-project-intro.png\" alt-text=\"[新しいプロジェクトの作成] のウィザードの開始\":::。\n\n1. [ **(SPFx)] タブを選択します**。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/new-spfxTab-spfx.png\" alt-text=\"新しい spfx タブ spfx\":::\n\n1. **[フレームワーク]** セクションで **[React]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-react-page.png\" alt-text=\"ボット ホーム\":::\n\n1. **[Enter]** を選択して既定の **[Web パーツ名]** を受け入れます。\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-helloworld.png\" alt-text=\"ボット ホーム\":::\n\n1. アプリに適した名前を入力します (`HelloWorld` など)。 アプリの名前が英数字であることを確認します。 \n   **Enter** キーを押します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-another-helloworld.png\" alt-text=\"ボット ホーム\":::\n\n1. 必要な **フォルダー** を選択して、ワークスペース フォルダーを選択します。  \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-folder.png\" alt-text=\"フォルダーを選択する方法を示すスクリーンショット。\":::\n\n1. アプリに適した **アプリケーション名** (など `HelloWorld`) を入力します。 **[Enter]** キーを押します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/application-name.png\" alt-text=\"フォルダーを選択する方法を示すスクリーンショット。\":::\n\n    アプリが作成されると、Teams Toolkit に次のメッセージが表示されます。\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/preview-project.png\" alt-text=\"localdebug\":::\n    \n    [ **ローカル デバッグ]** を選択して、プロジェクトをプレビューします。\n\n    Teams Toolkit は Yeoman CLI を呼び出して Teams アプリをスキャフォールディングし、必要な依存関係をプロセスにインストールします。</br>\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-tooklit-updated.png\" alt-text=\"ボット ホーム\":::\n\n    スキャフォールディングには数分間かかります。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/sbs-share-point.png\" alt-text=\"ボット ホーム\":::\n      \n\n<details>\n<summary>Teams アプリの作成に関する簡単なまとめ。</summary>\n\n![Teams アプリを作成する](~/assets/videos/spfx-tabapp-preview.gif)\n</details>\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\n`teamsfx` CLI を使用して、最初のプロジェクトを作成します。  プロジェクト フォルダーを作成するフォルダーから開始します。\n\n``` bash\nteamsfx new\n```\n\nCLI では、プロジェクトを作成するためのいくつかの質問を行います。 各質問には、それを回答する方法に関する説明 (「オプションを選択するには方向キーを使用します」 など) が含まれています。 質問に回答したら、**[Enter]** を選択して確認します。\n\n1. **[新しい Teams アプリを作成]** を選択します。\n2. **[タブ]** を選択します。\n3. **[SharePoint Framework (SPFx)]** フロントエンド ホスティングを選択します。\n4. **[React]** フレームワークを選択します。\n5. **[Web パーツ名]** の **[Enter]** を押します。\n6. `helloworld` のように、アプリに適した名前を入力します。 アプリの名前は、英数字のみである必要があります。\n\n\n   すべての質問に答えると、プロジェクトが作成されます。\n\n---\n\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>ソース コードのツアーを開始する\n\nプロジェクトが作成されると、基本的な個人用アプリをビルドするためのコンポーネントが準備できたことになります。 プロジェクトのディレクトリとファイルは、Visual Studio Code の [エクスプローラー] 領域で表示することができます。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-project-files-spfx.png\" alt-text=\"Visual Studio Code で個人用アプリ向けのアプリのプロジェクト ファイルを表示したスクリーンショット。\":::\n\nToolkit によって、タブ機能のプロジェクト ディレクトリにスキャフォールディングが作成されます。 \n\nこのディレクトリ内のその他の項目として、以下のものが Toolkit に含まれています。\n\n- `fx`: `.fx` ディレクトリ内のアプリの状態です。  \n- templates/resources: アプリ アイコンである `color.png` と `outline.png` が含まれています。\n- `manifest.local.template.json`: ローカル デバッグ用のアプリ マニフェストが含まれています。\n- `manifest.remote.template.json`: Developer Portal for Teams に公開するアプリ マニフェストが含まれています。\n- `.fx/configs/projectSettings.json`: プロジェクト作成時に選択した設定です。\n\nSPFx Web パーツ プロジェクトを選択したため、使用する UI に関連するファイルは以下のものとなります。\n\n- `SPFx/src/webparts/{webpart}`: SPFx Web パーツが含まれています。\n- `.vscode/launch.json`: デバッグ パレットで使用できるデバッグ構成を指定します。\n"
- title: タブ アプリを作成する
  durationInMinutes: 1
  content: "Teams Toolkit を使用してプロジェクト ワークスペースを設定したら、次にタブ プロジェクトをビルドします。 Microsoft 365 アカウントにサインインする必要があります。\n\nこのページでは、 [最初のアプリをビルドして実行](#build-and-run-your-app-locally-in-visual-studio-code)する方法について説明します。\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Microsoft 365 アカウントにサインインする\n\nMicrosoft 365 アカウントを使用して Teams にサインインします。 Microsoft 365 開発者プログラム テナントを使用している場合は、Microsoft 365 アカウントは、登録中に設定した管理者アカウントです。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Visual Studio Code を開きます。\n1. サイド バーで Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: アイコンを選択します。\n1. **[M365 にサインインする]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/account-signin-spfx.png\" alt-text=\"Microsoft 365 にサインインする場所を示すスクリーンショット。\":::\n\n    既定の Web ブラウザーが開き、アカウントにサインインできます。\n\n1. 自分の資格情報を使用して Microsoft 365 アカウントにサインインします。\n1. メッセージが表示されたら、ブラウザーを閉じて Visual Studio Code に戻ります。\n1. Visual Studio Code 内の Teams Toolkit に戻ります。\n\n    サイドバーの **[アカウント]** セクションに、Microsoft 365 アカウントの名前が表示されます。\n\n    これで、アプリをビルドし、ローカルで実行する準備が整いました。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cline)\n\n   TeamsFx CLI を使用して Microsoft 365 にサインインします。\n\n``` bash\n    teamsfx account login m365\n```\n\n\n既定の Web ブラウザーが開き、アカウントにサインインできます。 自分の資格情報を使用してアカウントにサインインします。 メッセージが表示されたらブラウザーを閉じます。\n\nアカウント ログインは、Visual Studio Code と TeamsFx CLI で共有されます。\n\n開発環境が構成されたので、最初の Teams アプリを作成、ビルド、デプロイできます。\n\n ---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Visual Studio Code でアプリをローカルにビルドして実行する\n\nアプリをローカルに構築して実行するには、以下のようにします。\n\n1. Visual Studio Code サイドバーで **[実行とデバッグ]** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: アイコンを選択します。\n\n1. 次のいずれかのオプションを選択し、アプリの実行とデバッグを行います。\n\n    - **Teams ワークベンチ (Edge)**\n    - **Teams ワークベンチ (Chrome)**\n\n        :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-debug.png\" alt-text=\"ボット ホーム\":::\n\n1. 再生ボタンを選択するか **F5** キーを押してデバッグを開始します。\n    > [!NOTE]\n    > アプリを初めて実行すると、すべての依存関係がダウンロードされ、アプリがビルドされます。 ビルドが完了すると、ブラウザー ウィンドウが自動的に開き、SharePoint ワークベンチが読み込まれます。 このプロセスが完了するのに数分かかる場合があります。\n\n    ローカル証明書のインストールを求めるメッセージが表示される場合があります (必要な場合)。 この証明書により、Teams は `https://localhost` からアプリケーションを読み込むことができます。 \n    \n1. 次のダイアログが表示されたら、**[はい]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Microsoft 365\":::\n\n    Teams Web クライアントがブラウザー ウィンドウで開かれます。\n\n1. ローカル マシン上の Teams にアプリをサイドロードするように求められたら、**[追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-app-local-debug.png\" alt-text=\"アプリを Teams に追加する\":::\n\n1. Teams デスクトップに切り替えるよう求められた場合は、Web アプリ版を選択します。 標準的な Web 開発環境では HTML、CSS、JavaScript のコードを確認することができます。\n\n1. アプリが Teams にサイドロードされる前にデバッグ スクリプトを読み込むことを求めるメッセージが表示された場合は、**[デバッグ スクリプトを読み込む]** を選択します。\n\n    おめでとうございます。最初のアプリが Teams で実行されています。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-app-added.png\" alt-text=\"ローカル環境の完成したアプリのスクリーンショット\":::\n\n    これで、アプリが実行されているはずです。 アプリは、他の SPFx Web パーツと同様にデバッグ (ブレークポイントの設定など) することができます。\n\n> [!TIP]\n> `SPFx/src/webparts/{webpart}/{webpart}.ts` のレンダリング メソッドにブレークポイントを配置し、ブラウザー ウィンドウを再度読み込んでみます。 Visual Studio Code は、コード内のブレークポイントで停止します。\n\n<details>\n<summary>アプリのデバッグにローカル ワークベンチを使用した場合の動作について説明します。</summary>\n\n**ローカル ワークベンチ** は、Visual Studio Code でアプリを実行、デバッグする際の既定のオプションです。 このチュートリアルでは Teams ワークベンチを使用してアプリをデバッグすることが推奨されますが、ローカル ワークベンチを選択して Web パーツのレイアウトを調べることができます。\n\n> [!NOTE]\n> このインターフェイスは、Web パーツがモバイルまたはタブレットでどのように表示されるかを調べることのみを目的としたものです。 それを表示させるには、アプリにそれを含めるためのコードを記述してデプロイする必要があります。 \n\nローカル ワークベンチを使用して Web パーツのレイアウトを調べるには、以下を行います。\n\n1. **[ローカル ワークベンチ]** を選択し、**F5** キーを押してアプリを実行およびデバッグします。\n    \n    **SharePoint Web パーツ ワークベンチ** がブラウザーで開き、Web パーツの追加、編集、削除ができるようになります。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-workbench-addpart.png\" alt-text=\"表示されている Web パーツを追加するためのポップアップで実行されている SPFx ワークベンチを示すスクリーンショット。\":::\n\n1. **[新しい列に Web パーツを追加する +]** アイコン を選択して Web パーツを追加します。\n\n1. メニューから Web パーツを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-workbench-addpart2.png\" alt-text=\"ポップアップで実行されている SPFx ワークベンチを示すスクリーンショット。Web パーツの選択を追加します。\":::\n\n1. **[新しいセクションを追加する +]** アイコンを選択して Web パーツの列レイアウトを選択します。\n\n1. このインターフェイスを使用して、Web パーツのさまざまなレイアウトを試してみましょう。\n    \n    - レイアウトの **Web パーツ データ** を表示してみる。\n    - さまざまなレイアウト、テキスト、色などに変更してみる。\n    - **[レビュー]** ボタンを使って Web パーツを表示してみる。 \n    - さまざまな **[モバイル]** または **[タブレット]** のデバイスで Web パーツのレイアウトを表示してみる。\n    - レイアウトの変更を保存または破棄して、使用可能なレイアウトをいろいろ試してみる。\n\n1. 終わったら、ブラウザー ウィンドウを閉じてローカル ワークベンチのデバッグを停止します。\n</details>\n"
- title: 最初の Teams アプリをデプロイする
  durationInMinutes: 1
  content: "タブ機能を使用して Teams アプリを作成、ビルド、実行する方法について学習しました。 最後のステップは、アプリのデプロイです。\n\nTeams Toolkit を使用して、タブ機能を備えた最初のアプリを SharePoint にデプロイしましょう。\n\nこのページでは、次の方法について説明します。\n1. [最初のアプリをデプロイする](#deploy-your-app-to-sharepoint)\n1. [SharePoint でアプリ パッケージを配布する](#distribute-the-app-package-on-sharepoint)\n\n## <a name=\"deploy-your-app-to-sharepoint\"></a>アプリを SharePoint にデプロイする\n\nデプロイメントに SharePoint アプリ カタログが含まれていることを確認します。 含まれていない場合は[作成](/sharepoint/use-app-catalog)します。 アプリ カタログが作成されるまでに最大で 15 分かかる場合があります。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Visual Studio Code を開きます。\n1. サイド バーの [Teams] アイコンを選択して [Teams Toolkit] を選択します。\n1. **[クラウドにプロビジョニング]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/provisioning-commands.png\" alt-text=\"プロビジョニング コマンドを示すスクリーンショット\":::\n\n    ToolKit で右下隅の進行状況が更新されます。 数秒後に、次の通知が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/provision-complete.png\" alt-text=\"プロビジョニング完了のダイアログを示すスクリーンショット。\":::\n\n1. プロビジョニングが完了したら、**[クラウドにデプロイ]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/deploying-command.png\" alt-text=\"デプロイ コマンドを示すスクリーンショット\":::\n\n    アプリ パッケージがビルドされ、SharePoint サイトにアップロードされました。 アプリ パッケージの保存場所へのローカル パスが記載されたメッセージが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-package.png\" alt-text=\"SPFx アプリ パッケージ メッセージのスクリーンショット\":::\n\n    パッケージがビルドされると、アプリ パッケージがアップロードされた SharePoint サイトの URL を含むメッセージが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-package-uploaded.png\"alt-text=\"SharePoint サイトにアップロードされた SPFx パッケージのスクリーンショット\":::\n\n   Teams に発行するか、SharePoint サイトを選択できます。\n\n    * Teams に発行する (#publishからチームへ)\n    * SharePoint サイトのリンクを選択します (#select-the-link-of-the-sharepoint-site)\n\n### <a name=\"publish-to-teams\"></a>Teams ストアに公開する\n\n1. [ **Teams に発行] を選択します**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-your-app1.png\"alt-text=\"Teams への発行のスクリーンショット。\":::\n\n1. ポータル **管理選択します**。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/admin-portal.png\"alt-text=\"管理ポータルのスクリーンショット。\":::\n\n1. [ **アプリの管理]** を選択し、検索セクションでアプリを検索してアプリを選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/manage-apps.png\"alt-text=\"アプリの管理のスクリーンショット。\":::\n\n1. [ **発行] を** 選択して、Teams でアプリを発行します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-app.png\"alt-text=\"発行のスクリーンショット。\":::\n\n1. Teams アプリケーションを開きます (または `https://teams.microsoft.com` でサインインします)。\n\n1. サイドバーのトリプルドットを選択し、**[すべてのアプリ]** を選択します。  \n\n    アプリは、 **組織カテゴリ用に構築されたアプリに** 表示されます。 その場所でアプリを追加することができます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-app-in-teams.png\" alt-text=\"組織に組み込まれているアプリを示すスクリーンショット。\":::\n\n1. アプリを選択し、**[追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-add-app.png\" alt-text=\"Teams に追加するアプリのスクリーンショット。\":::\n\n    おめでとうございます! アプリが Teams に追加されました。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-app-added.png\" alt-text=\"Ms. Teams に追加される完成したアプリのスクリーンショット。\":::\"\n\n### <a name=\"select-the-link-of-the-sharepoint-site\"></a>SharePoint サイトのリンクを選択する\n\n\n1. SharePoint サイトのリンクを選択します。\n\n    SharePoint サイトが開き、アプリのホーム ページが開きます。 SharePoint で[アプリを配布する](#distribute-the-app-package-on-sharepoint)手順に従います。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nターミナル ウィンドウで以下を行います。\n\n1. `teamsfx provision` を実行します。\n\n  ``` bash\n  teamsfx provision\n  ```\n\n1. `teamsfx deploy` を実行します。\n\n  ``` bash\n  teamsfx deploy\n  ```\n\n1. メッセージが表示されたら、**[SharePoint パッケージをビルドする]** を選択します。\n\n    SharePoint で[アプリを配布する](#distribute-the-app-package-on-sharepoint)手順に従います。\n---\n\n## <a name=\"distribute-the-app-package-on-sharepoint\"></a>SharePoint でアプリ パッケージを配布する\n\nアプリ パッケージが SharePoint サイトにアップロードされたことを確認できるはずです。 アプリを配布して Teams に同期するには以下を行います。\n\n1. **[SharePoint 用アプリの配布]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-distribute-apps.png\" alt-text=\"SharePoint 用アプリの配布。\":::\n\n    [SharePoint 用アプリ] のホーム ページが開きます。 アプリがこのページに一覧表示されます。\n\n1. **[ファイル]** タブを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-files-tab.png\" alt-text=\"[SharePoint アプリ カタログ] の [ファイル] タブを選択します。\":::\n\n1. デプロイしたパッケージを選択し、**[Teamsに同期]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-sync-to-teams.png\" alt-text=\"[SharePoint アプリ カタログ] の [ファイル] タブを選択します。\":::\n\n    > [!Note]\n    > [Teams に同期] のプロセスは数分かかる場合があります。 アプリが Teams に正常に同期されたことを示すメッセージがブラウザーに表示されます。\n\n1. Teams アプリケーションを開きます (または `https://teams.microsoft.com` でサインインします)。\n1. サイドバーのトリプルドットを選択し、**[すべてのアプリ]** を選択します。  \n\n    アプリは、**[組織カテゴリ用にビルドされたアプリ]** のカテゴリに分類されます。 その場所でアプリを追加することができます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-app-in-teams.png\" alt-text=\"Teams 内で作成されたアプリを示すスクリーンショット。\":::\n\n1. アプリを選択し、**[追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-add-app.png\" alt-text=\"Teams に追加する完成したアプリのスクリーンショット。\":::\n\n    おめでとうございます! アプリが Teams に追加されました。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-app-added.png\" alt-text=\"Teams に追加する完成したアプリのスクリーンショット。\":::\""
