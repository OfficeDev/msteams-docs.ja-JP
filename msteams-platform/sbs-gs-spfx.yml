### YamlMime:Tutorial
title: SPFxを使用して最初のアプリをビルドする
metadata:
  title: SPFxを使用したHello World
  description: このチュートリアルでは、SPFxを使用Hello Worldアプリをビルドする方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 開始の概要に戻る
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: b62a6c3ba924c412c0c2c6e2d4a940832896292c
  ms.sourcegitcommit: e40383d9081bf117030f7e6270140e6b94214e8b
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 04/27/2022
  ms.locfileid: "65102365"
items:
- durationInMinutes: 1
  content: "SharePoint Framework (SPFx) は、Microsoft Teams と SharePoint 用のクライアント側ソリューションを構築するための開発モデルです。 SPFx Teams アプリはMicrosoft 365でホストされます。 クライアント側のSPFx ソリューションの開発とホストに関する完全なサポートが提供されます。 SharePoint Framework ソリューションを次の方法で統合できます。\n\n- データをSharePointし、Microsoft Teamsを拡張します。 \n- Azure Active Directoryでセキュリティで保護されたビジネス API。\n\nこのチュートリアルでは、タブ機能を備えた最初のアプリを構築して、SPFxを使用してアプリ開発をMicrosoft Teams開始します。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab1.png\" alt-text=\"このアプリを示す図には、3 つの機能があります。タブが強調表示されています。\" border=\"true\":::\n\n> [!NOTE]\n> 現在、Teams Toolkitでは、Visual Studio CodeとSharePoint Frameworkを備えたTeams アプリの Tab 機能のみが提供されています。 ボットとメッセージ拡張機能の機能は使用できません。\n"
- title: 前提条件
  durationInMinutes: 1
  content: "アプリのビルドとデプロイに必要なツールの一覧を次に示します。\n\n| &nbsp; | インストール | 使用するには... |\n| --- | --- | --- |\n| **必須** | &nbsp; | &nbsp; |\n| &nbsp; | [マイクロソフト&nbsp;Edge](https://www.microsoft.com/edge) (推奨) または [Google Chrome](https://www.google.com/chrome/) | 開発者ツールを備えたブラウザー。 |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript、TypeScript、またはSharePoint Framework (SPFx) ビルド環境。 バージョン 1.55 以降を使用します。 |\n| &nbsp; | [Teams ツールキット](#install-the-teams-toolkit) | アプリのプロジェクト スキャフォールディングを作成するVisual Studio Code拡張機能。 最新バージョン​​を使用します。 |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | バックエンド JavaScript ランタイム環境。 Node.js バージョン 10、12、または 14 LTS リリースを使用します。 |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph エクスプローラー。Microsoft Graph データからクエリを実行できるブラウザー ベースのツールです。 |\n| &nbsp; | [Teams の開発者ポータル](https://dev.teams.microsoft.com/) | Teams アプリを構成、管理、組織や Teams ストアなどに配布するための Web ベースのポータル。 |\n\n> [!TIP]\n> Microsoft Graph データを操作する場合は、Microsoft Graph エクスプローラーについて学習し、ブックマークする必要があります。 このブラウザー ベースのツールを使用すると、アプリの外部で Microsoft Graphにクエリを実行できます。\n</details>\n\n## <a name=\"prepare-development-environment\"></a>開発環境を準備する\n\n必要なツールをインストールしたら、開発環境を設定します。\n\n### <a name=\"install-the-teams-toolkit\"></a>Teams Toolkitをインストールする\n\nTeams Toolkitは、アプリのクラウド リソースのプロビジョニングとデプロイ、Teams ストアへの発行などを行うツールを使用して開発プロセスを簡略化するのに役立ちます。 ツールキットは、Visual Studio Code、Visual Studio、または CLI (呼び出し) `teamsfx`として使用できます。\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Visual Studio Code開き、**拡張機能** ビュー (**Ctrl + Shift + X** / **⌘⇧-X** または **表示>拡張機能**) を選択します。\n1. 検索ボックスに、「**Teams Toolkit**」と入力します。\n1. Teams Toolkitの横にある [**インストール**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-install-toolkit-vscode.png\" alt-text=\"microsoft ツール キット\" border=\"true\":::\" alt-text=\"microsoft tool kit\" border=\"true\"::\n\n    Teams Toolkit アイコンは、インストール後にVisual Studio Codeサイドバーに表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"図は、サイドバーのTeams ToolkitアイコンVisual Studio Code示しています。\":::\n\nVisual Studio Code [Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension) でもTeams Toolkitを見つけることができます。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nTeamsFx CLI をインストールするには、パッケージ マネージャーを `npm` 使用します。\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\n構成によっては、CLI のインストールに使用 `sudo` する必要がある場合があります。\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nこの条件は、Linux および macOS システムでより一般的です。\n\nnpm グローバル キャッシュを PATH に追加していることを確認します。 この手順は通常、Node.js インストーラーの一部として行われます。  \n\nコマンドで CLI を `teamsfx` 使用できます。 コマンドが動作していることを確認するには、次のコマンドを実行します `teamsfx -h`。\n\n> [!CAUTION]\n> PowerShell ターミナルで TeamsFx を実行する前に、PowerShell の \"リモート署名済み\" 実行ポリシーを有効にする必要があります。\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Teams 開発テナントを設定する\n\n**テナント** とは、チャット、ファイルの共有、会議の実行を行う Teams の組織のスペースまたはコンテナーのようなものです。 このスペースは、アプリをサイドロードしてテストする場所でもあります。 テナントを使って開発する準備ができているかどうかを確認しましょう。\n\n### <a name=\"enable-sideloading-option\"></a>サイドローディング オプションを有効にする\n\nアプリを作成したら、アプリを配布せずに Teams に読み込む必要があります。 このプロセスはサイドローディングと呼ばれます。 このオプションを表示するには、Microsoft 365 アカウントにサインインします。\n  \n> [!NOTE]\n> サイドローディングは、Teams のローカル環境でアプリをプレビューおよびテストするために必要です。 有効になっていない場合は、Teams でアプリをローカルでプレビューしてテストすることはできません。\n\n既にテナントがあり、管理者アクセス権がありますか? 実際にそうかどうかを確認しましょう。\n\nTeams でアプリをサイドロードできるかどうかを確認します。\n\n1. Teams クライアントで、**[Store]** アイコンを選択します。\n1. **[アプリの管理]** を選択します。\n1. **[カスタム アプリのアップロード]** オプションを探します。 オプションが表示された場合は、アプリのサイドローディングが有効です。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-custom-new.png\" alt-text=\"bot home\" border=\"true\":::\n    > [!NOTE]\n    > Teams でカスタム アプリをアップロードするオプションが表示されない場合は、Teams 管理者に問い合わせてください。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>無料の Teams 開発者テナントを作成する (省略可能)\n\nTeams開発者アカウントをお持ちでない場合は、無料で入手できます。 Microsoft 365 開発者プログラムに参加します。\n\n1. [Microsoft 365 開発者プログラム](https://developer.microsoft.com/microsoft-365/dev-program)に移動します。\n1. **[今すぐ参加]** を選択し、画面の指示に従います。\n1. ようこそ画面で、**[E5 サブスクリプションの設定]** を選択します。\n1. 管理者アカウントを設定します。 完了すると、次の画面が表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-microsoft-365.png\" alt-text=\"Microsoft 365\" border=\"true\":::\n\n1. 設定した管理者アカウントを使用して Teams にサインインします。 Teams に **[カスタム アプリのアップロード]** オプションがあることを確認します。\n\n## <a name=\"sharepoint-collection-site-administrator-account\"></a>SharePoint コレクション サイト管理者アカウント\n\nSharePoint サイト コレクションの管理者アカウントがあることを確認します。 このアカウントは、ホスティングのデプロイ時に必要になります。 Microsoft 365開発者プログラム テナントを使用している場合は、その時点で作成した管理者アカウントを使用できます。\n\nこれで、すべてのツールが用意され、アカウントが設定されました。 次に、開発環境を設定し、ビルドを開始しましょう。\n"
- title: タブ アプリのプロジェクト ワークスペースを作成する
  durationInMinutes: 1
  content: "このチュートリアルでは、SharePoint Framework SPFxを使用してTeams アプリを作成、ビルド、デプロイする手順について説明します。 このアプリにはタブ機能があります。  \n\nこのチュートリアルでは、次の方法について学ぶことができます:\n1. [Teams Toolkitを使用して新しいプロジェクトを設定する方法](#create-your-project)\n1. [アプリのディレクトリ構造について](#take-a-tour-of-the-source-code)\n\n> [!IMPORTANT]\n> プロジェクト ワークスペースの作成を開始する前に、Microsoft 365または Azure アカウントにサインインしていないことを確認します。\n\n## <a name=\"create-your-project\"></a>プロジェクトを作成する\n\n前提条件が整っている場合は、始めましょう。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Visual Studio Code を開きます。\n1. Visual Studio Code のサイド バーで Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: アイコンを選択します。\n\n1. **[新しい Teams アプリを作成]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-project.png\" alt-text=\"Teams ツールキットのサイド バーにある [新しいプロジェクトの作成] リンクの位置\":::。\n\n1. **[新しい Teams アプリを作成]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-new-project-intro.png\" alt-text=\"[新しいプロジェクトの作成] のウィザードの開始\":::。\n\n1. **Tab の選択を** 解除し、**Tab (SPFx)** を選択して **、[OK**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/new-spfxTab-spfx.png\" alt-text=\"新しい spfx タブ spfx\" border=\"true\":::\n\n1. **[Framework**] セクションで **React** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-react-page.png\" alt-text=\"bot home\" border=\"true\":::\n\n1. Enter キーを **押** して、既定の **Web パーツ名** をそのまま使用します。\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-helloworld.png\" alt-text=\"bot home\" border=\"true\":::\n\n1. 次のように `HelloWorld`、アプリに適した名前を入力します。 アプリの名前が英数字であることを確認します。 \n   Enter キーを **押します**。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-another-helloworld.png\" alt-text=\"bot home\" border=\"true\":::\n\n    Teams Toolkit Yeoman CLI を呼び出してTeams アプリをスキャフォールディングし、必要な依存関係をプロセスにインストールします。</br>\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-tooklit-updated.png\" alt-text=\"bot home\" border=\"true\":::\n\n    スキャフォールディングには数分かかります。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/sbs-share-point.png\" alt-text=\"bot home\" border=\"true\":::\n    \n    アプリが作成されると、プロジェクト ワークスペースが作成された場所を示すメッセージがTeams Toolkitに表示されます。 これは、Visual Studio Codeで指定された既定の場所です。\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/location-change-new.png\" alt-text=\"location\" border=\"true\":::\n\n    このメッセージには、次の 2 つのオプションがあります。\n    \n    - **場所を変更する**\n    - **ローカル デバッグ**\n    \n    このチュートリアルでは、これらのオプションを使用する必要はありません。\n\n    > [!NOTE]\n    > ワークスペースの場所を変更する場合は、Visual Studio Codeの再読み込み後に作成したプロジェクトにのみ反映されます。 既存のプロジェクトの場所は変更されません。\n\n<details>\n<summary>Teams アプリの作成の簡単な要約。</summary>\n\n![Teams アプリを作成する](~/assets/videos/spfx-tab-source.gif)\n</details>\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\n`teamsfx` CLI を使用して、最初のプロジェクトを作成します。  プロジェクト フォルダーを作成するフォルダーから開始します。\n\n``` bash\nteamsfx new\n```\n\nCLI では、プロジェクトを作成するためのいくつかの質問を行います。 すべての質問には、矢印キーを使用してオプションを選択するなど、回答に関する指示が含まれています。 質問に回答したら、 **Enter** キーを押して確認します。\n\n1. **[新しい Teams アプリを作成]** を選択します。\n2. **タブを選択します**。\n3. **SharePoint Framework (SPFx)** フロントエンド ホスティングを選択します。\n4. **[React** Framework] を選択します。\n5. **Web パーツ名** に **Enter** キーを押します。\n6. `helloworld` のように、アプリに適した名前を入力します。 アプリの名前は英数字である必要があります。\n\n\n   プロジェクトは、すべての質問に回答した後に作成されます。\n\n---\n\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>ソース コードのツアーを開始する\n\nプロジェクトの作成後、基本的な個人用アプリを構築するためのコンポーネントが用意されています。 プロジェクト ディレクトリとファイルは、Visual Studio Codeのエクスプローラー領域で表示できます。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-project-files-spfx.png\" alt-text=\"Visual Studio Code で個人用アプリ向けのアプリのプロジェクト ファイルを表示したスクリーンショット。\" border=\"false\":::\n\nToolkitは、タブ機能のプロジェクト ディレクトリにスキャフォールディングを作成します。 \n\nこのディレクトリ内の他の項目のうち、Teams Toolkitには次のものが含まれます。\n\n- `fx`: ディレクトリ内のアプリの `.fx` 状態。  \n- templates/resources: アプリ アイコンと `outline.png`. `color.png`\n- `manifest.local.template.json`: ローカル デバッグ用のアプリ マニフェストが含まれています\n- `manifest.remote.template.json`: Teams用の開発者ポータルに発行するためのアプリ マニフェストが含まれています。\n- `.fx/configs/projectSettings.json`: プロジェクトの作成時に選択した設定。\n\nSPFx Web パーツ プロジェクトを選択すると、次のファイルが UI に関連します。\n\n- `SPFx/src/webparts/{webpart}`: SPFx Web パーツが含まれています。\n- `.vscode/launch.json`: デバッグ パレットで使用できるデバッグ構成について説明します。\n"
- title: タブ アプリをビルドする
  durationInMinutes: 1
  content: "Teams Toolkitを使用してプロジェクト ワークスペースを設定したら、タブ プロジェクトをビルドします。 Microsoft 365 アカウントにサインインする必要があります。\n\nこのページでは、[最初のアプリをビルドして実行](#build-and-run-your-app-locally-in-visual-studio-code)する方法について説明します。\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Microsoft 365 アカウントにサインインする\n\nMicrosoft 365 アカウントを使用してTeamsにサインインします。 Microsoft 365開発者プログラム テナントを使用している場合は、登録中に設定した管理者アカウントがMicrosoft 365 アカウントです。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Visual Studio Code を開きます。\n1. サイドバーでTeams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\":::アイコンを選択します。  \n1. **[M365 へのサインイン] を選択します**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/account-signin-spfx.png\" alt-text=\"Microsoft 365にサインインする場所を示すスクリーンショット。\" border=\"false\":::\n\n    既定の Web ブラウザーが開き、アカウントにサインインできます。\n\n1. 資格情報を使用して、Microsoft 365 アカウントにサインインします。\n1. プロンプトが表示されたらブラウザーを閉じ、Visual Studio Codeに戻ります。\n1. Visual Studio Code内のTeams Toolkitに戻ります。\n\n    サイドバーの **[ACCOUNTS**] セクションに、Microsoft 365アカウント名が表示されます。\n\n    これで、アプリをビルドしてローカルで実行する準備ができました。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cline)\n\n   TeamsFx CLI を使用してMicrosoft 365にサインインします。\n\n``` bash\n    teamsfx account login m365\n```\n\n\n既定の Web ブラウザーが開き、アカウントにサインインできます。 資格情報を使用してアカウントにサインインします。 メッセージが表示されたら、ブラウザーを閉じます。\n\nアカウント ログインは、Visual Studio Codeと TeamsFx CLI の間で共有されます。\n\n開発環境が構成されたので、最初のTeams アプリを作成、ビルド、デプロイできます。\n\n ---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Visual Studio Code でアプリをローカルにビルドして実行する\n\nアプリをローカルに構築して実行するには、以下のようにします。\n\n1. Visual Studio Codeサイドバーから **[実行とデバッグ**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\":::] アイコンを選択します。\n\n1. アプリを実行してデバッグするには、次のいずれかのオプションを選択します。\n\n    - **Teams ワークベンチ (Edge)**\n    - **Teams ワークベンチ (Chrome)**\n\n        :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-debug.png\" alt-text=\"bot home\" border=\"true\":::\n\n1. 再生ボタンを選択するか、 **F5** キーを選択してデバッグを開始します。\n    > [!NOTE]\n    > アプリを初めて実行すると、すべての依存関係がダウンロードされ、アプリがビルドされます。 ビルドが完了すると、ブラウザー ウィンドウが自動的に開き、SharePoint Workbench が読み込まれます。 このプロセスが完了するまでに数分かかる場合があります。\n\n    Toolkitでは、必要に応じてローカル証明書をインストールするように求めるメッセージが表示される場合があります。 この証明書により、Teams は `https://localhost` からアプリケーションを読み込むことができます。 \n    \n1. 次のダイアログが表示されたら **、[はい** ] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Microsoft 365\" border=\"true\":::\n\n    Teams Web クライアントがブラウザー ウィンドウで開きます。\n\n1. ローカル コンピューター上のTeamsにアプリをサイドロードするように求められたら、[**追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-app-local-debug.png\" alt-text=\"アプリをTeamsに追加する\":::\n\n1. デスクトップに切り替える必要がある場合は、Web アプリのバージョンTeams選択します。 HTML、CSS、JavaScript のコードは、標準の Web 開発環境で確認できます。\n\n1. アプリがTeamsにサイドロードされる前にデバッグ スクリプトを読み込むよう求められた場合は、[デバッグ スクリプトの **読み込み**] を選択します。\n\n    おめでとうございます。最初のアプリはTeamsで実行されています。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-added-local.png\" alt-text=\"ローカル環境で完了したアプリのスクリーンショット\":::\n\n    これで、アプリが実行されているはずです。 アプリは、他のSPFx Web パーツ (ブレークポイントの設定など) としてデバッグできます。\n\n> [!TIP]\n> ブラウザー ウィンドウの render メソッド `SPFx/src/webparts/{webpart}/{webpart}.ts` にブレークポイントを配置し、再読み込みしてみてください。 Visual Studio Codeは、コード内のブレークポイントで停止します。\n\n<details>\n<summary>アプリのデバッグに Local Workbench を使用した場合の動作について説明します。</summary>\n\n**ローカル ワークベンチ** は、Visual Studio Codeでアプリを実行およびデバッグするための既定のオプションです。 このチュートリアルでは、Teams ワークベンチを使用してアプリをデバッグすることを選択することをお勧めしますが、ローカル ワークベンチを選択して Web パーツのレイアウトを調べることができます。\n\n> [!NOTE]\n> このインターフェイスは、モバイルまたはタブレットでの Web パーツの表示方法を調べる場合にのみ使用します。 アプリに含めるコードを記述し、展開して表示する必要があります。 \n\nローカル ワークベンチを使用して Web パーツのレイアウトを調べるには、\n\n1. **[ローカル ワークベンチ**] を選択し、**F5** を選択してアプリを実行してデバッグします。\n    \n    **ブラウザーでSharePoint Web パーツ ワークベンチ** が開き、Web パーツを追加、編集、削除できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-workbench-addpart.png\" alt-text=\"ポップアップで実行されているSPFx ワークベンチを示すスクリーンショット。Web パーツを追加します。\":::\n\n1. **列 1 の [Web パーツの追加] +** アイコンを選択して、Web パーツを追加します。\n\n1. メニューから Web パーツを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-workbench-addpart2.png\" alt-text=\"Web パーツの選択を追加するポップアップで実行されているSPFx ワークベンチを示すスクリーンショット。\":::\n\n1. [ **新しいセクションの追加] +** アイコンを選択して、Web パーツの列レイアウトを選択します。\n\n1. このインターフェイスを使用して、Web パーツのさまざまなレイアウトを試します。\n    \n    - レイアウトの **Web パーツ データ** を表示します。\n    - さまざまなレイアウト、テキスト、色などを変更してみてください。\n    - Web パーツを表示するには、[ **プレビュー]** ボタンを使用します。 \n    - さまざまな **モバイル** デバイスまたはタブレット デバイスで Web パーツのレイアウト **を** 表示します。\n    - レイアウト内の変更を保存または破棄して、引き続き可能なレイアウトを試します。\n\n1. 準備ができたら、ブラウザー ウィンドウを閉じてローカル ワークベンチのデバッグを停止します。\n</details>\n"
- title: 最初のTeams アプリをデプロイする
  durationInMinutes: 1
  content: "Tab 機能を使用してアプリTeams作成、ビルド、実行する方法を学習しました。 最後の手順は、アプリをデプロイすることです。\n\nTeams Toolkitを使用して、タブ機能を備えた最初のアプリをSharePointにデプロイしましょう。\n\nこのページでは、次の方法について説明します。\n1. [最初のアプリをデプロイする](#deploy-your-app-to-sharepoint)\n1. [SharePointにアプリ パッケージを配布する](#distribute-the-app-package-on-sharepoint)\n\n## <a name=\"deploy-your-app-to-sharepoint\"></a>アプリをSharePointにデプロイする\n\nデプロイにアプリ カタログSharePointが存在することを確認します。 存在しない場合は、 [作成します](/sharepoint/use-app-catalog)。 アプリ カタログを作成するには、最大で 15 分かかる場合があります。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Visual Studio Code を開きます。\n1. Teams アイコンを選択して、サイドバーからTeams Toolkitを選択します。\n1. **[クラウドでのプロビジョニング**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/provisioning-commands.png\" alt-text=\"プロビジョニング コマンドを示すスクリーンショット\":::\n\n    Toolkitは、右下隅の進行状況を更新します。 数秒後、次の通知が表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/provision-complete.png\" alt-text=\"プロビジョニングの完了ダイアログを示すスクリーンショット。\":::\n\n1. プロビジョニングが完了したら、[ **クラウドにデプロイ]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/deploying-command.png\" alt-text=\"deploying コマンドを表示するためのスクリーンショット\":::\n\n    アプリ パッケージがビルドされ、SharePoint サイトにアップロードされます。 Teams Toolkitには、アプリ パッケージが保存されているローカル パスを含むメッセージが表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-package.png\" alt-text=\"SPFx アプリ パッケージ メッセージのスクリーンショット\":::\n\n    パッケージがビルドされると、アプリ パッケージがアップロードされたSharePoint サイトの URL を含むメッセージがTeams Toolkitに表示されます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-package-uploaded.png\"alt-text=\"SharePoint サイトにアップロードされたSPFx パッケージのスクリーンショット\":::\n\n1. SharePoint サイトのリンクを選択します。\n\n    SharePoint サイトが[アプリ] ホーム ページに開きます。 手順に従って、[SharePointにアプリを配布](#distribute-the-app-package-on-sharepoint)します。\n\n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nターミナル ウィンドウで次の手順を実行します。\n\n1. `teamsfx provision` を実行します。\n\n  ``` bash\n  teamsfx provision\n  ```\n\n1. `teamsfx deploy` を実行します。\n\n  ``` bash\n  teamsfx deploy\n  ```\n\n1. メッセージが表示されたら、[**ビルド SharePoint パッケージ**] を選択します。\n\n    手順に従って、[SharePointにアプリを配布](#distribute-the-app-package-on-sharepoint)します。\n---\n\n## <a name=\"distribute-the-app-package-on-sharepoint\"></a>SharePointにアプリ パッケージを配布する\n\nアプリ パッケージは、SharePoint サイトでアップロードされています。 アプリを配布してTeamsに同期するには:\n\n1. [**SharePoint用のアプリを配布** する] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-distribute-apps.png\" alt-text=\"SharePoint用にアプリを配布します。\" border=\"true\":::\n\n    [SharePoint用アプリ] ホーム ページが開きます。 このページにアプリが一覧表示されます。\n\n1. [ **FILES** ] タブを選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-files-tab.png\" alt-text=\"SharePointアプリ カタログの [ファイル] タブを選択します。\" border=\"true\":::\n\n1. 展開したパッケージを選択し、[**Teamsに同期**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-sync-to-teams.png\" alt-text=\"SharePointアプリ カタログの [ファイル] タブを選択します。\" border=\"true\":::\n\n    > [!Note]\n    > Teamsへの同期プロセスには数分かかることがあります。 アプリがTeamsに正常に同期されたことを示すメッセージがブラウザーに表示されます。\n\n1. Teams アプリケーションを開きます (またはサインインします`https://teams.microsoft.com`)。\n1. サイドバーでトリプルドットを選択し、[ **すべてのアプリ**] を選択します。  \n\n    アプリは **、組織カテゴリ用に構築されたアプリに** 配置されます。 そこからアプリを追加できます。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-app-in-teams.png\" alt-text=\"Teams内のアプリを示すスクリーンショット\" border=\"true\":::\n\n1. アプリを選択し、[ **追加**] を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-add-app.png\" alt-text=\"Teamsに追加する完了したアプリのスクリーンショット。\" border=\"true\":::\n\n    おめでとうございます! これで、アプリがTeamsに追加されました。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-app-added.png\" alt-text=\"Teamsで追加する完成したアプリのスクリーンショット\" border=\"true\":::。\""
