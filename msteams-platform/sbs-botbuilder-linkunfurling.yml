### YamlMime:Tutorial
title: ボットを使用して Teams のリンクを展開解除する
metadata:
  title: ボットを使用して Teams のリンクを展開解除する
  description: Teams のリンク解除ボットを設定する方法について説明します。 このガイドは、アプリを登録し、呼び出しアクティビティを受信するのに役立ちます。
  audience: Developer
  level: Beginner
  ms.date: 01/20/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/link-unfurling.md
  nextTutorialTitle: リンクの展開の詳細を確認する
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 810cc4d5bc0d107dc24005ac001ce49682e6d57f
  ms.sourcegitcommit: ac59d469b823b80e65ee6f7be11ec5c365977a1c
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 10/06/2022
  ms.locfileid: "68491259"
items:
- durationInMinutes: 1
  content: "Microsoft Bot Frameworkは、ボットがボット メッセージングの一部として使用できる定義済みのカードのセットを追加することで、カードの仕様を拡張します。 Teams でボットを使用したリンク解除は、アプリの登録に役立ちます。 また、ドメインを含む URL が作成メッセージ領域に貼り付けられると、呼び出しアクティビティを受信するのに役立ちます。 呼び出しアクティビティには完全な URL が含まれており、カードで応答できます。 ユーザーは、ボットを使用してリンクの展開を解除し、追加情報を使用して強化されたエクスペリエンスを得ることができます。\n\n > [!NOTE]\n > 現在、モバイル クライアントではリンクの展開はサポートされていません。\n\n **リンクの展開解除の主な機能** \n\n * ユーザーが URL を貼り付け、カードで応答できるようにします。\n * ユーザーがアプリを登録し、呼び出しアクティビティを受信できるようにします。\n\nこのステップ バイ ステップ ガイドは、Microsoft Teams for `https://www.BotFramework.com`. 次の出力が表示されます。\n\n:::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/final-image.png\" alt-text=\"リンク展開\":::\n"
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境をセットアップしてください。 \n\n | &nbsp; | インストール | 使用するには... |\n | --- | --- | --- |\n | **必須** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams は、チャット、会議、通話、すべて 1 か所のアプリを通じて、共同作業するすべてのユーザーと共同作業を行います。|\n | &nbsp; | [Visual Studio 2022 バージョン 17.3](https://visualstudio.microsoft.com)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • **ASP.NET と Web 開発** <br> • **.NET Core クロスプラットフォーム開発** | Visual Studio 2022 でエンタープライズ バージョンをインストールし、ワークロードをインストールできます。 |\n | &nbsp; | [.NET Core SDK バージョン 3.1](https://dotnet.microsoft.com/en-us/download) | ローカル デバッグとAzure Functions アプリのデプロイ用にカスタマイズされたバインド。 .NET 3.1 (またはそれ以降) SDK をグローバルにインストールしていない場合は、ポータブル バージョンをインストールできます。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams アプリの機能 (会話ボット、メッセージ拡張機能、受信 Webhook) には、受信接続が必要です。 トンネルは、開発システムを Teams に接続します。 タブのみを含むアプリでは必須ではありません。 このパッケージはプロジェクト ディレクトリ内にインストールされます (npm `devDependencies` を使用)。 |\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken](https://ngrok.com/download) をインストールします。\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "\n1. [BotBuilder サンプルを](https://github.com/microsoft/BotBuilder-Samples)開きます。\n1. [ **コード**] を選択します。\n1. ドロップダウン メニュー **から [GitHub Desktop で開く** ] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clonerepository-new_1.png\" alt-text=\"リポジトリを複製する\":::\n\n1. [ **複製**] を選択します。 \n"
- title: Azure portalでボットを作成して登録する
  durationInMinutes: 5
  content: "次の手順は、ボットを作成してAzure portalに登録するのに役立ちます。\n\n* Azure bot リソースを作成して、Azure Bot Serviceにボットを登録します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* Teams チャネルを追加して、ボットを Teams チャネルにデプロイします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Microsoft Azure portal](https://portal.azure.com/)に移動します。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot**」と入力します。\n1. **Enter** キーを押します。\n1. **Azure Bot** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Azure ボット。\":::\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要な **ボット ハンドル** 名を入力します。\n1. それぞれのドロップダウン リストから **サブスクリプション** と **リソース グループ** を選択します。\n    \n    :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/review-plus-create_1.png\" alt-text=\"リソース Azure ボットを選択する\":::\n   \n   新しいリソース グループを作成することもできます ([新しいリソースの **作成** ] を選択>、リソース名を入力> **[OK**] を選択します)。\n\n1. 新しいリソース グループを作成した場合は、[ **新しいリソース グループの場所** ] ドロップダウン リストから必要な場所を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"新しいリソース グループの場所を示すスクリーンショット。\":::\n\n1. **[Microsoft アプリ ID**] セクションでは、既定で [**新しい Microsoft アプリ ID の作成]** が選択されています。 \n\n   [ **既存のアプリの登録を使用** する] を選択し、 **アプリ ID**、 **アプリ テナント ID**、 **MSI リソース ID を** 入力することもできます。\n\n   > [!NOTE]\n   > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. [**マルチテナント** としての **アプリの種類**] を選択します。\n\n1. **[確認 + 作成]** を選びます。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/register-bot-2_1.png\" alt-text=\"Microsoft アプリ ID の作成を示すスクリーンショット。\":::\n\n1. 検証が渡されたら、[ **作成**] を選択します。\n\n   ボット サービスがプロビジョニングされるまで少し時間がかかります。 \n\n1. [**リソースに移動**] を選びます。 \n\n    :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/botdeployment_1.png\" alt-text=\"リソースに移動するナビゲーションを示すスクリーンショット。\":::\n\n   Azure ボットが作成され、Azure ボットで **リソース グループ** と **サブスクリプション ID を** 確認できます。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/bot-page_1.png\" alt-text=\"Azure ボット リソースが作成されました\":::\n    \n  **クライアント シークレットを作成するには**\n\n   新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のウィンドウで、[ **構成**] を選択します。 \n\n   > [!TIP]\n   > 今後参照できるように **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **Microsoft アプリ ID** の横にある [**管理**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"管理オプションの選択を示すスクリーンショット。\":::\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_1.png\" alt-text=\"新しいクライアント シークレットの選択を示すスクリーンショット。\":::\n        \n   [ **クライアント シークレットの追加]** ウィンドウが表示されます。\n\n1. クライアント シークレットに **「説明」** と入力します。\n\n1. **[追加]** を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clientsecret_1.png\" alt-text=\"追加オプションを示すスクリーンショット。\":::\n   \n1. [ **値** ] 列で、[クリップボードにコピー] アイコンを選択して、値の詳細をコピーします。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clientvalue.png\" alt-text=\"クリップボードにコピーされたクライアント シークレットの値を示すスクリーンショット。\":::\n         \n   > [!TIP]\n   > 今後参照できるように、クライアント シークレット **の値** またはアプリ パスワードを保存します。\n\n **Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/gotohome_1.png\" alt-text=\"ホーム ページ\":::\n   \n1. **最近使用したリソース** からボットを選択します。\n\n1. 左側のウィンドウで **[チャネル** ] を選択します。\n\n1. **Microsoft Teams を選択する** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. [ **利用規約**] に同意するには、チェック ボックスをオンにします。\n\n1. **[同意する**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/terms.png\" alt-text=\"利用規約\":::\n  \n1. **[適用]** を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/apply.png\" alt-text=\"Teams の選択を示すスクリーンショット。\":::\n  \n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n  \n   ```bash\n   ngrok http --host-header=localhost 3978\n   ```\n   > [!TIP]\n   > **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに表示されている手順に従って、サインアップして ngrok を認証します。 `ngrok http --host-header=localhost 3978` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https から io) をコピーします。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"ngrok https URL を示すスクリーンショット。\":::\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > は `WebAppDomain` 、完全修飾ドメイン名であり、ドメイン名には含 `https://` まれません。\n\n1. **[構成設定]** で、**[追加]** を選択します。\n\n1. **メッセージング エンドポイント** で、ngrok から入手できる HTTPS URL を使用し、URL の最後に **/api/messages** を追加します。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/messaging-endpoint_2.png\" alt-text=\"メッセージング エンドポイントを示すスクリーンショット。\":::\n     \n1. **[適用]** を選択します。\n\n    Azure Bot Serviceでボットが正常に設定されました。\n"
- title: Azure AD アプリの登録を更新する
  durationInMinutes: 1
  content: "1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のウィンドウで、**アプリの登録** を選択します。\n\n1. ボットを選択します。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appregister_1.png\" alt-text=\"アプリの登録\":::\n   \n1. [ **API の公開] を選択します**。\n\n1. [ **設定**] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/exposeanapi_1.png\" alt-text=\"API を公開する\":::\n  \n1. **アプリケーション ID URI を** 次の`api://your ngrok/botid-{your AppID}`形式で設定します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/setlink_1.png\" alt-text=\"リンクを設定する\":::\n           \n   次の図は、ドメイン名を示しています。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appIDuri_1.png\" alt-text=\"アプリ ID\":::\n  \n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、新しい ngrok サブドメイン名です `f631****.ngrok.io` 。\n\n1. **[スコープの追加]** を選択します。 \n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/selectscope_1.png\" alt-text=\"[スコープの追加]\":::\n\n1. 表示されるパネルで、**スコープ名** として入力`access_as_user`します。\n\n1. **[同意できるユーザー] を** `Admins and users`[ .\n\n1. スコープの適切な値を使用して管理者とユーザーの同意プロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * **同意表示名管理** 入力`Teams can access the user’s profile`します。\n\n     * **同意の説明管理** 入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **ユーザー同意表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **ユーザーの同意の説明** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加]** を選択します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/addscope.png\" alt-text=\"スコープを追加する方法を示すスクリーンショット。\"::: \n    \n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/scope_1.png\" alt-text=\"Scope\"::: \n    \n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectclientapp_1.png\" alt-text=\"クライアント アプリケーションの選択を示すスクリーンショット。\":::\n   \n1. Teams デスクトップ アプリケーションの **クライアント ID:**`1fec8e78-bce4-4aaf-ab1b-5451cc387264` を入力します。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"クライアント アプリケーションの追加を示すスクリーンショット\":::\n   \n   Teams Web アプリケーションの **クライアント ID:**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` を入力します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"クライアント ID を追加するスクリーンショット。\":::\n  \n1. [ **承認されたスコープ]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/authorizedscope.png\" alt-text=\"クライアント アプリケーションの追加を示すスクリーンショット。\":::\n  \n   次の図は **、クライアント ID を** 表示します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/clientapps.png\" alt-text=\"クライアント アプリを示すスクリーンショット。\"::: \n     \n1. 左側のウィンドウで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、API アクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n1. **Microsoft Graph** > **委任されたアクセス許可を選択します**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/addpermission_1.png\" alt-text=\"アクセス許可の追加を示すスクリーンショット。\":::\n  \n1. 次のアクセス許可を選択します。</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n     * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"他のアクセス許可の追加を示すスクリーンショット。\":::\n     \n1. 左側のウィンドウで [ **認証** ] を選択し、リダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/webauth_1.png\" alt-text=\"Web\":::\n     \n     1. 完全修飾ドメイン名に追加して、アプリの `auth-end` リダイレクト URI を入力します。</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして **、暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/authend_1.png\" alt-text=\"Auth-end\":::\n        \n"
- title: アプリの設定とマニフェスト ファイルを設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリの **appsettings.json** に移動します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appsettingslocation_1.png\" alt-text=\"アプリ設定の場所のナビゲーションを示すスクリーンショット。\":::\n  \n1. Visual Studio で **appsettings.json を** 開きます。\n\n1. 次の情報を更新します。  \n\n     * **MultiTenant** に設定`\"MicrosoftAppType\"`します。\n     * ボットの **Microsoft アプリ ID に** 設定`\"MicrosoftAppId\"`します。\n     * ボットのクライアント シークレット ID 値に設定 `\"MicrosoftAppPassword\"` します。\n     * MultiTenant ボットの場合は空白として設定 `\"MicrosoftAppTenantId\"` します。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appsettings_1.png\" alt-text=\"アプリの設定を示すスクリーンショット。\":::\n    \n1. 複製されたリポジトリの **manifest.json** に移動します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manifestlocation_1.png\" alt-text=\"マニフェスト ファイルの場所を示すスクリーンショット。\":::\n    \n1. Visual Studio で **manifest.json を** 開きます。\n\n1. 次のコード スニペットをマニフェスト ファイルに追加します (まだ存在しない場合)。\n\n   ```json\n   \"bots\": [\n    {\n      \"botId\": \"<<YOUR-MICROSOFT-APP-ID>>\",\n      \"scopes\": [\n        \"personal\",\n        \"team\",\n        \"groupchat\"\n      ],\n      \"supportsFiles\": false,\n      \"isNotificationOnly\": false\n    }      \n   ```\n\n1. すべての出現箇所をボットの `<<YOUR-MICROSOFT-APP-ID>>` **Microsoft アプリ ID に** 置き換えます。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manifest_1.png\" alt-text=\"Microsoft アプリ ID の置き換えを示すスクリーンショット。\":::\n  \n"
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**Visual Studio またはコマンド ラインの最新バージョンを使用してサービスをビルドして実行するには**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs)\n\n   1. Visual Studio の最新バージョンを起動します。\n   1. **[ファイル** > **を開く** > **] プロジェクト/ソリューション** に移動します。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/VSopenfile_1.png\" alt-text=\"開いているファイルのナビゲーションを示すスクリーンショット。\":::\n      \n   1. **55.teams-link-unfurling** フォルダーから **TeamsLinkUnfurling.csproj** ファイルを選択します。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/csproj_1.png\" alt-text=\"フォルダーの選択を示すスクリーンショット。\":::\n  \n   1. **ビュー** から **ソリューション エクスプローラー** を開きます。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/solutionexplorer_1.png\" alt-text=\"ソリューション エクスプローラーを示すスクリーンショット。\":::\n      \n   1. **TeamsLinkUnfurling** を右クリックします。\n\n   1. [ **スタートアップ プロジェクトとして設定]** を選択します。\n      \n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/startup_1.png\" alt-text=\"スタートアップ プロジェクトのセットアップを示すスクリーンショット。\"::: \n      \n   1. **F5** キーを押してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/certificate_1.png\" alt-text=\"信頼証明書を示すスクリーンショット。\":::\n      \n      Web ページが開き、メッセージが表示されます **。ボットの準備は完了です。**\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appisready.png\" alt-text=\"ボットの準備が完了したことを示す Web ページを示すスクリーンショット。\":::\n              \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウで **BotBuilder-Samples >サンプル > csharp_dotnetcore > 55.teams-link-unfurling** に移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n:::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/dotnetruncmd.png\" alt-text=\"bash での dotnet の実行を示すスクリーンショット。\":::\n\n  ---\n"
- title: リンクの展開解除アプリをアップロードする
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで、 **csharp_dotnetcore > 55.teams-link-unfurling > TeamsAppManifest** に移動します。\n\n1. **マニフェスト** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/zipfile_1.png\" alt-text=\"ファイルの zip 形式を示すスクリーンショット。\":::\n   \n1. **Microsoft Teams** に移動します。\n\n1. **[アプリ]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/AppStore_1.png\" alt-text=\"Zip ファイル\":::\n   \n1. **[アプリの管理]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manageapps_1.png\" alt-text=\"アプリを管理する\":::\n      \n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/uploadapp_1.png\" alt-text=\"カスタム アプリをアップロードする\":::\n  \n1. [ **開く** ] を選択して、 **TeamsAppManifest** フォルダーに作成した.zip ファイルをアップロードします。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/selectzip_1.png\" alt-text=\"zip ファイルの選択を示すスクリーンショット。\":::\n  \n1. **[追加]** を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/addapp.png\" alt-text=\"アプリの追加を示すスクリーンショット。\":::\n   \n   アプリがチャットで開きます。\n\n1. メッセージの作成領域に「.」と入力 `https://www.BotFramework.com`します。\n\n   次の図に示すように、リンクは展開されません。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/result.png\" alt-text=\"リンクの展開解除結果を示すスクリーンショット。\":::\n   \n1. Enter キーを押します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/result-1.png\" alt-text=\"出力を示すスクリーンショット。\":::\n"
- title: 課題の完了
  durationInMinutes: 1
  content: >
    このようなものを思いついたのですか?


    :::image type="content" source="../msteams-platform/assets/images/Teams-link-unfurling/final-image.png" alt-text="最終的な出力を示すスクリーンショット。":::
- content: Teams のリンク解除アプリの使用を開始するためのチュートリアルを完了しました。
