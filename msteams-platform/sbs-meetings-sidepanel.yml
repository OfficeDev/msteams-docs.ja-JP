### YamlMime:Tutorial
title: Meetings SidePanel
metadata:
  title: Meetings SidePanel
  description: このチュートリアルでは、Teams用に Meetings SidePanel を設定する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 12/06/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 会議用のアプリを有効にして構成する方法の詳細
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: b3ff1ee3c54ed060086887fde27d8fc0b8005ea9
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64737228"
items:
- durationInMinutes: 1
  content: "会議 `meetingSidePanel` 中のエクスペリエンスが向上します。 開催者と発表者が異なるビューとアクションのセットを持つのを支援できます。\n\nこのステップ バイ ステップ ガイドでは、 **サイド パネル** アプリを実装して、議題を追加および発行する方法について説明します。\n\n**会議の開催者による会議 SidePanel の相互作用**\n\n* **新しい議題項目を追加** する: 新しい議題ポイントを追加するプロビジョニングを提供します。\n* **追加**: **サイド パネル** の議題リストに、テキスト入力として議題を追加します。\n* **[公開の議題**]: 会議チャットに議題リストを送信します。 \n\n次の出力が表示されます。\n\n ![トークン](~/assets/images/meetings-side-panel/sidepanelondesktopmobile.png)\n"
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境を設定してください。  \n\n* [.NET Core SDK](https://dotnet.microsoft.com/download) バージョン 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [nodejs](https://nodejs.org/en/download/) LTS バージョン 10.21.0 以降\n* [ngrok](https://ngrok.com/download) の最新バージョン (devbox テスト用のみ) または同等のトンネリング ソリューション\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken](https://ngrok.com/download) をインストールします。\n\n* 有効なアカウントを持つ[Microsoft Teams](https://teams.microsoft.com/)\n* リアルタイムで議題を更新する [SignalR](/aspnet/signalr/overview/getting-started/tutorial-getting-started-with-signalr-and-mvc)\n\n> [!NOTE]\n> バージョン 1.7.0 以降の[Teams SDK](/javascript/api/overview/msteams-client?view=msteams-client-js-latest&preserve-view=true) を使用します。以前のバージョンでは会議サイドパネルはサポートされていません。\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "リポジトリをローカル GitHubに複製`Microsoft-Teams-Samples`します。  \n\n 1. [Microsoft Teamsサンプルを](https://github.com/OfficeDev/Microsoft-Teams-Samples)開きます。\n 1. [ **コード**] を選択します。\n 1. ドロップダウン メニューから、[**デスクトップで開く] GitHub** 選択します。\n\n    ![リポジトリを複製する](~/assets/images/meetings-side-panel/clonerepository1.png)\n\n 1. [ **複製**] を選択します。 \n"
- title: Azure AD ポータルでボットを作成して登録する
  durationInMinutes: 5
  content: "Azure Active Directoryにボットを作成して登録するには、ngrok を使用してトンネルを作成し、メッセージング エンドポイントを追加するには、次の手順を実行します。\n\n* Azure bot リソースを作成して、Azure Bot Serviceにボットを登録します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* Microsoft Teams チャネルを追加して、ボットをTeams チャネルにデプロイします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Microsoft Azure ポータル](https://portal.azure.com/)に移動します。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot**」と入力します。\n1. Enter キーを **押します**。\n1. **Azure Bot** を選択します。\n\n     ![Azure ボット カードを作成する](~/assets/images/bots/createazurebot.png)\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要な **ボット ハンドル** 名を入力します。\n1. ドロップダウン リストから **サブスクリプション** を選択します。\n1. ドロップダウン リストから **リソース グループ** を選択します。 \n\n    ![リソース Azure ボットを選択する](~/assets/images/meetings-side-panel/review-plus-create.png) \n\n   新しいリソース グループを作成することもできます ([新しいリソースの **作成** ] を選択>、リソース名を入力> **[OK**] を選択します)。\n\n1. 新しいリソース グループを作成した場合は、[新しいリソース グループの場所] ドロップダウン リストから必要な **場所を** 選択します。\n\n    ![新しいリソース グループの場所](~/assets/images/meetings-side-panel/newresource.png)\n\n1. **[Microsoft アプリ ID**] セクションでは、既定で [**新しい Microsoft アプリ ID の作成]** が選択されています。 \n\n   [ **既存のアプリの登録を使用** する] を選択し、 **既存のアプリ ID** と **既存のアプリ パスワード** を入力するか、[ **新しい Microsoft アプリ ID の作成**] を選択します。\n\n   > [!NOTE]\n   > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. **[確認 + 作成]** を選びます。\n\n    ![Microsoft アプリ ID を作成する](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. 検証に合格した場合は、[ **作成**] を選択します。 \n\n    ボット サービスをプロビジョニングするには、しばらく時間がかかります。 \n\n1. [**リソースに移動**] を選びます。 \n\n    ![アプリをデプロイする](~/assets/images/meetings-side-panel/botdeployment.png)\n\n    Azure ボットが作成されます。\n\n    ![作成された Azure ボット リソース](~/assets/images/meetings-side-panel/bot-page.png)\n\n**クライアント シークレットを作成するには**\n\n  新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のパネルで、[構成] を選択 **します**。 \n\n   > [!TIP]\n   > 今後参照できるように **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **[ボットの種類**] で **[マルチテナント**] を選択します。\n\n    ![ボットの種類](~/assets/images/meetings-side-panel/bot-type.png)\n\n1. **Microsoft アプリ ID** の横にある [**管理**] を選択します。\n\n    ![Microsoft アプリ ID](~/assets/images/meetings-side-panel/config.png)\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n    ![新しいクライアント シークレット](~/assets/images/meetings-side-panel/newclientsecret.png)\n\n   [ **クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n1. **「説明」と入力します**。\n\n1. **[追加]** を選択します。\n\n    ![クライアント シークレットをアプリに追加する](~/assets/images/meetings-side-panel/clientsecret.png)\n\n1. [ **値** ] 列で、[ **クリップボードにコピー**] を選択します。\n\n     ![クライアント シークレットの値](~/assets/images/meetings-side-panel/clientvalue.png)\n   \n   > [!TIP]\n   > 今後参照できるように **、クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n**Microsoft Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n    ![ホーム ページ](~/assets/images/meetings-side-panel/gotohome.png)\n\n1. **最近使用したリソース** からボットを選択します。\n\n1. 左側のウィンドウで **[チャネル** ] を選択します。 \n\n1. **Microsoft Teams** を選択する <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. [ **利用規約**] に同意するには、チェック ボックスをオンにします。\n\n1. **[同意する**] を選択します。\n\n      ![利用規約](~/assets/images/meetings-side-panel/terms.png)\n\n1. **[保存]** を選択します。\n\n      ![Teamsを選択する](~/assets/images/meetings-side-panel/config-teams1.png)   \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに記載されている手順に従って、サインアップして ngrok を認証します。 `ngrok http -host-header=localhost 3978` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https から io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/meetings-side-panel/ngrok1.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > は `WebAppDomain` 、それに含 `https://` まれていない完全修飾ドメイン名です。\n\n1. 作成 **した** Azure ボットの設定で、[構成] を選択 **します**。\n\n1. **メッセージング エンドポイント** で、ngrok から入手できる HTTPS URL を使用し、URL の最後に **/api/messages** を追加します。\n\n    ![メッセージング エンドポイント](~/assets/images/meetings-side-panel/messaging-endpoint.png)\n\n1. **[適用]** を選択します。\n\n    Azure Bot Serviceでボットが正常に設定されました。\n"
- title: Azure AD アプリの登録を更新する
  durationInMinutes: 1
  content: "**Azure AD ポータルからアプリを登録するには**  \n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[ **アプリの登録**] を選択します。\n\n1. ボットを選択します。\n\n   ![アプリの登録](~/assets/images/meetings-side-panel/appregister.png)\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [ **設定**] を選択します。\n\n   ![API を公開する](~/assets/images/meetings-side-panel/exposeanapi.png)\n\n1. **アプリケーション ID URI を** 次の`api://{AppID}`形式で設定します。\n\n   ![リンクを設定する](~/assets/images/meetings-side-panel/setlink.png)\n\n1. の間`api://`に値を`WebAppDomain`挿入します`/{AppID}`。</br>\n    `api://4d52****.ngrok.io/{AppID}`</br>\n    \n   次の図は、ドメイン名を示しています。\n    \n    ![アプリ ID URI](~/assets/images/meetings-side-panel/appIDuri.png)\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、新しい ngrok サブドメイン名です `f631****.ngrok.io` 。\n\n1. **[スコープの追加]** を選択します。 \n\n   ![スコープを選択する](~/assets/selectscope.png)\n\n1. 表示されるパネルで、**スコープ名** として入力`access_as_user`します。\n\n1. **同意できるWho** を設定しますか`Admins and users`?\n\n1. スコープの適切な値を使用して管理者とユーザーの同意プロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * **管理者の同意表示名** として入力`Teams can access the user’s profile`します。\n\n     * **管理者の同意の説明** として入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **ユーザー同意表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **ユーザーの同意の説明** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加]** を選択します。\n\n    ![スコープを追加する](~/assets/images/meetings-side-panel/addascope.png)\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://4d52****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/meetings-side-panel/scopes.png) \n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    ![クライアント アプリケーションを選択する](~/assets/images/meetings-side-panel/selectclientapp.png) \n\n1. モバイルアプリケーションまたはデスクトップ アプリケーションTeams **クライアント ID を**`1fec8e78-bce4-4aaf-ab1b-5451cc387264`入力します。 \n\n    ![クライアント アプリケーションを追加する 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   **クライアント ID:**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` Teams Web アプリケーションに対して入力できます。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. [ **承認されたスコープ]** を選択します。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meetings-side-panel/authorizedscope.png) \n\n   次の図は、クライアント ID を表示します。\n\n    ![クライアント アプリケーション](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. 左側のパネルで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n    ![アクセス許可を追加する](~/assets/add-permission.png)\n\n1. **Microsoft Graph** を選択します。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n    既定では、 **User.Read** が選択されています。\n\n     ![ユーザー](~/assets/images/meetings-side-panel/userpermission.png)\n\n1. 以下のアクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profile**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     ![その他のアクセス許可](~/assets/images/meetings-side-panel/other-permissions.png)\n\n1. 左側のパネルで [ **認証** ] を選択してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        ![Web](~/assets/images/meetings-side-panel/webauth.png)\n\n     1. 完全修飾ドメイン名に追加して、アプリの `auth-end` リダイレクト URI を入力します。</br> \n       `https://4d52****.ngrok.io/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして **、暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        ![Auth-end](~/assets/images/meetings-side-panel/authend.png)\n"
- title: アプリの設定とマニフェスト ファイルを設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで **appsettings.json** に移動します。\n\n    ![アプリ設定の場所](~/assets/images/meetings-side-panel/appsettingslocation.png)\n\n1. **Visual Studio 2019** で **appsettings.json** を開き、次の情報を更新します。  \n\n     * ボットの **Microsoft アプリ ID に** 設定`\"MicrosoftAppId\"`します。\n     * ボットのクライアント シークレット ID 値に設定 `\"MicrosoftAppPassword\"` します。\n     * 完全修飾ドメイン名に設定 `\"BaseUrl\"` します。\n\n    ![アプリの設定](~/assets/images/meetings-side-panel/appsettings.png)\n\n1. 複製されたリポジトリ内に `manifest.json` 移動します。\n\n    ![マニフェスト ファイルの場所](~/assets/images/meetings-side-panel/manifestlocation.png)\n\n1. **Visual Studio 2019** で開`manifest.json`き、次の変更を行います。\n\n     * すべての出現箇所を `<<Your_Domain_URL>>` 完全修飾ドメイン名に置き換えます。\n     * すべての出現箇所をボットの `<<Microsoft-App-ID>>` **Microsoft アプリ ID に** 置き換えます。\n\n    ![マニフェスト イメージ 2](~/assets/images/meetings-side-panel/manifest-2.png)\n"
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**Visual Studio 2019 またはコマンド ラインを使用してサービスをビルドして実行するには**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. **2019 Visual Studio** 起動します。\n   1. **FileOpen** >  >  **Project/Solution** に移動します。\n\n      ![ファイルを開く](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. **csharp** フォルダーから **SidePanel.sln** ファイルを選択します。\n\n      ![ソリューション ファイル](~/assets/images/meetings-side-panel/Tokenfileready.png)\n\n   1. **F5** キーを押してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      ![証明書を信頼する](~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png)\n\n      Web ページが開き、メッセージが表示されます **。ボットの準備は完了です。**\n\n      ![アプリの準備完了](~/assets/images/meetings-side-panel/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウ **> csharp >サイド パネル>サンプル** に移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/meetings-side-panel/dotnetruncmd.png)\n  \n"
- title: Meetings SidePanel アプリをTeamsに追加する
  durationInMinutes: 1
  content: "**Teams会議を作成し、Meetings SidePanel アプリを追加するには**\n\n1. 複製されたリポジトリで、 **csharp >サイド パネル > マニフェスト** に移動します。\n\n1. **マニフェスト** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip ファイル](~/assets/images/meetings-side-panel/zipfile.png) \n\n1. 発表者と出席者を含む会議を作成します。\n\n1. 会議が作成されたら、会議の詳細ページに移動し、[ **アプリの追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/meetings-side-panel/addanapp.png) \n\n1. 開いたポップアップで、[ **アプリの管理**] を選択します。\n\n   ![アプリを管理する](~/assets/meeting-token-generator-manageapps.png)\n\n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n   ![カスタム アプリをアップロードする](~/assets/images/meetings-side-panel/uploadcustomapp.png)\n\n1. **[開く]** を選択して、**マニフェスト** フォルダーに作成した.zip ファイルをアップロードします。\n\n   ![zip ファイルを選択する](~/assets/images/meetings-side-panel/selectzip.png)\n\n1. **[追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/meetings-side-panel/addtheapp.png)\n\n   [ **アプリの管理]** セクションには、アプリケーションの一覧が表示されます。\n\n   ![アプリを管理するアプリ](~/assets/images/meetings-side-panel/manageappsection.png)\n\n1. Teams会議に移動します。\n\n1. **[アプリの追加]** を選択します。 \n\n   アプリの選択ページで、アプリが **サイド パネル** として表示されます。\n\n   ![Teamsのアプリ アイコン](~/assets/images/meetings-side-panel/appicon.png)\n\n1. **サイド パネル** アプリを選択します。\n\n1. **[保存]** を選択します。\n\n   ![ウェルカム アプリ](~/assets/images/meetings-side-panel/welcomeapp.png)\n\n   アプリは会議 SidePanel に表示されます。         \n"
- title: Teamsでアプリを操作する
  durationInMinutes: 1
  content: >
    Teamsでアプリを操作しましょう。


    1. [ **新しい議題項目の追加]** を選択して、既定の議題リストに新しい議題を追加します。

       ![Meet のトークン](~/assets/images/meetings-side-panel/sidepanelinmeet.png)

    1. リストに新しい議題項目を入力し、[ **追加**] を選択します。

       ![Meet のトークン](~/assets/images/meetings-side-panel/newagenda.png)

       新しい議題が一覧に追加されます。

    1. [ **発行の議題]** を選択します。

       ![トークン](~/assets/images/meetings-side-panel/youragenda.png)

       新しい議題リストが会議チャットに表示されます。

       ![トークン](~/assets/images/meetings-side-panel/agendainchat.png)
- title: チャレンジを完了する
  durationInMinutes: 1
  content: >
    このようなことを思い付いたのですか?

       ![Meet のトークン](~/assets/images/meetings-side-panel/sidepanelondesktopmobile.png)
- content: '**サイド パネル** アプリの使用を開始するためのチュートリアルを完了しました。'
