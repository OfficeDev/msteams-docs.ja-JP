### YamlMime:Tutorial
title: 会議 SidePanel
metadata:
  title: 会議 SidePanel
  description: このチュートリアルでは、会議用の会議サイドパネルをセットアップする方法Teams。
  audience: Developer
  level: Beginner
  ms.date: 12/06/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 会議用アプリを有効にして構成する方法の詳細
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 726288a336d047236a3c6c29faa55a33d6cc7394
  ms.sourcegitcommit: 7209e5af27e1ebe34f7e26ca1e6b17cb7290bc06
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 01/25/2022
  ms.locfileid: "62212588"
items:
- durationInMinutes: 1
  content: "会議 `meetingSidePanel` 中のエクスペリエンスが向上します。 オーガナイザーと発表者がさまざまなビューとアクションのセットを持つ場合に役立ちます。\n\nこのステップ バイ ステップ ガイドでは、サイド パネル アプリ **を実装して** 議題を追加および発行する方法について説明します。\n\n**会議開催者による会議のサイドパネルのやり取り**\n\n* **新しい議題項目の追加**: 新しい議題ポイントを追加する準備を提供します。\n* **追加**: サイド パネルの議題リストにテキスト入力 **として議題を** 追加します。\n* **議題の公開**: 議題リストを会議チャットに送信します。 \n\n次の出力が表示されます。\n\n ![トークン](~/assets/images/meetings-side-panel/sidepanelondesktopmobile.png)\n"
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境をセットアップしてください。  \n\n* [.NET Core SDK](https://dotnet.microsoft.com/download) バージョン 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [nodejs](https://nodejs.org/en/download/) LTS バージョン 10.21.0 以降\n* [ngrok](https://ngrok.com/download) の最新バージョン (devbox テストの場合のみ) または同等のトンネリング ソリューション\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken をインストールします](https://ngrok.com/download)。\n\n* [Microsoft Teams](https://teams.microsoft.com/)アカウントを使用する\n* [リアルタイムで](https://docs.microsoft.com/en-us/aspnet/signalr/overview/getting-started/tutorial-getting-started-with-signalr-and-mvc) 議題を更新する SignalR\n\n> [!NOTE]\n> 以前のバージョンでは会議のサイドパネルがサポートされていないので[、Teams SDK](/javascript/api/overview/msteams-client?view=msteams-client-js-latest&preserve-view=true)のバージョン 1.7.0 以降を使用します。\n"
- title: ローカル環境のセットアップ
  durationInMinutes: 1
  content: "リポジトリ `Microsoft-Teams-Samples` をローカル リポジトリに複製GitHub。  \n\n 1. サンプル[Microsoft Teams開きます](https://github.com/OfficeDev/Microsoft-Teams-Samples)。\n 1. [コード **] を選択します**。\n 1. ドロップダウン メニューから、[デスクトップで開く]**をGitHubします**。\n\n    ![リポジトリの複製](~/assets/images/meetings-side-panel/clonerepository1.png)\n\n 1. [複製 **] を選択します**。 \n"
- title: ボットを作成し、Azure ADする
  durationInMinutes: 5
  content: "ボットを作成し、Azure Active Directoryに登録するには、ngrok を使用してトンネルを作成し、メッセージング エンドポイントを追加するには、次の手順を実行します。\n\n* Azure Bot Service にボットを登録する Azure Bot リソースを作成します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* ボットMicrosoft Teamsチャネルを追加して、ボットを展開Teamsします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに **「Azure Bot」と入力します**。\n1. **[Enter] を選択します**。\n1. [Azure **Bot] を選択します**。\n\n     ![Azure ボット カードの作成](~/assets/images/bots/createazurebot.png)\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要なボット ハンドル名 **を入力します**。\n1. [サブスクリプション **] ドロップダウン リスト** から **、[msteams.nonprod.pub.msft.aplt] を選択します**。\n1. [リソース **グループ] ドロップダウン リスト** から、既存のリソース グループを選択します。 \n\n    ![リソース Azure ボットの選択](~/assets/images/meetings-side-panel/review-plus-create.png) \n\n   新しいリソース グループを作成できます ([新しいリソースの作成] **を選択>** リソース名を入力し **、[OK>** を選択します)。\n\n1. 新しいリソース グループを作成した場合は、[新しいリソース グループの場所] ドロップダウン リストから必要 **な場所を** 選択します。\n\n    ![新しいリソース グループの場所](~/assets/images/meetings-side-panel/newresource.png)\n\n1. [Microsoft **App ID] セクション** で、既定で [ **新しい Microsoft App ID の作成]** が選択されています。 \n\n   [既存のアプリ登録を使用 **する]** を選択し、[既存のアプリ **ID]** と [ **既存** のアプリ パスワード] を入力するか、[新しい Microsoft アプリ ID の作成] **を選択します**。\n\n   > [!NOTE]\n   > 同じ Microsoft App ID を持つ複数の **ボットを作成できない**。\n\n1. **[確認 + 作成]** を選びます。\n\n    ![Microsoft アプリ ID の作成](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. 検証に合格した場合は、[作成] を **選択します**。 \n\n    ボット サービスをプロビジョニングするには、少し時間が必要です。 \n\n1. [**リソースに移動**] を選びます。 \n\n    ![アプリの展開](~/assets/images/meetings-side-panel/botdeployment.png)\n\n    Azure ボットが作成されます。\n\n    ![Azure ボット リソースの作成](~/assets/images/meetings-side-panel/bot-page.png)\n\n**クライアント シークレットを作成するには**\n\n  新しい Microsoft App ID を作成した場合は、次の **手順を実行します**。\n\n1. 左側のパネルで、[構成] を **選択します**。 \n\n   > [!TIP]\n   > 将来の **参照のために Microsoft App ID** または **クライアント ID** を保存します。\n\n1. [Microsoft App **ID] の横にある**[管理] を **選択します**。\n\n1. [アプリ **の種類] で [** マルチ **テナント] を選択します**。\n\n    ![Microsoft アプリ ID](~/assets/images/meetings-side-panel/config.png)\n\n1. [クライアント シークレット **] セクションで** 、[新しいクライアント シークレット **] を選択します**。 \n\n    ![新しいクライアント シークレット](~/assets/images/meetings-side-panel/newclientsecret.png)\n\n   [ **クライアント シークレットの追加] ウィンドウ** が表示されます。  \n\n1. [説明 **] と入力します**。\n\n1. **[追加]** を選択します。\n\n    ![アプリにクライアント シークレットを追加する](~/assets/images/meetings-side-panel/clientsecret.png)\n\n1. [値] **列で** 、[クリップボードに **コピー] を選択します**。\n\n     ![クライアント シークレットの値](~/assets/images/meetings-side-panel/clientvalue.png)\n   \n   > [!TIP]\n   > 将来の **参照のためにクライアント シークレット** 値またはアプリ パスワードを保存します。\n\n**チャネルを追加Microsoft Teamsするには**\n\n1. [**ホーム**] を選択します。\n\n    ![ホーム ページ](~/assets/images/meetings-side-panel/gotohome.png)\n\n1. [最近使ったリソース] から **ボットを選択します**。\n\n1. 左側 **のウィンドウで** [チャネル] を選択します。 \n\n1. **[Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. このチェック ボックスをオンにして、利用規約 **に同意します**。\n\n1. [同意 **する] を選択します**。\n\n      ![利用規約](~/assets/images/meetings-side-panel/terms.png)\n\n1. **[保存]** を選択します。\n\n      ![[選択Teams](~/assets/images/meetings-side-panel/config-teams.png)   \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行中の Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> この **エラーが** ERR_NGROK_4018、コマンド プロンプトに示されている手順に従って ngrok にサインアップして認証します。 `ngrok http -host-header=localhost 3978` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https to io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/meetings-side-panel/ngrok1.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > この `WebAppDomain` 名前は、完全修飾ドメイン名で、そのドメイン名に `https://` 含めは含めではありません。\n\n1. 作成 **設定** Azure ボットの [構成] を **選択します**。\n\n1. メッセージング **エンドポイントで、ngrok** から利用可能な HTTPS URL を使用し、URL の最後に **/api/messages を追加します**。\n\n    ![メッセージング エンドポイント](~/assets/images/meetings-side-panel/messaging-endpoint.png)\n\n1. **[適用]** を選択します。\n\n    Azure Bot Service でボットを正常にセットアップしました。\n"
- title: アプリの登録Azure AD更新する
  durationInMinutes: 1
  content: "**アプリを登録するには、Azure ADポータル**  \n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[アプリの登録 **] を選択します**。\n\n1. ボットを選択します。\n\n   ![アプリの登録](~/assets/images/meetings-side-panel/appregister.png)\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [設定 **] を選択します**。\n\n   ![API を公開する](~/assets/images/meetings-side-panel/exposeanapi.png)\n\n1. の形式 **でアプリケーション ID URI** を設定します `api://{AppID}` 。\n\n   ![リンクの設定](~/assets/images/meetings-side-panel/setlink.png)\n\n1. との `WebAppDomain` 間に値 `api://` を挿入 `/{AppID}` します。</br>\n    `api://ae57****.ngrok.io/{AppID}`</br>\n    \n   次の図は、ドメイン名を示しています。\n    \n    ![アプリ ID URI](~/assets/images/meetings-side-panel/appIDuri.png)\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は `f631****.ngrok.io` 、新しい ngrok サブドメイン名です。\n\n1. **[スコープの追加]** を選択します。 \n\n   ![スコープの選択](~/assets/images/meetings-side-panel/selectscope.png)\n\n1. 表示されるパネルで、スコープ `access_as_user` 名として **入力します**。\n\n1. 同意 **Whoを設定しますか?** `Admins and users` に設定します。\n\n1. スコープに適切な値を指定して管理者とユーザーの同意のプロンプトを構成 `access_as_user` するには、フィールドに次の情報を入力します。</br>\n\n     * 管理者 `Teams can access the user’s profile` の同意 **表示名として入力します**。\n\n     * 管理者 `Allows Teams to call the app’s web APIs as the current user` の同意 **の説明として入力します**。\n\n     * [ユーザー `Teams can access the user profile and make requests on the user’s behalf` の **同意] 表示名として入力します**。\n\n     * [ユーザー `Enable Teams to call this app’s APIs with the same rights as the user` の **同意の説明] として入力します**。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加** ] を選択します。\n\n    ![スコープを追加する](~/assets/images/meetings-side-panel/addascope.png)\n\n    > [!NOTE]\n    > スコープ **名は、** 最後に **追加されたアプリケーション ID** URI `/access_as_user` と一致する必要があります。</br>\n       `api://ae57****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/meetings-side-panel/scopes.png) \n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    ![クライアント アプリケーションの選択](~/assets/images/meetings-side-panel/selectclientapp.png) \n\n1. モバイル **アプリケーションまたはデスクトップ アプリケーション** `1fec8e78-bce4-4aaf-ab1b-5451cc387264` Teamsクライアント ID を入力します。 \n\n    ![クライアント アプリケーションの追加 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   Web アプリケーションの **クライアント ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` をTeamsできます。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. [承認済 **みスコープ] を選択します**。\n\n    ![クライアント アプリケーションの追加 2](~/assets/images/meetings-side-panel/authorizedscope.png) \n\n   次の図は、クライアント ID を表示します。\n\n    ![クライアント アプリケーション](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. 左側のパネルで、[API のアクセス **許可] を選択します**。 \n\n   > [!NOTE]\n   > ユーザーは、アプリが別のテナントにAzure AD場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n    ![アクセス許可の追加](~/assets/images/meetings-side-panel/addpermission.png)\n\n1. [Microsoft **Graph] を選択します**。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n    既定では **、User.Read** が選択されています。\n\n     ![User](~/assets/images/meetings-side-panel/userpermission.png)\n\n1. 以下のアクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profile**\n\n1. **[アクセス許可の追加]** を選択します。\n\n     ![その他のアクセス許可](~/assets/images/meetings-side-panel/other-permissions.png)\n\n1. 左側のパネルで、[認証] **を選択** してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する場合に同意する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        ![Web](~/assets/images/meetings-side-panel/webauth.png)\n\n     1. 完全修飾ドメイン名に追加して、アプリのリダイレクト URI `auth-end` を入力します。</br> \n       `https://ae57****.ngrok.io/auth-end`. </br>\n\n     1. 次 **のチェック ボックスをオンにして** 、暗黙的な付与とハイブリッド フローを有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        ![Auth-end](~/assets/images/meetings-side-panel/authend.png)\n"
- title: アプリの設定とマニフェスト ファイルの設定
  durationInMinutes: 1
  content: "1. 複製された **リポジトリの appsettings.json** に移動します。\n\n    ![アプリ設定の場所](~/assets/images/meetings-side-panel/appsettingslocation.png)\n\n1. **2019** 年に **appsettings.json** Visual Studio開き、次の情報を更新します。  \n\n     * ボット `\"MicrosoftAppId\"` の Microsoft **App ID に設定します**。\n     * ボット `\"MicrosoftAppPassword\"` のクライアント シークレット ID 値に設定します。\n     * 完全修飾 `\"BaseUrl\"` ドメイン名に設定します。\n\n    ![アプリの設定](~/assets/images/meetings-side-panel/appsettings.png)\n\n1. 複製された **リポジトリの manifest.json** に移動します。\n\n    ![マニフェスト ファイルの場所](~/assets/images/meetings-side-panel/manifestlocation.png)\n\n1. **2019 年 2019 年Visual Studioマニフェスト****.json** を開き、次の変更を行います。\n\n     * すべての出現回数を `<<Your_Domain_URL>>` 完全修飾ドメイン名に置き換える。\n     * すべての出現回数をボット `<<Microsoft-App-ID>>` の **Microsoft App ID に置き換える**。\n\n    ![マニフェスト イメージ 2](~/assets/images/meetings-side-panel/manifest-2.png)\n"
- title: サービスのビルドと実行
  durationInMinutes: 1
  content: "**2019 またはコマンド ラインを使用してサービスVisual Studio実行するには**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. **2019 Visual Studioを起動します**。\n   1. [ファイルを **開**  >  **く]**  >  **Project/ソリューション に移動します**。\n\n      ![ファイルを開く](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. **csharp** **フォルダーから [SidePanel.sln** ファイル] を選択します。\n\n      ![ソリューション ファイル](~/assets/images/meetings-side-panel/Tokenfileready.png)\n\n   1. F5 **キーを押** してプロジェクトを実行します。\n\n   1. 次の **ダイアログが表示** される場合は、[はい] を選択します。\n\n      ![信頼証明書](~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png)\n\n      Web ページが開き、ボット **の準備ができました! というメッセージが表示されます**。\n\n      ![アプリの準備完了](~/assets/images/meetings-side-panel/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト **ウィンドウ>で、>** サイド パネル>のサンプルに移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/meetings-side-panel/dotnetruncmd.png)\n  \n"
- title: 会議のサイドパネル アプリを会議に追加Teams
  durationInMinutes: 1
  content: "**会議を作成してTeamsサイドパネル アプリを追加するには**\n\n1. 複製されたリポジトリで、[サイド パネル] または [マニフェスト] **> csharp >移動します**。\n\n1. Manifest フォルダー.zipファイルを含むフォルダーを **作成** します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip ファイル](~/assets/images/meetings-side-panel/zipfile.png) \n\n1. 少数の発表者と出席者との会議を作成します。\n\n1. 会議を作成したら、会議の詳細ページに移動し、[アプリの追加 **] を選択します**。\n\n   ![アプリの追加](~/assets/images/meetings-side-panel/addanapp.png) \n\n1. 開くポップアップで、[アプリの管理] **を選択します**。\n\n   ![アプリを管理する](~/assets/images/meeting-token-generator/meeting-token-generator-manageappsimage.png)\n\n1. カスタム **アプリアップロードを選択します**。 \n\n   ![アップロードカスタム アプリ](~/assets/images/meetings-side-panel/uploadcustomapp.png)\n\n1. [ **開く** ] を選択して.zip作成したファイルを **アップロード** します。\n\n   ![Zip ファイルの選択](~/assets/images/meetings-side-panel/selectzip.png)\n\n1. **[追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/meetings-side-panel/addtheapp.png)\n\n   [ **アプリの管理]** セクションには、アプリケーションの一覧が表示されます。\n\n   ![アプリの管理のアプリ](~/assets/images/meetings-side-panel/manageappsection.png)\n\n1. [会議] Teams移動します。\n\n1. **[アプリの追加]** を選択します。 \n\n   アプリの選択ページで、アプリはサイド パネルとして **表示されます**。\n\n   ![アプリのアイコン (Teams](~/assets/images/meetings-side-panel/appicon.png)\n\n1. サイド パネル **アプリを選択** します。\n\n1. **[保存]** を選択します。\n\n   ![ウェルカム アプリ](~/assets/images/meetings-side-panel/welcomeapp.png)\n\n   アプリは会議の SidePanel に表示されます。         \n"
- title: アプリを操作Teams
  durationInMinutes: 1
  content: >
    アプリを使ってアプリを操作Teams!


    1. [新 **しい議題アイテムの追加]** を選択して、既定の議題リストに新しい議題を追加します。

       ![Meet のトークン](~/assets/images/meetings-side-panel/sidepanelinmeet.png)

    1. リストに新しい議題項目を入力し、[追加] を **選択します**。

       ![Meet のトークン](~/assets/images/meetings-side-panel/newagenda.png)

       新しい議題がリストに追加されます。

    1. [発行 **の議題] を選択します**。

       ![トークン](~/assets/images/meetings-side-panel/youragenda.png)

       新しい議題リストが会議チャットに表示されます。

       ![トークン](~/assets/images/meetings-side-panel/agendainchat.png)
- title: 完全なチャレンジ
  durationInMinutes: 1
  content: >
    このようなことを思い付い出しましたか?

       ![Meet のトークン](~/assets/images/meetings-side-panel/sidepanelondesktopmobile.png)
- content: サイド パネル アプリの使用を開始するチュートリアル **を完了** しました。
