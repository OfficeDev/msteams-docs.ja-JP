### YamlMime:Tutorial
title: 会議のサイド パネルを生成する
metadata:
  title: 会議サイド パネル
  description: この学習モジュールでは、Teams の議題を追加して発行する会議サイド パネルを生成する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 12/06/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/build-tabs-for-meeting.md
  nextTutorialTitle: 詳細については、会議のアプリを有効にして構成する
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8d985b0890570e00a2b3af244f99d3adadc69697
  ms.sourcegitcommit: 88fb2e9a18de3bd84e3c604ff235fc753c8de8f5
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/02/2022
  ms.locfileid: "68818794"
items:
- durationInMinutes: 1
  content: >
    会議側パネルは、会議内のエクスペリエンスを強化し、開催者と発表者がさまざまなビューとアクションのセットを持つのに役立ちます。


    会議サイド パネルの主な機能は次のとおりです。


    * 新しい議題ポイントを追加するためのプロビジョニング。

    * サイド パネル リストにテキスト入力として議題を追加します。

    * 会議チャットに議題リストを発行します。


    このステップ バイ ステップ ガイドは、会議側パネルを生成して議題を追加して公開するのに役立ちます。 次の出力が表示されます。

       :::image type="content" source="~/assets/images/meetings-side-panel/sidepanelondesktopmobile_1.png" alt-text="トークン":::
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境を設定していることを確認します。  \n\n | &nbsp; | インストール | 使用するには... |\n | --- | --- | --- |\n | **必須** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams は、チャット、会議、通話、すべてのアプリを通じて作業するすべてのユーザーと 1 か所で共同作業を行います。|\n | &nbsp; | [Visual Studio 2022 バージョン 17.3](https://visualstudio.microsoft.com)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • ASP.NET と Web 開発 <br> • .NET Core クロスプラットフォーム開発 | Visual Studio 2022 でエンタープライズ バージョンをインストールし、ワークロードをインストールできます。 |\n | &nbsp; | [.NET Core SDK バージョン 3.1](https://dotnet.microsoft.com/en-us/download) | ローカル デバッグとAzure Functionsアプリのデプロイ用にカスタマイズされたバインド。 .NET 3.1 (以降) SDK をグローバルにインストールしていない場合は、移植可能なバージョンをインストールできます。 |\n | &nbsp; | [Node.js と npm](https://nodejs.org/) | バックエンド JavaScript ランタイム環境。 最新の v16 LTS リリースを使用します。|\n | &nbsp; | [Teams SDK の最新バージョン](/javascript/api/overview/msteams-client?view=msteams-client-js-latest&preserve-view=true) | npm または yarn を使用してパッケージをインストールできます。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams アプリの機能 (会話型ボット、メッセージ拡張機能、受信 Webhook) には、受信接続が必要です。 トンネルは、開発システムを Teams に接続します。 タブのみを含むアプリには必要ありません。 このパッケージはプロジェクト ディレクトリ内にインストールされます (npm `devDependencies` を使用)。 |\n | &nbsp; | [Signalr](/aspnet/signalr/overview/getting-started/tutorial-getting-started-with-signalr-and-mvc) | をインストールして、議題をリアルタイムで更新します。 |\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken を](https://ngrok.com/download)インストールします。\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "\n1. [Microsoft Teams サンプル](https://github.com/OfficeDev/Microsoft-Teams-Samples)を開きます。\n1. [ **コード] を選択します**。\n1. ドロップダウン メニューから、[ **GitHub Desktop で開く**] を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/meetings-side-panel/clonerepository_1.png\" alt-text= \"Clone repository.\":::\n\n1. [ **複製] を選択します**。 \n        \n   > [!NOTE]\n   > \"ファイル名が長すぎます\" というエラーが発生した場合は、任意の管理者ターミナルで git コマンド `git config --system core.longpaths true` を適用します。\n"
- title: ボットを作成して登録する
  durationInMinutes: 5
  content: "Microsoft Azure Active Directory (Azure AD) でボットを作成して登録するには、次の手順に従います。\n\n* Azure Bot サービスにボットを登録する Azure Bot リソースを作成します。\n* クライアント シークレットを作成して、ボットのシングル サインオン (SSO) 認証を有効にします。\n* Teams チャネルを追加してボットをデプロイします。\n* Web サーバーのエンドポイントへの ngrok トンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure ボット リソースを作成するには**\n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot**」と入力します。\n1. **Enter** キーを押します。\n1. [ **Azure Bot**] を選択します。\n1. **[作成]** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/meetings-side-panel/azure-bot_1.png\" alt-text=\"Azure ボット。\":::\n\n**[Azure Bot の作成** ] ウィンドウが表示されます。\n\n1. [Bot handle]\\(ボット ハンドル\\) に必要な **ボット ハンドル** 名を入力します。\n1. それぞれのドロップダウン リストから **[サブスクリプション]** と [ **リソース] グループ** を選択します。\n   \n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/review-plus-create.png\" alt-text=\"リソース Azure ボットを選択する\":::\n\n   新しいリソース グループを作成できます。 [ **新規作成]** を選択>リソース名を入力> **[OK] を選択します**。 [ **新しいリソース グループの場所** ] ドロップダウン リストから必要な場所を選択します。\n   詳細については、「 [リソース グループの作成](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups)」を参照してください。\n\n   :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"新しいリソース グループの場所\":::\n\n1. [ **Microsoft アプリ ID** ] セクションで、既定で [ **新しい Microsoft アプリ ID の作成** ] が選択されています。 \n\n    [ **既存のアプリの登録を使用する** ] を選択し、既存 **のアプリ ID**、 **アプリ テナント ID**、 **MSI リソース ID を** 入力できます。\n\n   > [!NOTE]\n   > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. [**マルチテナント**] として [**アプリの種類]** を選択します。\n\n1. **[確認 + 作成]** を選びます。\n\n   :::image type=\"content\" source=\"./assets/images/meetings-side-panel/tenant-review_1.png\" alt-text=\"テナント レビュー。\":::\n\n1. 検証に合格した場合は、[作成] を選択 **します**。\n\n    ボット サービスがプロビジョニングされるまで少し時間がかかります。 \n\n1. [**リソースに移動**] を選びます。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/botdeployment_1.png\" alt-text=\"アプリのデプロイ\":::\n\n    Azure ボットが作成されます。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/bot-page_1.png\" alt-text=\"Azure ボット リソースが作成されました\":::\n\n**クライアント シークレットを作成するには**\n\n  新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のウィンドウで、[構成] を選択 **します**。 \n\n   > [!TIP]\n   > 今後参照するために **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **[Microsoft アプリ ID] の** 横にある [管理] を選択 **します**。\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manage-bot-label_1.png\" alt-text=\"ボットを管理する\":::\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_2.png\" alt-text=\"新しいクライアント シークレットの選択を示すスクリーンショット。\":::\n\n   **[クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n1. クライアント シークレットに **「Description」と** 入力します。\n\n1. **[追加]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/clientsecret_1.png\" alt-text=\"アプリにクライアント シークレットを追加する\":::\n\n1. [ **クリップボードにコピー] を** 選択して **、値** の詳細をコピーします。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/clientvalue.png\" alt-text=\"クライアント シークレットの値\":::\n   \n   > [!TIP]\n   > 後で参照するために、 **クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n**Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/gotohome_1.png\" alt-text=\"ホーム ページ\":::\n\n1. [ **最近使ったリソース**] からボットを選択します。\n\n1. 左側のウィンドウで [**チャネル**] を選択し、[**Microsoft Teams**] を選択します <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"./assets/images/meetings-side-panel/channel-teams_1.png\" alt-text=\"[Teams] を選択します。\":::\n\n1. チェックボックスをオンにして **、利用規約** に同意します。\n\n1. [ **同意する] を選択します**。\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/terms_2.png\" alt-text=\"サービス利用規約\":::\n\n1. **[適用]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/apply-teams_1.png\" alt-text=\"microsoft teams\":::\n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http --host-header=localhost 3001\n ```\n\n> [!TIP]\n> **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに記載されている手順に従ってサインアップし、ngrok を認証します。 `ngrok http --host-header=localhost 3001` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL をコピーします。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/ngrok-url_1.png\" alt-text=\"ngrok HTTPS URL\":::\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、 を含 `https://`まないドメイン名です。\n\n1. **[構成設定]** で、**[追加]** を選択します。\n\n1. **メッセージング エンドポイント** で、ngrok から HTTPS URL を追加し、URL の末尾に /api/messages を追加します。\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/messaging-endpoint_1.png\" alt-text=\"メッセージング エンドポイント\":::\n\n1. **[適用]** を選択します。\n\n    Azure Bot サービスでボットを正常に設定しました。\n"
- title: Azure AD アプリの登録を更新する
  durationInMinutes: 1
  content: "\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/AAD.png\" alt-text=\"Aad\":::\n\n1. 左側のナビゲーション ウィンドウで、[**アプリの登録**] を選択します。\n\n1. ボットを選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appregister_2.png\" alt-text=\"アプリの登録\":::\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [ **設定] を選択します**。\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/exposeanapi_1.png\" alt-text=\"API を公開する\":::\n\n1. **アプリケーション ID URI を** の形式`api://your ngrok/botid-{AppID}`で設定します。\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/setlink_1.png\" alt-text=\"リンクの設定\":::\n    \n   次の図は、ドメイン名を示しています。\n    \n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appIDuri_1.png\" alt-text=\"アプリ ID URI\":::\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > たとえば、 `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2``f631****.ngrok.io` は新しい ngrok サブドメイン名です。\n\n1. **[スコープの追加]** を選択します。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectscope_1.png\" alt-text=\"[スコープの追加]\":::\n\n  **[スコープの追加]** ウィンドウが表示されます。\n\n1. スコープを構成するには、次の詳細を入力します。\n\n     * **スコープ名** として「」と入力`access_as_user`します。\n\n     * [ **同意できるユーザー]** を に `Admins and users`設定します。\n\n1. スコープの適切な値 `access_as_user` を使用して管理者とユーザーの同意プロンプトを構成するには、フィールドに次の情報を指定します。</br>\n\n     * **同意の表示名管理** 入力`Teams can access the user’s profile`します。\n\n     * **同意の説明として「管理**」と入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **[ユーザーの同意] 表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **[ユーザーの同意の説明]** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n1. [ **状態]** を **[有効]** に設定します。\n\n1. **[スコープの追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addascope_2.png\" alt-text=\"スコープを追加する\":::\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://*******.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/scopes_1.png\" alt-text=\"Scope\":::\n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectclientapp.png\" alt-text=\"クライアント アプリケーションの選択\":::\n\n1. 次の各クライアント ID を入力し、承認されたスコープを選択します。\n\n   * 「 **クライアント ID**: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` for Teams mobile or desktop application」と入力します。 \n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"クライアント アプリケーションの追加 1\"::: \n\n   * 「 **クライアント ID**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` for Teams Web アプリケーション」と入力します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"クライアント アプリケーションの追加 2\":::\n\n1. [ **承認されたスコープ] を選択します**。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/authorizedscope_1.png\" alt-text=\"クライアント アプリケーションの追加 2\":::\n\n   次の図は、クライアント ID を表示します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/clientapps.png\" alt-text=\"クライアント アプリケーション\"::: \n\n1. 左側のウィンドウで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可** > の追加]**を選択する Microsoft Graph**\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addpermission_1.png\" alt-text=\"アクセス許可の追加\"::: \n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. 次の API アクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n     * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"その他のアクセス許可\":::\n\n1. 左側のウィンドウで、[ **認証** ] を選択してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーは初めてアプリを使用する際に同意を提供する必要があります。\n           \n     1. [プラットフォーム >  **Web の追加] を** 選択します。\n\n        :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/webauth_1.png\" alt-text=\"Web\":::\n\n     1. ドメイン名に追加 `auth-end` して、アプリのリダイレクト URI を入力します。</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして、 **暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン (暗黙的なフローに使用)**\n         * **アクセス トークン (暗黙的およびハイブリッド フローに使用)**\n\n     1. **[構成]** を選択します。\n\n         :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/authend_1.png\" alt-text=\"Auth-end\":::\n"
- title: アプリ設定とマニフェスト ファイルを設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリの **appsettings.json** に移動します。\n\n      :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appsettingslocation_1.png\" alt-text=\"アプリ設定の場所\":::\n\n1. Visual Studio で **appsettings.json** を開き、次の情報を更新します。  \n\n     * をボットの **Microsoft アプリ ID に** 置き換えます`\"MicrosoftAppId\"`。\n     * をボットのクライアント シークレット ID **値** に置き換えます`\"MicrosoftAppPassword\"`。\n     * を ngrok ドメイン名に置き換えます `\"BaseUrl\"` 。\n\n      :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appsettings_1.png\" alt-text=\"アプリの設定\":::\n      \n\n1. 複製されたリポジトリの **manifest.json** に移動します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manifestlocation_1.png\" alt-text=\"マニフェスト ファイルの場所\":::\n\n1. Visual Studio で **manifest.json** を開き、次の変更を行います。\n\n     * のすべての出現箇所を `<<Your_Domain_URL>>` ngrok ドメイン名に置き換えます。\n     * のすべての出現箇所を `<<Microsoft-App-ID>>` ボットの **Microsoft アプリ ID に** 置き換えます。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manifest-2_1.png\" alt-text=\"マニフェスト イメージ2\":::\n"
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**最新バージョンの Visual Studio またはコマンド ラインを使用してサービスをビルドして実行するには**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs)\n\n   1. **Visual Studio を** 開きます。\n   1. **[ファイル** > を **開く****] [プロジェクト/ソリューション**]  >  に移動します。\n\n       :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/open-project1.png\" alt-text=\"ファイルを開く\":::\n\n   1. **csharp** フォルダーから **[SidePanel.csproj** ファイル] を選択します。\n\n       :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/Tokenfileready_1.png\" alt-text=\"ソリューション ファイル\":::\n\n   1. **F5** キーを押してプロジェクトを実行します。 適切なフォルダー内の Visual Studio または .NET を使用して実行できます。\n\n   1. フォルダーに `samples\\meetings-sidepanel\\csharp\\ClientApp` 移動し、コマンドを実行します。\n\n       ```bash\n       npx @fluidframework/azure-local-service@latest\n       ```\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n        :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/certificate.png\" alt-text=\"信頼証明書\":::\n\n      Web ページに、ボットの **準備ができました!** というメッセージが表示されます。\n\n       :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appisready_1.png\" alt-text=\"アプリの準備完了\"::: \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウ **> csharp > サイド パネル>サンプル** に移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n:::image type=\"content\" source=\"~/assets/images/meetings-side-panel/dotnetruncmd.png\" alt-text=\"Dotnet\"::: \n  \n"
- title: Teams に会議側パネルを追加する
  durationInMinutes: 1
  content: "\n1. 複製したリポジトリで、 **csharp >サイド パネル > マニフェスト** に移動します。\n\n1. **マニフェスト** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/zipfile_1.png\" alt-text=\"Zip ファイル\"::: \n\n1. 少数の発表者と出席者との会議を作成します。\n\n1. 会議が作成されたら、会議の詳細ページに移動し、[ **アプリ** ] を選択してアプリを追加します。\n\n1. ポップアップ ウィンドウで、[ **アプリの管理**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manageapps_1.png\" alt-text=\"アプリを管理する\"::: \n\n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/uploadcustomapp_1.png\" alt-text=\"カスタム アプリをアップロードする\"::: \n\n1. [ **開く** ] を選択して、 **Manifest** フォルダーに作成した.zip ファイルをアップロードします。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectzip_1.png\" alt-text=\"zip ファイルを選択する\"::: \n\n1. **[追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addtheapp_1.png\" alt-text=\"アプリを追加する\"::: \n\n   [ **アプリの管理** ] セクションには、アプリケーションの一覧が表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manageappsection_1.png\" alt-text=\"アプリの管理のアプリ\"::: \n\n1. Teams 会議に移動します。\n\n1. **[アプリ]** を選択します。 \n\n   アプリの選択ページで、 **サイド パネル** アプリが表示されます。\n\n1. **サイド パネル** アプリを選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appicon-2.png\" alt-text=\"Teams のアプリ アイコン\"::: \n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/welcomeapp_1.png\" alt-text=\"ウェルカム アプリ\"::: \n\n   アプリは会議のサイド パネルに表示されます。         \n"
- title: Teams でアプリを操作する
  durationInMinutes: 1
  content: "Teams でアプリと対話しましょう。\n\n1. [ **新しい議題項目の追加]** を選択して、既定の議題リストに新しい議題を追加します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/sidepanelinmeet_1.png\" alt-text=\"Meet のトークン\"::: \n\n1. 新しい議題項目を入力し、[ **追加**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newagenda_1.png\" alt-text=\"新しい議題\"::: \n\n   新しい議題が一覧に追加されます。\n\n1. [ **発行議題] を選択します**。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/youragenda_1.png\" alt-text=\"トークン\"::: \n\n   新しい議題リストが会議チャットに表示されます。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/agendainchat_1.png\" alt-text=\"トークン\"::: \n"
- title: 課題の完了
  durationInMinutes: 1
  content: "あなたはこのような出力を思いついたのですか?\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/sidepanelondesktopmobile_1.png\" alt-text=\"Meet のトークン\"::: \n"
- content: '**サイド パネル** アプリの使用を開始するためのチュートリアルを完了しました。'
