### YamlMime:Tutorial
title: 会議のサイド パネルを生成する
metadata:
  title: 会議のサイド パネル
  description: このラーニング モジュールを使用して、Teams の議題を追加して発行する会議のサイド パネルを生成する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 12/06/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 会議用のアプリを有効にして構成する方法の詳細
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: fa99738dafa476ba432063efb38b9777936a7914
  ms.sourcegitcommit: c1032ea4f48c4bbf5446798ff7d46d7e6e9f55d2
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/27/2022
  ms.locfileid: "68027369"
items:
- durationInMinutes: 1
  content: >
    会議のサイド パネルは、会議内のエクスペリエンスを向上させ、開催者と発表者がさまざまなビューとアクションのセットを持つのに役立ちます。


    会議のサイド パネルの主な機能


    * 新しい議題ポイントを追加するためのプロビジョニング。

    * **サイド パネル** の一覧に、テキスト入力として議題を追加します。

    * 会議チャットに議題リストを公開します。


    このステップ バイ ステップ ガイドは、会議のサイド パネルを生成して、議題を追加および発行するのに役立ちます。 次の出力が表示されます。

       :::image type="content" source="~/assets/images/meetings-side-panel/sidepanelondesktopmobile.png" alt-text="トークン":::
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境をセットアップしてください。  \n\n* 有効なアカウントを持つ [Microsoft Teams](https://teams.microsoft.com/)\n* [Teams SDK の最新バージョン](/javascript/api/overview/msteams-client?view=msteams-client-js-latest&preserve-view=true)\n* [Core SDK of.NET 最新バージョン](https://dotnet.microsoft.com/download) \n* [Visual Studio の最新バージョン](https://visualstudio.microsoft.com/downloads/)\n* [nodejs の最新バージョン](https://nodejs.org/en/download/)\n* リアルタイムで議題を更新する [SignalR](/aspnet/signalr/overview/getting-started/tutorial-getting-started-with-signalr-and-mvc)\n* 最新[バージョンの ngrok](https://ngrok.com/download) (devbox テストまたは同等のトンネリング ソリューションのみ)\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken](https://ngrok.com/download) をインストールします。\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "\n1. [Microsoft Teams のサンプルを](https://github.com/OfficeDev/Microsoft-Teams-Samples)開きます。\n1. [ **コード**] を選択します。\n1. ドロップダウン メニューから[ **Open with GitHub Desktop]\\(GitHub Desktop で開く\\**) を選択します。\n\n  :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/clonerepository1.png\" alt-text=\"リポジトリを複製する\":::\n\n1. [ **複製**] を選択します。 \n        \n   > [!NOTE]\n   > \"Filename too long\" というエラーが発生した場合は、選択した管理者ターミナルに git コマンド 'git config --system core.longpaths true' を適用します。\n"
- title: ボットを作成して登録する
  durationInMinutes: 5
  content: "次の手順は、ボットを作成してAzure portalに登録するのに役立ちます。\n\n* Azure bot リソースを作成して、Azure Bot Serviceにボットを登録します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* ボットをデプロイする Teams チャネルを追加します。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot**」と入力します。\n1. **Enter** キーを押します。\n1. **Azure Bot** を選択します。\n\n     :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Azure ボット。\":::\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要な **ボット ハンドル** 名を入力します。\n1. ドロップダウン リストから **[サブスクリプション]** を選択します。\n1. ドロップダウン リストから **[リソース グループ]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/review-plus-create.png\" alt-text=\"リソース Azure ボットを選択する\":::\n\n   新しいリソース グループを作成するには、[ **新規作成**] を選択し、リソース名を入力 **し、[OK] を** 選択し、[ **新しいリソース グループの場所** ] ドロップダウン リストから必要な場所を選択します。\n   詳細については、「 [リソース グループの作成](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups)」を参照してください。\n\n      :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"新しいリソース グループの場所\":::\n\n1. **[Microsoft アプリ ID**] セクションでは、既定で [**新しい Microsoft アプリ ID の作成]** が選択されています。 \n\n   [ **既存のアプリの登録を使用** する] を選択し、 **既存のアプリ ID** と **既存のアプリ パスワード** を入力するか、[ **新しい Microsoft アプリ ID の作成**] を選択します。\n\n   > [!NOTE]\n   > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. [**マルチテナント** としての **アプリの種類**] を選択します。\n\n1. **[確認 + 作成]** を選びます。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/Review-create.png\" alt-text=\"Microsoft アプリ ID を作成する\":::\n\n1. 検証に合格した場合は、**[作成]** を選択します。 \n\n    ボット サービスがプロビジョニングされるまで少し時間がかかります。 \n\n1. [**リソースに移動**] を選びます。 \n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/botdeployment.png\" alt-text=\"アプリをデプロイする\":::\n\n    Azure ボットが作成されます。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/bot-page.png\" alt-text=\"Azure ボット リソースが作成されました\":::\n\n**クライアント シークレットを作成するには**\n\n  新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のパネルで、[構成] を選択 **します**。 \n\n   > [!TIP]\n   > 今後参照できるように **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **Microsoft アプリ ID** の横にある [**管理**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"ボットを管理する\":::\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。 \n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret.png\" alt-text=\"新しいクライアント シークレット\":::\n\n   [ **クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n1. **「説明」と入力します**。\n\n1. **[追加]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/clientsecret.png\" alt-text=\"クライアント シークレットをアプリに追加する\":::\n\n1. [ **値** ] 列で、[ **クリップボードにコピー**] を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/clientvalue.png\" alt-text=\"クライアント シークレットの値\":::\n   \n   > [!TIP]\n   > 今後参照できるように **、クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n**Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/gotohome.png\" alt-text=\"ホーム ページ\":::\n\n1. **最近使用したリソース** からボットを選択します。\n\n1. 左側のウィンドウで **[チャネル**] を選択し、**Microsoft Teams** を選択します。 <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n    :::image type=\"content\" source=\"./assets/images/adaptive-cards/channel-teams.png\" alt-text=\"[Teams] を選択します。\":::\n\n1. [ **利用規約**] に同意するには、チェック ボックスをオンにします。\n\n1. **[同意する**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/terms-of-service1.png\" alt-text=\"利用規約\":::\n\n1. **[適用]** を選択します。  \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n> [!TIP]\n> **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに記載されている手順に従って、ngrok にサインアップして認証します。 `ngrok http --host-header=localhost 3978` コマンドを実行します。\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL をコピーします。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"ngrok HTTPS URL\":::\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > は `WebAppDomain` 、完全修飾ドメイン名であり、ドメイン名には含 `https://` まれません。\n\n1. 作成した Azure ボットの **設定** で、[構成] を選択 **します**。\n\n1. **メッセージング エンドポイント** で、ngrok から入手できる HTTPS URL を使用し、URL の最後に **/api/messages** を追加します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/messaging-endpoint.png\" alt-text=\"メッセージング エンドポイント\":::\n\n1. **[適用]** を選択します。\n\n    Azure Bot Serviceでボットが正常に設定されました。\n"
- title: Azure AD アプリの登録を更新する
  durationInMinutes: 1
  content: "\n1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のナビゲーション パネルで、[ **アプリの登録**] を選択します。\n\n1. ボットを選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appregister.png\" alt-text=\"アプリの登録\":::\n\n1. [**管理**] で [**API の公開**] を選択します。\n\n1. [ **設定**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/exposeanapi.png\" alt-text=\"API を公開する\":::\n\n1. **アプリケーション ID URI を** 次の`api://your ngrok/botid-{AppID}`形式で設定します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/setlink.png\" alt-text=\"リンクを設定する\":::\n    \n   次の図は、ドメイン名を示しています。\n    \n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appIDuri.png\" alt-text=\"アプリ ID URI\":::\n\n    > [!NOTE]\n    > ngrok などのトンネリング サービスを使用している場合は、ngrok サブドメインが変更されるたびに値を更新してください。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`は、新しい ngrok サブドメイン名です `f631****.ngrok.io` 。\n\n1. **[スコープの追加]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectscope.png\" alt-text=\"[スコープの追加]\":::\n\n1. 表示されるパネルで、**スコープ名** として入力`access_as_user`します。\n\n1. **[同意できるユーザー] を** `Admins and users`[ .\n\n1. スコープの適切な値を使用して管理者とユーザーの同意プロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n     * **同意表示名管理** 入力`Teams can access the user’s profile`します。\n\n     * **同意の説明管理** 入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n     * **ユーザー同意表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n     * **ユーザーの同意の説明** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addascope.png\" alt-text=\"スコープを追加する\":::\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://4d52****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/scopes.png\" alt-text=\"Scope\":::\n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectclientapp.png\" alt-text=\"クライアント アプリケーションを選択する\":::\n\n1. **クライアント ID を** 入力します。 `1fec8e78-bce4-4aaf-ab1b-5451cc387264` Teams モバイルアプリケーションまたはデスクトップ アプリケーションの場合。 \n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"クライアント アプリケーションを追加する 1\"::: \n\n   Teams Web アプリケーションの **クライアント ID:**`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` を入力できます。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"クライアント アプリケーションの追加 2\":::\n\n1. [ **承認されたスコープ]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/authorizedscope.png\" alt-text=\"クライアント アプリケーションの追加 2\":::\n\n   次の図は、クライアント ID を表示します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/clientapps.png\" alt-text=\"クライアント アプリケーション\"::: \n\n1. 左側のパネルで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addpermission.png\" alt-text=\"アクセス許可を追加する\"::: \n\n1. **[Microsoft Graph]** を選択します。\n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. 以下のアクセス許可を追加します。</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profile**\n     * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/other-permissions.png\" alt-text=\"その他のアクセス許可\":::\n\n1. 左側のパネルで [ **認証** ] を選択してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n         :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/webauth.png\" alt-text=\"Web\":::\n\n     1. 完全修飾ドメイン名に追加して、アプリの `auth-end` リダイレクト URI を入力します。</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして **、暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n         :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/authend.png\" alt-text=\"Auth-end\":::\n"
- title: アプリの設定とマニフェスト ファイルを設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで **appsettings.json** に移動します。\n\n      :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appsettingslocation.png\" alt-text=\"アプリ設定の場所\":::\n\n1. Visual Studio で **appsettings.json を** 開き、次の情報を更新します。  \n\n     * ボットの **Microsoft アプリ ID に** 設定`\"MicrosoftAppId\"`します。\n     * ボットのクライアント シークレット ID 値に設定 `\"MicrosoftAppPassword\"` します。\n     * 完全修飾 ngrok ドメイン名に設定 `\"BaseUrl\"` します。\n\n      :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appsettings.png\" alt-text=\"アプリの設定\":::\n      \n\n1. 複製されたリポジトリで **manifest.json** に移動します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manifestlocation.png\" alt-text=\"マニフェスト ファイルの場所\":::\n\n1. Visual Studio で **manifest.json を** 開き、次の変更を加えます。\n\n     * すべての出現箇所を `<<Your_Domain_URL>>` 完全修飾 ngrok ドメイン名に置き換えます。\n     * すべての出現箇所をボットの `<<Microsoft-App-ID>>` **Microsoft アプリ ID に** 置き換えます。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manifest-2.png\" alt-text=\"マニフェスト イメージ 2\":::\n"
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**Visual Studio またはコマンド ラインを使用してサービスをビルドして実行するには**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs)\n\n   1. **Visual Studio を開きます**。\n   1. **ファイル** > **を開く** > **プロジェクト/ソリューション** に移動します。\n\n       :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/VSopenfile.png\" alt-text=\"ファイルを開く\":::\n\n   1. **csharp** フォルダーから **SidePanel.sln** ファイルを選択します。\n\n       :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/Tokenfileready.png\" alt-text=\"ソリューション ファイル\":::\n\n   1. **F5** キーを押してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n        :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/certificate.png\" alt-text=\"証明書を信頼する\":::\n\n      Web ページが開き、メッセージが表示されます **。ボットの準備は完了です。**\n\n       :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appisready.png\" alt-text=\"アプリの準備完了\"::: \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウ **> csharp >サイド パネル>サンプル** に移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n:::image type=\"content\" source=\"~/assets/images/meetings-side-panel/dotnetruncmd.png\" alt-text=\"Dotnet\"::: \n  \n"
- title: Teams に会議サイド パネルを追加する
  durationInMinutes: 1
  content: "\n1. 複製されたリポジトリで、 **csharp >サイド パネル > マニフェスト** に移動します。\n\n1. **マニフェスト** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/zipfile.png\" alt-text=\"Zip ファイル\"::: \n\n1. 発表者と出席者を含む会議を作成します。\n\n1. 会議が作成されたら、会議の詳細ページに移動し、[ **アプリの追加]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addanapp.png\" alt-text=\"アプリの追加\":::\n\n1. ポップアップ ウィンドウで、[ **アプリの管理**] を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manageapps.png\" alt-text=\"アプリを管理する\"::: \n\n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/uploadcustomapp.png\" alt-text=\"カスタム アプリをアップロードする\"::: \n\n1. **[開く]** を選択して、**マニフェスト** フォルダーに作成した.zip ファイルをアップロードします。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectzip.png\" alt-text=\"zip ファイルを選択する\"::: \n\n1. **[追加]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addtheapp.png\" alt-text=\"アプリを追加する\"::: \n\n   [ **アプリの管理]** セクションには、アプリケーションの一覧が表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/manageappsection.png\" alt-text=\"アプリを管理するアプリ\"::: \n\n1. Teams 会議に移動します。\n\n1. **[アプリの追加]** を選択します。 \n\n   アプリの選択ページで、アプリが **サイド パネル** として表示されます。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/appicon-1.png\" alt-text=\"Teams のアプリ アイコン\"::: \n\n1. **サイド パネル** アプリを選択します。\n\n1. **[保存]** を選択します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/welcomeapp.png\" alt-text=\"ウェルカム アプリ\"::: \n\n   アプリは、会議のサイド パネルに表示されます。         \n"
- title: Teams でアプリを操作する
  durationInMinutes: 1
  content: "Teams でアプリを操作しましょう。\n\n1. [ **新しい議題項目の追加]** を選択して、既定の議題リストに新しい議題を追加します。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/sidepanelinmeet.png\" alt-text=\"Meet のトークン\"::: \n\n1. リストに新しい議題項目を入力し、[ **追加**] を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newagenda.png\" alt-text=\"Meet のトークン\"::: \n\n   新しい議題が一覧に追加されます。\n\n1. [ **発行の議題]** を選択します。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/youragenda.png\" alt-text=\"トークン\"::: \n\n   新しい議題リストが会議チャットに表示されます。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/agendainchat.png\" alt-text=\"トークン\"::: \n"
- title: 課題の完了
  durationInMinutes: 1
  content: "このようなものを思いついたのですか?\n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/sidepanelondesktopmobile.png\" alt-text=\"Meet のトークン\"::: \n"
- content: '**サイド パネル** アプリの使用を開始するためのチュートリアルを完了しました。'
