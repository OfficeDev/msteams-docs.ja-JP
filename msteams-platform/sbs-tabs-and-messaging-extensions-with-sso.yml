### YamlMime:Tutorial
title: AADおよびメッセージング拡張機能の SSO の設定
metadata:
  title: AADおよびメッセージング拡張機能の SSO の設定
  description: このチュートリアルでは、タブ用の SSO のAADについて説明します。
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: タブの SSO 認証の詳細をご覧ください。
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: ca795beaab73af0cd3ddf68a1adc583da2730ac4
  ms.sourcegitcommit: 3dc9b539c6f7fbfb844c47a78e3b4d2200dabdad
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 03/31/2022
  ms.locfileid: "64571261"
items:
- durationInMinutes: 1
  content: "シングル サインオン (Azure Active Directory SSO) は、AADでユーザーを認証するのにTeams。 \n\n**タブとメッセージング拡張機能の SSO を使用AADガイドの主な側面**\n\n * 最初のサインインの後で、AAD SSO を使用すると、ユーザーは自動的にサインインできます。\n * ユーザーがサインイン資格情報を再入力せずに他のデバイスにサインインできます。\n * ログインしているユーザーのトークンを取得します。   \n\nこのステップ バイ ステップ ガイドは、SSO 認証を有効にするタブとメッセージング拡張機能AAD役立ちます。 次の出力が表示されます。\n\n  ![おめでとう画像](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   \n"
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境をセットアップしてください。  \n\n* [Microsoft Teams](https://teams.microsoft.com/)アカウントを使用する\n* [.NET Core SDK](https://dotnet.microsoft.com/download) バージョン 3.1\n* [最新バージョンのVisual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) の最新バージョン (devbox テストの場合のみ) または同等のトンネリング ソリューション\n* [Microsoft 365をインストールするための](https://docs.microsoft.com/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant)適切なアクセス許可Teams開発者アカウントまたはユーザー アカウントへのアクセスを許可する\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken をインストールします](https://ngrok.com/download)。\n"
- title: ローカル環境のセットアップ
  durationInMinutes: 1
  content: "リポジトリ`Microsoft-Teams-Samples`をローカル リポジトリに複製GitHub。  \n\n 1. [サンプル[Microsoft Teams開きます](https://github.com/OfficeDev/Microsoft-Teams-Samples)。\n 1. [ **コード] を選択します**。\n 1. ドロップダウン メニューから、[デスクトップで開く] **をGitHubします**。\n\n    ![リポジトリの複製](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. [ **複製] を選択します**。 \n"
- title: ボットを作成して、ポータルにAzure ADする
  durationInMinutes: 5
  content: "次の手順を実行すると、次の手順を実行できます。\n\n* Azure Bot リソースを作成して、Azure ボットにボットを登録Bot Service。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* ボットMicrosoft Teamsチャネルを追加して、ボットを展開Teamsします。\n* ngrok を使用して、Web サーバーのエンドポイントへのトンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. ポータルに移動[Microsoft Azureします](https://portal.azure.com/)。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot」と入力します**。\n1. [Enter] を **選択します**。\n1. [ **Azure Bot] を選択します**。\n\n     ![Azure ボット カードの作成](~/assets/images/bots/createazurebot.png)\n\n1. **[作成]** を選択します。\n1. ボット ハンドルに必要なボット ハンドル名 **を入力します**。\n1. ドロップダウン リスト **から [サブスクリプション** ] を選択します。\n1. [リソース **グループ] ドロップダウン リスト** から、既存のリソース グループを選択します。 新しいリソース グループを作成できます ([新しいリソースの作成] を選択>リソース名を入力し、[**OK**>を選択します)。\n\n    ![ボットの登録](~/assets/images/Tab-ME-SSO/register-bot.png)\n\n1. [ **Microsoft App ID] セクション** で、既定で [ **新しい Microsoft App ID の作成]** が選択されています。 \n\n   [ **既存のアプリ登録を使用** する] を選択し、既存のアプリケーションの既存のアプリ **ID** と **既存** のアプリ パスワードを入力します。 [新 **しいアプリケーションの新しい Microsoft App ID** を作成する] を選択します。\n\n   > [!NOTE]\n   > 同じ Microsoft アプリ ID を持つ複数の **ボットを作成できない**。\n\n1. [アプリ **の種類] を選択** します。 `Multi Tenant`\n1. **[確認 + 作成]** を選びます。\n\n   ![ボットの登録](~/assets/images/Tab-ME-SSO/register-bot-2.png)\n\n1. 検証に合格した場合は、[作成] を **選択します**。\n\n    ボット サービスをプロビジョニングするには、少し時間が必要です。\n\n1. [**リソースに移動**] を選びます。 \n\n    ![アプリの展開](~/assets/images/Tab-ME-SSO/go-to-resource.png)\n\n    Azure ボットが作成されます。\n\n    ![アプリの展開](~/assets/images/Tab-ME-SSO/app-overview.png)\n\n**クライアント シークレットを作成するには**\n\n  新しい Microsoft App ID を作成した場合は、次の **手順を実行します**。\n\n1. 左側のパネルで、[構成] を **選択します**。 \n\n   > [!TIP]\n   > 将来の **参照のために Microsoft App ID** または **クライアント ID** を保存します。\n\n1. [ **Microsoft App ID] の横にある [** 管理] を **選択します**。\n\n    ![Microsoft アプリ ID](~/assets/images/Tab-ME-SSO/manage.png)\n\n1. [クライアント シークレット **] セクションで、[** 新しいクライアント シークレット **] を選択します**。 \n\n    ![新しいクライアント シークレット](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   [ **クライアント シークレットの追加] ウィンドウ** が表示されます。  \n\n1. [説明 **] と入力します**。\n\n1. **[追加]** を選択します。\n\n    ![アプリにクライアント シークレットを追加する](~/assets/images/Tab-ME-SSO/add-client-id.png)\n\n1. [値] **列で** 、[クリップボードに **コピー] を選択します**。\n\n     ![クライアント シークレットの値](~/assets/images/Tab-ME-SSO/client-ids.png)\n   \n   > [!TIP]\n   > 将来の **参照のためにクライアント シークレット** 値またはアプリ パスワードを保存します。\n\n**新しいチャネルをMicrosoft Teamsするには**\n\n1. [**ホーム**] を選択します。\n\n    ![ホーム ページ](~/assets/images/Tab-ME-SSO/home.png)\n\n1. [最近使ったリソース] から **ボットを選択します**。\n\n1. 左側 **のウィンドウで** [チャネル] を選択します。 \n\n1. [選択 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. このチェック ボックスをオンにして、利用規約 **に同意します**。\n\n1. [同意する] **を選択します**。\n\n      ![利用規約](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. **[保存]** を選択します。\n\n      ![[選択Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行中の Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から HTTPS URL (https to io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、完全修飾ドメイン名です。\n    > これは `WebAppDomain` 、完全修飾ドメイン名で、そのドメインに含 `https://` めはいらない名前です。\n\n1. 作成 **設定** Azure ボットの [構成] を選択 **します**。\n\n1. メッセージング **エンドポイントで、** ngrok から利用可能な HTTPS URL を使用し、URL の最後に **/api/messages を追加します**。\n\n    ![メッセージング エンドポイント](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)\n\n1. **[適用]** を選択します。\n\n    Azure Bot Service でボットを正常にBot Service。\n"
- title: タブの SSO を構成する
  durationInMinutes: 1
  content: "1. [Azure portal](https://portal.azure.com/) にアクセスします。\n\n1. **Azure Active Directory** を選択します。\n\n1. 左側のウィンドウを形成し、[アプリの **登録] を選択します**。\n\n1. ボットを選択します。\n\n1. [ **API の公開] を選択します**。\n\n1. [設定] **を選択します**。\n\n   ![API を公開する](~/assets/images/Tab-ME-SSO/application-id-set.png)\n\n1. の形式 **でアプリケーション ID URI** を設定します `api://your ngrok/botid-{your AppID}`。\n\n   ![リンクの設定](~/assets/images/Tab-ME-SSO/appid-uri1.png)\n    \n1. **[スコープの追加]** を選択します。 \n\n1. 表示されるパネルで、スコープ名 `access_as_user` として **入力します**。\n\n1. 同意 **Whoを設定する?** に設定します`Admins and users`。\n\n1. スコープに適切な値を指定して管理者とユーザーの同意のプロンプトを `access_as_user` 構成するには、フィールドに次の情報を入力します。</br>\n\n   * 管理者の `Teams can access the user’s profile` 同意 **表示名として入力します**。\n\n   * 管理者の `Allows Teams to call the app’s web APIs as the current user` 同意 **の説明として入力します**。\n\n   * [ユーザー `Teams can access the user profile and make requests on the user’s behalf` の **同意] 表示名として入力します**。\n\n   * [ユーザー `Enable Teams to call this app’s APIs with the same rights as the user` の **同意の説明] と入力します**。\n\n1. **[状態]** が **[有効]** に設定されていることを確認してください。\n\n1. [保存 **するスコープの追加** ] を選択します。\n\n   ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope.png)\n\n    > [!NOTE]\n    > スコープ **名は、** 最後に **追加されたアプリケーション ID** URI `/access_as_user` と一致する必要があります。</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) \n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。 \n\n1. 次の各クライアント ID を入力し、承認されたスコープを選択します。</br>\n\n     * `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teamsデスクトップ アプリケーション)\n\n       ![クライアント アプリケーションの追加](~/assets/images/Tab-ME-SSO/add-client-application.png) \n\n     * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams Web アプリケーション)\n\n       ![クライアント アプリケーションの追加](~/assets/images/Tab-ME-SSO/add-client-application21.png) \n    \n\n   次の図は、クライアント **ID を表示します**。\n\n     ![クライアント アプリケーション](~/assets/images/Tab-ME-SSO/client-id-2.png) \n\n1. 左側のパネルで、[API のアクセス **許可] を選択します**。 \n\n   > [!NOTE]\n   > ユーザーは、アプリが別のテナントにAzure AD場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n1. [**Microsoft Graph] を選択します**。\n\n   ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)\n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. 以下のアクセス許可を追加します。</br>\n    * **email**\n    * **offline_access**\n    * **OpenId**\n    * **profile**\n    * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n1. 左側のパネルで、[認証] **を選択** してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する場合に同意する必要があります。\n           \n     1. **[プラットフォームの追加]** を選択します。\n     1. **[Web]** を選びます。\n\n        ![Web](~/assets/images/Tab-ME-SSO/configure-platform1.png)\n\n     1. リダイレクト **URI を次のように** 入力します `https://token.botframework.com/.auth/web/redirect`。\n\n     1. 次 **のチェック ボックスをオンにして** 、暗黙的な付与とハイブリッド フローを有効にします。\n         * **ID トークン**\n         * **アクセス トークン**\n\n     1. **[構成]** を選択します。\n\n        ![Web の構成](~/assets/images/Tab-ME-SSO/configure-web.png)\n\n**マニフェストを更新するには**\n\n1. 左側 **のウィンドウから** [マニフェスト] を選択します。\n\n1. 構成項目が \" **accessTokenAcceptedVersion\": 2 に設定されている必要があります**。 指定しない場合は、その値を **2 に変更し、[** 保存] を **選択します**。 \n\n   > [!Tip]\n   > 既にボットをテストしている場合は、Teamsサインアウトして、ボットからサインアウトする必要Teams。 次に、もう一度サインインして、この変更を表示します。\n\n   ![マニフェストを更新する](~/assets/images/bots/update-manifest.png)</br>\n\n**接続をBot Serviceするには**\n\n1. [構成] **ページ [** > **OAuth 接続の追加] ページに移動設定**。\n\n1. [**OAuth 接続の追加] を設定**。\n\n1. [ **新しい接続設定] で**、次の詳細を入力します。\n\n    | Field | 値または説明 |\n    | ----- | ----- |\n    | **名前** | 新しい接続設定の名前を入力します。 ボット サービス コードの設定で名前を使用できます。 |\n    | **Service Provider** | [**V2 Azure Active Directory選択します**。 |\n    | **クライアント ID** | 以前は Microsoft **App ID として保存されています**。 |\n    | **クライアント シークレット** | 以前はクライアント シークレット ID **の** 値として保存されています。 |\n    | **トークンExchange URL** | API エンドポイント **の公開中に** 以前に取得したアプリケーション ID URI を使用します。 |\n    | **テナント ID** | 共通と **入力します**。 |\n    | **Scope** | [ **User.Read]** と入力し、 **ダウンストリーム** API へのアクセス許可を指定している間に選択したスコープを追加します。 |\n\n1. **[保存]** を選択します。\n\n    <img src=\"~/assets/images/Tab-ME-SSO/new-connection-setting.png\" alt=\"Bot Service connection\" width=\"300\"/>\n"
- title: アプリの設定を設定する
  durationInMinutes: 1
  content: "1. 複製された **リポジトリの appsettings.json** に移動します。\n\n    ![アプリ設定の場所](~/assets/images/Tab-ME-SSO/app-setting-folder.png)\n\n1. アプリ **で appsettings.json** **を開** Visual Studio Code情報を更新します。  \n\n     * ボット `\"MicrosoftAppId\"` の **Microsoft アプリ ID に設定します**。\n     * ボット `\"MicrosoftAppPassword\"` のクライアント シークレット ID 値に設定します。\n     * ngrok `\"DOMAIN-NAME\"` URL に設定します。\n     * OAuth `\"ConnectionName\"` 接続設定の名前に設定します。\n     * ボット `\"ClientId\"` の **Microsoft アプリ ID に設定します**。\n     * ボット `\"AppSecret\"` のクライアント シークレット ID 値に設定します。\n     * の `\"ApplicationIdURI\"` 形式で設定します `api://584f****.ngrok.io/botid-{AppID}`。\n\n    ![アプリの設定](~/assets/images/Tab-ME-SSO/app-setting1.png)\n"
- title: マニフェスト ファイルのセットアップ
  durationInMinutes: 1
  content: "1. 複製された **リポジトリの manifest.json** に移動します。\n\n    ![マニフェスト ファイルの場所](~/assets/images/Tab-ME-SSO/folder-manifest.png)\n\n1. マニフェスト **.json を開****き、** Visual Studio Codeを変更します。\n\n     * すべての出現回数を `[DOMAIN-NAME]` ngrok ドメイン名に置き換える。 \n     * すべての出現回数をボット `[YOUR-MICROSOFT-APP-ID]` の **Microsoft App ID に置き換える**。\n\n         > [!NOTE]\n         > シナリオによっては、複数回`[YOUR-MICROSOFT-APP-ID]``[DOMAIN-NAME]`発生する場合があります。\n\n     * として `\"resource\"` 設定します `api://584f****.ngrok.io/botid-{AppID}`。</br>\n    \n    ![マニフェスト イメージ 2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: サービスのビルドと実行
  durationInMinutes: 1
  content: "**2019 またはコマンド ラインを使用してサービスVisual Studio実行するには**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. **2019 Visual Studioを起動します**。\n   1. **[FileOpen Project** >  > **/ソリューション] に移動します**。\n\n      ![ファイルを開く](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. csharp **フォルダーから [アプリ SSO Sample.csproj** ファイル **] を選択** します。\n\n      ![Project フォルダー](~/assets/images/Tab-ME-SSO/project-folder1.png)\n\n   1. 次の出力が表示されます。\n\n      ![トークン ファイル](~/assets/images/Tab-ME-SSO/output1.png)\n\n   1. **F5 キーを押** してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      ![信頼証明書](~/assets/images/Tab-ME-SSO/certificate.png)\n\n      Web ページが開き、ボット **が準備完了です。**\n\n      ![アプリの準備完了](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) \n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウ **で csharp** フォルダーに移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: アップロード SSO アプリを使用してTeams
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで、 **TeamsAppManifest の csharp >アプリ SSO >に移動します**。\n\n1. マニフェスト フォルダーに.zipファイルを含むフォルダーを **作成** します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip ファイルの選択](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)\n\n1. [次へ] **Microsoft Teams**。\n\n1. [ストア **] を選択します**。\n1. [アプリ **の管理] を選択します**。\n1. [**アプリ の発行**] を選択します。\n\n   ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)\n\n1. **[カスタム アプリをアップロードする]** を選択します。 \n\n   ![アップロードカスタム アプリ](~/assets/images/Tab-ME-SSO/upload-custom-app.png)\n\n1. [ **開く** ] を選択して.zip作成したファイルを **アップロード** します。\n\n   ![Zip ファイルの選択](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)\n\n1. **[追加]** を選択します。\n\n   ![アプリを追加する](~/assets/images/Tab-ME-SSO/add-sso-app.png)\n\n1. ボットにメッセージを送信します。 \n1. ボットはシングル サインオンを実行し、トークンを表示するためのオプション プロンプトと共にプロファイル カードを表示します。\n\n   ![プロファイル カード](~/assets/images/Tab-ME-SSO/Congratulation-image.png)\n\n1. [ **はい]** を選択してトークンを表示するか **、[いいえ] を選択して** チャットを続行します。\n  \n   ![トークン ビュー](~/assets/images/Tab-ME-SSO/token-view1.png)\n\n  1. SSO が実行されていない場合、ボットはタブの既定の認証方法を実行します。\n\n      ![SSO なし](~/assets/images/Tab-ME-SSO/not-login11.png)\n\n  1. 省略記号 **... を選択して** 、メッセージング拡張機能を開きます。\n\n      ![メッセージング拡張機能](~/assets/images/Tab-ME-SSO/message-extension.png)\n  \n  1. 新しい SSO アプリケーションを選択します。\n\n      ![SSO アプリ](~/assets/images/Tab-ME-SSO/recent-app-sso.png)\n\n  1. [ **サインイン] を選択します**。\n\n      ![サインインする](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)\n\n  1. [サインイン] ボックスに資格情報を入力し、[次へ] を **選択します**。\n\n      ![[サインイン] ボックス](~/assets/images/Tab-ME-SSO/sign-in-box.png)\n  \n  1. **[同意する]** を選択します。\n\n      ![同意ボックス](~/assets/images/Tab-ME-SSO/concent-box.png)\n\n  1. メッセージング拡張機能を開き、アプリケーションを選択します。\n\n  1. [検索] ボックスでプロファイルを選択します。 次のようなものが表示されます。\n\n      ![プロファイル](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)\n\n  1. アプリケーション `https://profile.botframework.com` に送信してプロファイル カードを取得します。\n   \n      ![プロファイル カード](~/assets/images/Tab-ME-SSO/profile-card.png)\n"
- title: 完全なチャレンジ
  durationInMinutes: 1
  content: >
    このようなことを思い付い出しましたか?

       ![SSO プロファイル](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
- content: タブおよびメッセージング拡張機能アプリの SSO の使用を開始するチュートリアルを完了しました。
