### YamlMime:Tutorial
title: タブとメッセージ拡張機能の SSO
metadata:
  title: タブとメッセージ拡張機能の SSO
  description: この学習モジュールでは、タブに対して Azure Active Directory シングル サインオン (Azure AD SSO) を設定する方法について説明します。
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/tab-sso-overview.md
  nextTutorialTitle: 詳細については、タブの SSO 認証に関するページを参照してください。
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 3e4b40e958ccb9a3702232603e97dc3979c4cdd9
  ms.sourcegitcommit: 88fb2e9a18de3bd84e3c604ff235fc753c8de8f5
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/02/2022
  ms.locfileid: "68818980"
items:
- durationInMinutes: 1
  content: "Azure Active Directory シングル サインオン (Azure AD SSO) は、Teams でユーザーを認証するのに役立ちます。 \n\n**Azure AD SSO の主な側面**:\n\n * ユーザーが最初のサインイン後に自動的にサインインできるようにします。\n * ユーザーが資格情報を再度入力せずに他のデバイスにサインインできるようにします。\n * サインインしているユーザーのトークンを取得します。\n\nこのステップ バイ ステップ ガイドは、Azure AD SSO 認証を有効にするタブとメッセージ拡張機能を作成するのに役立ちます。 次の出力が表示されます。\n\n  :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/hello-megan-profile245_1.png\" alt-text=\"おめでとうございます。\":::\n"
- title: 前提条件
  durationInMinutes: 1
  content: "次のツールをインストールし、開発環境を設定していることを確認します。  \n\n| &nbsp; | インストール | 使用するには... |\n | --- | --- | --- |\n | **必須** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams は、チャット、会議、通話、すべてのアプリを通じて作業するすべてのユーザーと 1 か所で共同作業を行います。|\n | &nbsp; | [Microsoft 365 開発者アカウント](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | アプリをインストールするための適切なアクセス許可を持つ Teams アカウントにアクセスします。 |\n | &nbsp; | [.NET Core SDK バージョン 3.1](https://dotnet.microsoft.com/en-us/download) | ローカル デバッグと Azure Functions アプリのデプロイ用にカスタマイズされたバインド。 .NET 3.1 (以降) SDK をグローバルにインストールしていない場合は、移植可能なバージョンをインストールできます。 |\n | &nbsp; | [Visual Studio 2022 バージョン 17.3](https://visualstudio.microsoft.com)<br> 次の 2 つのワークロードのいずれかをインストールします。<br> • ASP.NET と Web 開発 <br> • .NET Core クロスプラットフォーム開発 | Visual Studio 2022 でエンタープライズ バージョンをインストールし、ワークロードをインストールできます。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams アプリの機能 (会話型ボット、メッセージ拡張機能、受信 Webhook) には、受信接続が必要です。 トンネルは、開発システムを Teams に接続します。 タブのみを含むアプリには必要ありません。 このパッケージはプロジェクト ディレクトリ内にインストールされます (npm `devDependencies` を使用)。 |\n\n  > [!NOTE]\n  > ngrok をダウンロードしたら、サインアップして [authtoken を](https://ngrok.com/download)インストールします。\n"
- title: ローカル環境を設定する
  durationInMinutes: 1
  content: "リポジトリをローカル GitHub に複製 `Microsoft-Teams-Samples` します。  \n\n 1. [Microsoft Teams サンプル](https://github.com/OfficeDev/Microsoft-Teams-Samples)を開きます。\n 1. [ **コード] を選択します**。\n 1. ドロップダウン メニューから、[ **GitHub Desktop で開く**] を選択します。\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/clonerepository_1.png\" alt-text= \"Clone repository.\":::\n\n 1. [ **複製] を選択します**。 \n"
- title: Azure AD ポータルでボットを作成して登録する
  durationInMinutes: 5
  content: "Microsoft Azure ADでボットを作成して登録するには、次の手順に従います。\n\n* Azure Bot リソースを作成して、ボットを Azure Bot Serviceに登録します。\n* ボットの SSO 認証を有効にするクライアント シークレットを作成します。\n* Microsoft Teams チャネルを追加して、ボットを Teams チャネルにデプロイします。\n* Web サーバーのエンドポイントへの ngrok トンネルを作成します。\n* 作成した ngrok トンネルにメッセージング エンドポイントを追加します。\n\n**Azure Bot リソースを作成するには**\n\n1. [Microsoft Azure portal](https://portal.azure.com/)に移動します。\n1. **[リソースの作成]** を選択します。\n1. 検索ボックスに「 **Azure Bot**」と入力します。\n1. **Enter** キーを押します。\n1. [ **Azure Bot**] を選択します。\n1. **[作成]** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure-bot_1.png\" alt-text=\"Azure ボット。\":::\n     \n**[Azure Bot の作成** ] ウィンドウが表示されます。\n\n1. [Bot handle]\\(ボット ハンドル\\) に必要な **ボット ハンドル** 名を入力します。\n1. それぞれのドロップダウン リストから **[サブスクリプション]** と [ **リソース] グループ** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure-subscription.png\" alt-text=\"Azure サブスクリプション。\":::\n\n   新しいリソース グループを作成できます。 [ **新規作成]** を選択>リソース名を入力> **[OK] を選択します**。 [ **新しいリソース グループの場所** ] ドロップダウン リストから必要な場所を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"新しいリソース グループの場所を示すスクリーンショット。\":::\n\n1. [ **Microsoft アプリ ID** ] セクションで、既定で [ **新しい Microsoft アプリ ID の作成** ] が選択されています。 \n\n   [ **既存のアプリの登録を使用する** ] を選択し、 **アプリ ID**、 **アプリ テナント ID**、 **MSI リソース ID を** 入力できます。\n\n   > [!NOTE]\n   > 同じ **Microsoft アプリ ID** を持つ複数のボットを作成することはできません。\n\n1. [**マルチテナント**] として [**アプリの種類]** を選択します。\n1. **[確認 + 作成]** を選びます。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/tenant-review.png\" alt-text=\"テナント レビュー。\":::\n\n1. 検証に合格した場合は、[作成] を選択 **します**。\n\n    ボット サービスがプロビジョニングされるまで少し時間がかかります。\n\n1. [**リソースに移動**] を選びます。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/go-to-resource_1.png\" alt-text=\"リソースに移動します。\":::\n\n  Azure ボットが作成され、Azure ボットに **リソース グループ** と **サブスクリプション ID が** 表示されます。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-overview_1.png\" alt-text=\"アプリの概要。\" lightbox=\"./assets/images/Tab-ME-SSO/app-overview_1.png\":::\n    \n**クライアント シークレットを作成するには**\n\n  新しい **Microsoft アプリ ID** を作成した場合は、次の手順を実行します。\n\n1. 左側のウィンドウで、[構成] を選択 **します**。 \n\n   > [!TIP]\n   > 今後参照するために **、Microsoft アプリ ID** または **クライアント ID を** 保存します。\n\n1. **[Microsoft アプリ ID] の** 横にある [管理] を選択 **します**。\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/manage-bot-label_1.png\" alt-text=\"管理オプションの選択を示すスクリーンショット。\":::\n\n1. [ **クライアント シークレット** ] セクションで、[ **新しいクライアント シークレット**] を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/newclientsecret_1.png\" alt-text=\"新しいクライアント シークレットの選択を示すスクリーンショット。\":::\n\n   **[クライアント シークレットの追加]** ウィンドウが表示されます。  \n\n1. クライアント シークレットの **説明** を入力します。\n\n1. **[追加]** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-client-id.png\" alt-text=\"クライアント シークレットをアプリに追加します。\":::\n\n1. [ **クリップボードにコピー] を** 選択して **、値** の詳細をコピーします。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/client-ids_1.png\" alt-text=\"クライアント シークレットの値。\":::\n     \n   > [!TIP]\n   > 後で参照するために、 **クライアント シークレットの** 値またはアプリ パスワードを保存します。\n\n**Microsoft Teams チャネルを追加するには**\n\n1. [**ホーム**] を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/home_1.png\" alt-text=\"ホーム ページ\":::\n   \n1. [ **最近使ったリソース**] からボットを選択します。\n\n1. 左側のウィンドウで [ **チャネル** ] を選択します。 \n\n1. **Microsoft Teams を選択する** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/channel-teams_1.png\" alt-text=\"チャネルで Teams を選択する\":::\n\n1. チェックボックスをオンにして **、利用規約** に同意します。\n\n1. [ **同意する] を選択します**。\n\n   :::image type=\"content\" source=\"~/assets/images//Tab-ME-SSO/terms.png\" alt-text=\"サービス利用規約\":::\n\n1. **[適用]** を選択します。\n\n   :::image type=\"content\" source=\"~/assets/images//Tab-ME-SSO/apply.png\" alt-text=\"Teams の選択を示すスクリーンショット。\":::\n\n**ローカル Web サーバーのトンネルを作成するには**\n\nngrok を使用して、ローカルで実行されている Web サーバーのパブリックに利用可能な HTTPS エンドポイントへのトンネルを作成します。 ngrok で次のコマンドを実行します。\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n > [!TIP]\n > **ERR_NGROK_4018** が発生した場合は、コマンド プロンプトに表示されている手順に従ってサインアップし、ngrok を認証します。 次に、 `ngrok http --host-header=localhost`\n\n**メッセージング エンドポイントを追加するには**\n\n1. ngrok から、HTTPS URL (https から io) をコピーします。\n\n    ![ngrok HTTPS URL](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > ngrok の HTTPS URL は、 を含 `https://`まないドメイン名です。\n\n1. **[構成設定]** で、**[追加]** を選択します。\n\n1. **メッセージング エンドポイント** で、ngrok から HTTPS URL を追加し、URL の末尾に **/api/messages** を追加します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/messaging-endpoint_1.png\" alt-text=\"メッセージング エンドポイント。\":::\n    \n1. **[適用]** を選択します。\n\n    Azure Bot サービスでボットを正常に設定しました。\n"
- title: タブの SSO を構成する
  durationInMinutes: 1
  content: "1. [Azure ポータル](https://portal.azure.com/)に移動します。\n\n1. **Azure Active Directory** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure directory.png\" alt-text=\"azure ディレクトリ。\":::\n\n1. 左側のウィンドウで、[**アプリの登録**] を選択します。\n\n1. ボットを選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app reg.png\" alt-text=\"app reg.\":::\n\n1. [ **管理**] で、[ **API の公開] を選択します**。\n\n1. [ **設定] を選択します**。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/application-id-set_1.png\" alt-text=\"API を公開します。\":::\n   \n1. **アプリケーション ID URI を** の形式`api://your ngrok/botid-{your AppID}`で設定します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/expose_2.png\" alt-text=\"リンクを設定します。\":::\n\n   次の図は、ドメイン名を示しています。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/app_id_1.png\" alt-text=\"アプリ URI ID\":::\n\n1. **[スコープの追加]** を選択します。 \n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/selectscope_1.png\" alt-text=\"[スコープの追加]\":::\n\n**[スコープの追加]** ウィンドウが表示されます。\n\n1. スコープを構成するには、次の詳細を入力します。\n\n   * **スコープ名** として「」と入力`access_as_user`します。\n\n   * [ **同意できるユーザー]** を に `Admins and users`設定します。\n\n1. スコープの適切な値 `access_as_user` を使用して管理者とユーザーの同意プロンプトを構成するには、フィールドに次の情報を指定します。</br>\n\n   * **同意の表示名管理** 入力`Teams can access the user’s profile`します。\n\n   * **同意の説明として「管理**」と入力`Allows Teams to call the app’s web APIs as the current user`します。\n\n   * **[ユーザーの同意] 表示名** として入力`Teams can access the user profile and make requests on the user’s behalf`します。\n\n   * **[ユーザーの同意の説明]** として入力`Enable Teams to call this app’s APIs with the same rights as the user`します。\n\n1. [ **状態]** を **[有効]** に設定します。\n\n1. **[スコープの追加]** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-a-scope_1.png\" alt-text=\"スコープ。\":::\n\n    > [!NOTE]\n    > **スコープ名** は、最後に追加された **アプリケーション ID** URI と`/access_as_user`一致する必要があります。</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-a-scope-final1_1.png\" alt-text=\"Scopes2。\":::\n\n1. **[承認済みのクライアント アプリケーション]** セクションで、アプリの Web アプリケーションに対して承認するアプリケーションを特定します。 \n\n1. **[クライアント アプリケーションの追加]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/selectclientapp_1.png\" alt-text=\"クライアント アプリケーションの選択を示すスクリーンショット。\":::\n\n1. 次の各クライアント ID を入力し、承認されたスコープを選択します。</br>\n\n     * 「 **クライアント ID**: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` for Teams mobile or desktop application」と入力します。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"クライアント アプリケーションの追加を示すスクリーンショット\":::\n\n     * 「 **クライアント ID**:`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` for Teams Web アプリケーション」と入力します。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"クライアント ID の追加のスクリーンショット。\":::\n           \n1.  [ **承認されたスコープ] を選択します**。\n\n    次の図は、 **クライアント ID を** 表示します。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/client-id-2.png\" alt-text=\"クライアント アプリを示すスクリーンショット。\"::: \n\n1. 左側のウィンドウで、[ **API アクセス許可**] を選択します。 \n\n   > [!NOTE]\n   > ユーザーは、Azure AD アプリが別のテナントに登録されている場合にのみ、これらのアクセス許可に同意する必要があります。\n\n1. [**アクセス許可を追加**] を選択します。\n\n1. **[Microsoft Graph]** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/microsoft-graph_1.png\" alt-text=\"microsoft-graph。\":::\n\n1. [**委任されたアクセス許可**] を選択します。\n\n1. 次の API アクセス許可を追加します。</br>\n    * **email**\n    * **offline_access**\n    * **Openid**\n    * **profile**\n    * **User.Read**\n\n1. **[アクセス許可の追加]** を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"他のアクセス許可の追加を示すスクリーンショット。\":::\n\n1. 左側のウィンドウで、[ **認証** ] を選択してリダイレクト URI を設定します。 \n\n   > [!NOTE]\n   > アプリに IT 管理者の同意が付与されていない場合、ユーザーはアプリを初めて使用する際に同意を提供する必要があります。\n           \n     1. [プラットフォーム >  **Web の追加] を** 選択します。\n\n        :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/configure-platform1_1.png\" alt-text=\"Web プラットフォーム。\":::\n\n     1. ドメイン名に追加 `auth-end` して、アプリのリダイレクト URI を入力します。</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 次のチェック ボックスをオンにして、 **暗黙的な許可フローとハイブリッド フロー** を有効にします。\n         * **ID トークン (暗黙的なフローに使用)**\n         * **アクセス トークン (暗黙的およびハイブリッド フローに使用)**\n\n     1. **[構成]** を選択します。\n\n        :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/configure-web_1.png\" alt-text=\"Web を構成します。\":::\n\n**マニフェストを更新するには**\n\n1. 左側のウィンドウで **[マニフェスト]** を選択します。\n\n1. 構成項目が次に設定されていることを確認します **\"accessTokenAcceptedVersion\": 2**。 それ以外の場合は、値を **2** に変更し、[保存] を選択 **します**。 \n\n   > [!Tip]\n   > Teams でボットを既にテストしている場合は、ボットからサインアウトして Teams からサインアウトする必要があります。 その後、もう一度サインインして、この変更を確認します。\n\n   :::image type=\"content\" source=\"./assets/images/bots/update-manifest.png\" alt-text= \"update manifest.\":::\n\n**Bot Service接続を設定するには**\n\n1. **[構成] ページ** >  [**OAuth 接続設定の追加]** に移動します。\n\n1. **[OAuth 接続設定の追加]** を選択します。\n\n1. [ **新しい接続設定]** に、次の詳細を入力します。\n\n    | フィールド | 値または説明 |\n    | ----- | ----- |\n    | **名前** | 新しい接続設定の名前を入力します。 名前は、ボット サービス コードの設定で使用できます。 |\n    | **サービス プロバイダー** | [ **Azure Active Directory V2**] を選択します。 |\n    | **クライアント ID** | 以前に **Microsoft アプリ ID** として保存されています。 |\n    | **クライアント シークレット** | クライアント シークレット ID の **値** として以前に保存されています。 |\n    | **トークン交換 URL** | API エンドポイントの公開中に前に取得した **アプリケーション ID URI を** 使用します。 |\n    | **テナント ID** | **「common」と入力します**。 |\n    | **Scope** | **User.Read** と入力し、ダウンストリーム API へのアクセス許可を指定するときに選択したすべての **スコープ** を追加します。 |\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/new-connection-setting_1.png\" alt-text=\"oath 設定。\":::\n\n 1. **[保存]** を選択します。\n"
- title: アプリ設定を設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリの **appsettings.json** に移動します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-setting-folder_1.png\" alt-text=\"アプリの場所。\":::\n\n1. Visual Studio Code で **appsettings.json** を開きます。\n\n1. 次の情報を更新します。  \n\n     * をボットの **Microsoft アプリ ID に** 置き換えます`\"MicrosoftAppId\"`。\n     * をボットのクライアント シークレット ID **値** に置き換えます`\"MicrosoftAppPassword\"`。\n     * を ngrok URL に置き換えます `\"SiteUrl\"` 。\n     * を OAuth 接続設定の名前に置き換えます `\"ConnectionName\"` 。\n     * を、アプリが使用されているテナントのテナント ID に置き換えます `\"TenantId\"` 。\n     * をボットの **Microsoft アプリ ID に** 置き換えます`\"ClientId\"`。\n     * をボットのクライアント シークレット ID **値** に置き換えます`\"AppSecret\"`。\n     * を の`api://*******.ngrok.io/botid-{AppID}`形式で置き換えます`\"ApplicationIdURI\"`。\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-setting1.png\" alt-text=\"アプリの設定。\":::\n"
- title: マニフェスト ファイルを設定する
  durationInMinutes: 1
  content: "1. 複製されたリポジトリで に `manifest.json` 移動します。\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/folder-manifest_1.png\" alt-text=\"マニフェスト ファイルの場所。\":::\n\n1. **Visual Studio Code** でを開`manifest.json`き、次の変更を行います。\n\n     * を ngrok URL に置き換えます `DOMAIN-NAME` 。\n     * をボットの **Microsoft アプリ ID に** 置き換えます`YOUR-MICROSOFT-APP-ID`。\n\n         > [!NOTE]\n         > シナリオ `[YOUR-MICROSOFT-APP-ID]` に応じて、 `[DOMAIN-NAME]` 複数回発生する可能性があります。\n\n     * を として`api://*******.ngrok.io/botid-{AppID}`置き換えます`\"resource\"`。</br>\n    \n    ![マニフェスト イメージ2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: サービスをビルドして実行する
  durationInMinutes: 1
  content: "**最新バージョンの Visual Studio またはコマンド ラインを使用してサービスをビルドして実行するには**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs2019)\n\n   1. 最新バージョンの Visual Studio を起動します。\n   1. [**ファイル]**[**プロジェクト/ソリューション****を** > 開く]  >  を選択します。\n\n      ![ファイルを開く](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. **csharp** フォルダーから **[App SSO Sample.csproj** ファイル] を選択します。\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/project-folder1_1.png\" alt-text= \"Project folder.\":::\n\n   1. **F5** キーを押してプロジェクトを実行します。\n\n   1. 以下のダイアログが表示されたら、**[はい]** を選択します:\n\n      :::image type=\"content\" source=\"./assets/images/sbs-outgoing-webhooks/outgoing-webhook-certificate.png\" alt-text=\"信頼証明書。\":::\n\n      Web ページに、ボットの **準備ができた** というメッセージが表示されます。\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/bot-completion-explorer.png\" alt-text=\"アプリの準備完了。\":::\n\n    \n# <a name=\"command-line\"></a>[コマンド ライン](#tab/cli)\n\nコマンド プロンプト ウィンドウで **csharp** フォルダーに移動し、次のコマンドを入力します。\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: SSO アプリを Teams にアップロードする
  durationInMinutes: 1
  content: "1. 複製したリポジトリで、 **csharp > App SSO Sample > TeamsAppManifest** に移動します。\n\n1. **Manifest** フォルダーに存在する次のファイルを含む.zipを作成します。 \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/upload-tab-me-sso_1.png\" alt-text=\"マニフェストをアップロードします。\":::\n\n1. **Microsoft Teams** に移動します。\n\n1. [ **アプリ] [アプリ** > **の管理] の順に選択します**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manageapps_1.png\" alt-text=\"アプリを管理する\":::\n\n1. [**アプリのアップロード****] [カスタム アプリ** > のアップロード] を選択します。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/uploadapp_1.png\" alt-text=\"カスタム アプリをアップロードする\":::\n\n1. [ **開く** ] を選択して、 **Manifest** フォルダーに作成した.zip ファイルをアップロードします。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/upload-tab-me-sso-open_1.png\" alt-text=\"アプリをアップロードします)。\":::)\n\n1. **[追加]** を選択します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-sso-app_1.png\" alt-text=\"アプリを追加します。\":::\n\n1. ボットにメッセージを送信します。 \n1. ボットは SSO を実行し、トークンを表示するためのオプション プロンプトと共にプロファイル カードを表示します。\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/Congratulation-image_1.png\" alt-text=\"おめでとうございます。\":::\n\n1. [ **はい** ] を選択してトークンを表示するか **、[いいえ]** を選択してチャットを続行します。\n  \n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/token-view1_1.png\" alt-text=\"トークン ビュー。\":::\n\n  1. SSO が実行されていない場合、ボットはタブの既定の認証方法を実行します。\n\n     :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/not-login11_1.png\" alt-text=\"ログインしません。\":::\n\n  1. 省略記号 ●●● を選択して、メッセージ拡張アプリを開きます。\n         \n  1. 新しい SSO アプリケーションを選択します。\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/recent-app-sso_1.png\" alt-text=\"SSO アプリ。\":::\n\n  1. [ **サインイン] を選択します**。\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/sign-in-sso1_1.png\" alt-text= \"sign in.\":::\n\n  1. **[サインイン**] ウィンドウに資格情報を入力し、[**次へ**] を選択します。\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/sign-in-box.png\" alt-text= \"sign-in box.\":::\n  \n  1. **[同意する]** を選択します。\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/consent-box.png\" alt-text= \"consent box.\":::\n\n  1. メッセージ拡張機能とアプリケーションを選択します。\n\n  1. 検索ボックスでプロファイルを選択します。 次の出力が表示されます。\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/hello-megan-profile_1.png\" alt-text= \"Profile.\":::\n\n  1. アプリケーションに送信 `https://profile.botframework.com` してプロファイル カードを取得します。\n   \n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/profile-card_1.png\" alt-text= \"Profile card.\":::\n"
- title: 課題の完了
  durationInMinutes: 1
  content: >
    あなたはこのような出力を思いついたのですか?


    :::image type="content" source="./assets/images/Tab-ME-SSO//hello-megan-profile245_1.png" alt-text="おめでとうございます。":::
- content: チュートリアルを完了して、タブおよびメッセージ拡張機能アプリの SSO の使用を開始しました。
